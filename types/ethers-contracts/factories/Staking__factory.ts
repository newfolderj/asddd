/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Staking, StakingInterface } from "../Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_manager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stablecoin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_protocolToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountToLock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountLeft",
        type: "uint256",
      },
    ],
    name: "INSUFFICIENT_COLLATERAL",
    type: "error",
  },
  {
    inputs: [],
    name: "ACTIVE_PERIODS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERIOD_LENGTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_PROPOSAL_LOCK_AMOUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256[]",
            name: "lockId",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "depositId",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "rewardChainId",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "rewardAsset",
            type: "address[]",
          },
        ],
        internalType: "struct Staking.ClaimParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentDepositId",
    outputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentLockId",
    outputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unlockTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "withdrawn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getActiveTranches",
    outputs: [
      {
        internalType: "uint256[3]",
        name: "tranches",
        type: "uint256[3]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_blockNumber",
        type: "uint256",
      },
    ],
    name: "getActiveTranches",
    outputs: [
      {
        internalType: "uint256[3]",
        name: "tranches",
        type: "uint256[3]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllLockRecords",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amountLocked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalAvailable",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
        ],
        internalType: "struct Staking.LockRecord[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    name: "getAvailableToClaim",
    outputs: [
      {
        internalType: "uint256",
        name: "availableToClaim",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getLockRecords",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amountLocked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalAvailable",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
        ],
        internalType: "struct Staking.LockRecord[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "getUnlocked",
    outputs: [
      {
        internalType: "uint256",
        name: "stablecoinUnlocked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolUnlocked",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserDepositIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserDepositRecords",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "staker",
            type: "address",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unlockTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "withdrawn",
            type: "uint256",
          },
        ],
        internalType: "struct Staking.DepositRecord[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "individualStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountToLock",
        type: "uint256",
      },
    ],
    name: "lock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "locks",
    outputs: [
      {
        internalType: "uint256",
        name: "amountLocked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAvailable",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumProtocolStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumStablecoinStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_amount",
        type: "uint64",
      },
    ],
    name: "payInsurance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lockId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_amount",
        type: "uint64",
      },
    ],
    name: "reward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stablecoin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_stablecoinAmount",
        type: "uint256",
      },
    ],
    name: "stablecoinToProtocol",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_unlockTime",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stakeProtocol",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stakeStablecoin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_lockIds",
        type: "uint256[]",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_depositIds",
        type: "uint256[]",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040526000805560006001553480156200001a57600080fd5b5060405162003b1738038062003b178339810160408190526200003d9162000091565b6001600160a01b03928316608052600c80549284166001600160a01b0319938416179055600d8054919093169116179055620000db565b80516001600160a01b03811681146200008c57600080fd5b919050565b600080600060608486031215620000a757600080fd5b620000b28462000074565b9250620000c26020850162000074565b9150620000d26040850162000074565b90509250925092565b6080516139e1620001366000396000818161078f01528181610ad8015281816111080152818161131301528181611a0901528181611d1f01528181611f8401528181612273015281816123820152612f0f01526139e16000f3fe6080604052600436106101d85760003560e01c806394e11ca811610102578063b4104d1011610095578063df7bb61f11610064578063df7bb61f146105e0578063e7a891b914610600578063e9cbd82214610617578063f4dadc611461063757600080fd5b8063b4104d1014610568578063c86755071461057e578063d4e4487d14610593578063d86d30a4146105c057600080fd5b8063a6f30ccb116100d1578063a6f30ccb14610486578063ab900a8d146104b3578063b00ea817146102c8578063b02c43d0146104d157600080fd5b806394e11ca8146103cc578063983d95ce146104015780639bfd8d6114610421578063a2cc44971461044e57600080fd5b806330e13a6a1161017a578063675befd211610149578063675befd21461034a578063757c25e51461036a5780638f65ae6f1461038a57806394463bb3146103aa57600080fd5b806330e13a6a146102c85780633e8e42b2146102dd5780633ecbdc9c1461030a5780635d36598f1461032a57600080fd5b80631dd91e34116101b65780631dd91e341461024f57806320755d0014610272578063282d3fdf1461029257806330a5c2f0146102b257600080fd5b80630c51b88f146101dd5780631a465fe1146101ff5780631b35ee561461023c575b600080fd5b3480156101e957600080fd5b506101fd6101f836600461313e565b6106ab565b005b34801561020b57600080fd5b50600d5461021f906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101fd61024a366004613173565b610997565b34801561025b57600080fd5b50610264600381565b604051908152602001610233565b34801561027e57600080fd5b506101fd61028d3660046131ae565b611203565b34801561029e57600080fd5b506102646102ad3660046131c7565b61130f565b3480156102be57600080fd5b5061026460015481565b3480156102d457600080fd5b5061026460c881565b3480156102e957600080fd5b506102fd6102f83660046131f3565b61177b565b6040516102339190613210565b34801561031657600080fd5b506101fd6103253660046131ae565b611903565b34801561033657600080fd5b506101fd610345366004613294565b611a05565b34801561035657600080fd5b50610264610365366004613309565b611f7f565b34801561037657600080fd5b506101fd610385366004613368565b612271565b34801561039657600080fd5b506101fd6103a53660046133b0565b612380565b3480156103b657600080fd5b506103bf612486565b60405161023391906133ee565b3480156103d857600080fd5b506103ec6103e73660046131f3565b61249c565b60408051928352602083019190915201610233565b34801561040d57600080fd5b506101fd61041c366004613294565b61262d565b34801561042d57600080fd5b5061026461043c3660046131f3565b60056020526000908152604090205481565b34801561045a57600080fd5b5061026461046936600461341f565b600660209081526000928352604080842090915290825290205481565b34801561049257600080fd5b506104a66104a1366004613458565b612be1565b604051610233919061347a565b3480156104bf57600080fd5b5061026469021e19e0c9bab240000081565b3480156104dd57600080fd5b506105306104ec3660046131ae565b60026020819052600091825260409091208054600182015492820154600383015460048401546005909401546001600160a01b039384169590931693919290919086565b604080516001600160a01b039788168152969095166020870152938501929092526060840152608083015260a082015260c001610233565b34801561057457600080fd5b5061026460005481565b34801561058a57600080fd5b506104a6612d4b565b34801561059f57600080fd5b506105b36105ae3660046131f3565b612e61565b60405161023391906134da565b3480156105cc57600080fd5b506102646105db3660046131ae565b612e85565b3480156105ec57600080fd5b506103bf6105fb3660046131ae565b612ed6565b34801561060c57600080fd5b50610264624f1a0081565b34801561062357600080fd5b50600c5461021f906001600160a01b031681565b34801561064357600080fd5b506106826106523660046131ae565b6007602052600090815260409020805460018201546002830154600390930154919290916001600160a01b031684565b604080519485526020850193909352918301526001600160a01b03166060820152608001610233565b600c546001600160a01b03848116911614806106d45750600d546001600160a01b038481169116145b6106dd57600080fd5b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018390526001600160a01b038416906323b872dd906064016020604051808303816000875af1158015610749573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076d919061351e565b61077657600080fd5b610783624f1a008261356f565b1561078d57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d43a33ea6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080f9190613583565b61081990826135cb565b431061082457600080fd5b6040805160c081018252338082526001600160a01b038681166020808501918252848601888152436060870190815260808701898152600060a089018181528154825260028087528b83209a518b54908a167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216178c55975160018c01805491909a169816979097179097559251948801949094555160038088019190915592516004870155925160059095019490945581549282529092529190206108eb91613004565b506001600160a01b0383166000908152600b602090815260408083208484529091528120805484929061091f9084906135de565b90915550506001600160a01b0383166000908152600560205260408120805484929061094c9084906135de565b90915550503360009081526006602090815260408083206001600160a01b0387168452909152812080548492906109849084906135de565b9091555050600054600101600055505050565b60005b6109a760208301836135f1565b9050811015610e525760006109bf60208401846135f1565b838181106109cf576109cf613660565b602090810292909201356000818152600290935260409092208054929350916001600160a01b031633149050610a725760405162461bcd60e51b815260206004820152602360248201527f53656e646572206e6f74207374616b6572206f66206465706f7369742072656360448201527f6f7264000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b60005b610a7f85806135f1565b9050811015610e3c576000610a9486806135f1565b83818110610aa457610aa4613660565b905060200201359050600060076000838152602001908152602001600020905080600201548460030154101580610b6e57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d43a33ea6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b589190613583565b8460040154610b6791906135cb565b8160020154115b80610b8e5750600184015460038201546001600160a01b03908116911614155b15610b9a575050610e2a565b60005b610baa60608901896135f1565b9050811015610e26576000610bc260608a018a6135f1565b83818110610bd257610bd2613660565b9050602002016020810190610be791906131f3565b60008581526008602090815260408083208d820135845282528083206001600160a01b0385168452909152812054600186015492935067ffffffffffffffff1691610c3590620186a061368f565b6002890154610c4e9067ffffffffffffffff851661368f565b610c5b90620186a061368f565b610c6591906136a6565b60008a81526004602090815260408083208a845282528083208f820135845282528083206001600160a01b038816845290915290205490915067ffffffffffffffff908116908216811015610e0f576000610cc082846136ba565b905080600460008d815260200190815260200160002060008a815260200190815260200160002060008f6040013581526020019081526020016000206000876001600160a01b03166001600160a01b0316815260200190815260200160002060008282829054906101000a900467ffffffffffffffff16610d4191906136e2565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508060096000336001600160a01b03166001600160a01b0316815260200190815260200160002060008f6040013581526020019081526020016000206000876001600160a01b03166001600160a01b0316815260200190815260200160002060008282829054906101000a900467ffffffffffffffff16610de791906136e2565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550505b505050508080610e1e90613703565b915050610b9d565b5050505b80610e3481613703565b915050610a75565b5050508080610e4a90613703565b91505061099a565b506000610e6260608301836135f1565b905067ffffffffffffffff811115610e7c57610e7c61373b565b604051908082528060200260200182016040528015610ee557816020015b60408051606081018252600080825260208083018290529282015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909201910181610e9a5790505b50905060005b610ef860608401846135f1565b905081101561110557336000908152600960209081526040808320868201358452909152812081610f2c60608701876135f1565b85818110610f3c57610f3c613660565b9050602002016020810190610f5191906131f3565b6001600160a01b03168152602081019190915260400160009081205467ffffffffffffffff169150819003610fc85760405162461bcd60e51b815260206004820152601460248201527f416d6f756e7420746f20636c61696d20697320300000000000000000000000006044820152606401610a69565b6040518060600160405280336001600160a01b03168152602001858060600190610ff291906135f1565b8581811061100257611002613660565b905060200201602081019061101791906131f3565b6001600160a01b031681526020018267ffffffffffffffff1681525083838151811061104557611045613660565b6020908102919091018101919091523360009081526009825260408082208782013583529092529081208161107d60608801886135f1565b8681811061108d5761108d613660565b90506020020160208101906110a291906131f3565b6001600160a01b03168152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff9290921691909117905550806110fd81613703565b915050610eeb565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638406c0796040518163ffffffff1660e01b8152600401602060405180830381865afa158015611164573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611188919061376a565b6001600160a01b031663b29aaf2d3484604001358460405180602001604052806000815250336040518663ffffffff1660e01b81526004016111cd94939291906137eb565b6000604051808303818588803b1580156111e657600080fd5b505af11580156111fa573d6000803e3d6000fd5b50505050505050565b600d60009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611256573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061127a919061388f565b61128590600a6139d2565b6112909060c861368f565b8110156112df5760405162461bcd60e51b815260206004820152601c60248201527f42454c4f575f4d494e494d554d5f50524f544f434f4c5f5354414b45000000006044820152606401610a69565b60006112e9612486565b600d5490915061130b906001600160a01b0316838360005b60200201516106ab565b5050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663cb23bcb56040518163ffffffff1660e01b8152600401602060405180830381865afa15801561136f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611393919061376a565b6001600160a01b0316336001600160a01b0316146113f35760405162461bcd60e51b815260206004820152601460248201527f4f6e6c7920726f6c6c75702063616e206c6f636b0000000000000000000000006044820152606401610a69565b816000036114435760405162461bcd60e51b815260206004820152601c60248201527f416d6f756e7420746f206c6f636b206d757374206e6f742062652030000000006044820152606401610a69565b600c546001600160a01b038481169116148061146c5750600d546001600160a01b038481169116145b6114de5760405162461bcd60e51b815260206004820152602960248201527f43616e206f6e6c79206c6f636b20737461626c65636f696e206f722070726f7460448201527f6f636f6c546f6b656e00000000000000000000000000000000000000000000006064820152608401610a69565b60006114e8612486565b9050600083815b6003811015611696578115611696576001600160a01b0387166000908152600b602052604081208186846003811061152957611529613660565b6020020151815260200190815260200160002060010154600b60008a6001600160a01b03166001600160a01b03168152602001908152602001600020600087856003811061157957611579613660565b602002015181526020019081526020016000206000015461159a91906135cb565b9050806000036115aa5750611684565b6115b481856135de565b9350828111611627576115c781846135cb565b6001600160a01b0389166000908152600b602052604081209194508291908785600381106115f7576115f7613660565b60200201518152602001908152602001600020600101600082825461161c91906135de565b909155506116829050565b6001600160a01b0388166000908152600b60205260408120849187856003811061165357611653613660565b60200201518152602001908152602001600020600101600082825461167891906135de565b9091555060009350505b505b8061168e81613703565b9150506114ef565b5080156116d9576040517f5fa489550000000000000000000000000000000000000000000000000000000081526004810186905260248101829052604401610a69565b604080516080810182528681526020808201858152438385019081526001600160a01b038b811660608601908152600180546000908152600790965296909420945185559151848601555160028401559051600390920180547fffffffffffffffffffffffff00000000000000000000000000000000000000001692909116919091179055805401600181815561176f916135cb565b93505050505b92915050565b6001600160a01b0381166000908152600360205260408120606091906117a090613010565b90506000815167ffffffffffffffff8111156117be576117be61373b565b60405190808252806020026020018201604052801561183a57816020015b6118276040518060c0016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b8152602001906001900390816117dc5790505b50905060005b82518110156118fb576002600084838151811061185f5761185f613660565b6020908102919091018101518252818101929092526040908101600020815160c08101835281546001600160a01b0390811682526001830154169381019390935260028101549183019190915260038101546060830152600481015460808301526005015460a082015282518390839081106118dd576118dd613660565b602002602001018190525080806118f390613703565b915050611840565b509392505050565b600c60009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611956573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061197a919061388f565b61198590600a6139d2565b6119909060c861368f565b8110156119df5760405162461bcd60e51b815260206004820152601e60248201527f42454c4f575f4d494e494d554d5f535441424c45434f494e5f5354414b4500006044820152606401610a69565b60006119e9612486565b600c5490915061130b906001600160a01b031683836000611301565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663cb23bcb56040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a89919061376a565b905060005b82811015611f7957816001600160a01b0316630792457c858584818110611ab757611ab7613660565b905060200201356040518263ffffffff1660e01b8152600401611adc91815260200190565b602060405180830381865afa158015611af9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b1d919061351e565b15611b905760405162461bcd60e51b815260206004820152603b60248201527f537461746520726f6f74206173736f6369617465642077697468206c6f636b2060448201527f494420776173206d61726b6564206173206672617564756c656e7400000000006064820152608401610a69565b816001600160a01b0316636b6e30e4858584818110611bb157611bb1613660565b905060200201356040518263ffffffff1660e01b8152600401611bd691815260200190565b602060405180830381865afa158015611bf3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c17919061351e565b611c895760405162461bcd60e51b815260206004820152603960248201527f537461746520726f6f74206173736f6369617465642077697468206c6f636b2060448201527f494420686173206e6f74206265656e20636f6e6669726d6564000000000000006064820152608401610a69565b600060076000868685818110611ca157611ca1613660565b602090810292909201358352508181019290925260409081016000208151608081018352815481526001820154818501526002820154818401526003909101546001600160a01b03908116606083015282517fd43a33ea000000000000000000000000000000000000000000000000000000008152925191945043937f00000000000000000000000000000000000000000000000000000000000000009091169263d43a33ea92600480830193928290030181865afa158015611d68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d8c9190613583565b8260400151611d9b91906135de565b1115611e0f5760405162461bcd60e51b815260206004820152602160248201527f4c6f636b20686173206e6f742070617373656420667261756420706572696f6460448201527f2e000000000000000000000000000000000000000000000000000000000000006064820152608401610a69565b6000611e1e8260400151612ed6565b825190915060005b6003811015611f62578115611f625760608401516001600160a01b03166000908152600b6020526040812081858460038110611e6457611e64613660565b6020020151815260200190815260200160002060010154905080600003611e8b5750611f50565b808311611ef65760608501516001600160a01b03166000908152600b602052604081208491868560038110611ec257611ec2613660565b602002015181526020019081526020016000206001016000828254611ee791906135cb565b9091555060009350611f4e9050565b60608501516001600160a01b03166000908152600b6020526040812081868560038110611f2557611f25613660565b60200201518152602001908152602001600020600101819055508083611f4b91906135cb565b92505b505b80611f5a81613703565b915050611e26565b505050508080611f7190613703565b915050611a8e565b50505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d43a33ea6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611fe0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120049190613583565b905060005b6001600160a01b038616600090815260036020526040902061202a9061301d565b811015612268576001600160a01b038616600090815260036020526040812060029082906120589085613027565b815260208082019290925260409081016000908120825160c08101845281546001600160a01b03908116825260018301541694810194909452600281015492840192909252600382015460608401526004820154608084015260059091015460a08301529091505b600154811015612253576000818152600760209081526040918290208251608081018452815481526001820154928101929092526002810154928201839052600301546001600160a01b03166060808301919091528401519091111580612139575084836080015161213291906135cb565b8160400151115b8061215e575082602001516001600160a01b031681606001516001600160a01b031614155b156121695750612241565b60008281526008602090815260408083208b845282528083206001600160a01b038b16845282528220549083015167ffffffffffffffff90911691906121b290620186a061368f565b60408601516121c1908461368f565b6121ce90620186a061368f565b6121d891906136a6565b600087815260046020908152604080832088845282528083208e845282528083206001600160a01b038e16845290915290205490915067ffffffffffffffff168181101561223c57600061222c82846135cb565b9050612238818b6135de565b9950505b505050505b8061224b81613703565b9150506120c0565b5050808061226090613703565b915050612009565b50509392505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663cb23bcb56040518163ffffffff1660e01b8152600401602060405180830381865afa1580156122cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122f3919061376a565b6001600160a01b0316336001600160a01b03161461231057600080fd5b600084815260086020908152604080832086845282528083206001600160a01b03861684529091528120805483929061235490849067ffffffffffffffff166136e2565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663cb23bcb56040518163ffffffff1660e01b8152600401602060405180830381865afa1580156123de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612402919061376a565b6001600160a01b0316336001600160a01b03161461241f57600080fd5b6000838152600a602090815260408083206001600160a01b03861684529091528120805483929061245b90849067ffffffffffffffff166136e2565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550505050565b61248e613108565b61249743612ed6565b905090565b60008060005b6001600160a01b03841660009081526003602052604090206124c39061301d565b811015612627576001600160a01b038416600090815260036020526040812060029082906124f19085613027565b815260208082019290925260409081016000908120825160c08101845281546001600160a01b03908116825260018084015490911682870181905260028401548387019081526003850154606085015260048501546080850190815260059095015460a0850152908552600b87528585209351855292865284842085518087019096528054808752910154958501869052915190955092939192909161259790836135cb565b6125a1919061368f565b6125ab91906136a6565b905060008360a00151826125bf91906135cb565b600d5460208601519192506001600160a01b039081169116036125e9576125e681876135de565b95505b600c5460208501516001600160a01b039182169116036126105761260d81886135de565b96505b50505050808061261f90613703565b9150506124a2565b50915091565b60008060005b838110156129cd5760006002600087878581811061265357612653613660565b6020908102929092013583525081019190915260400160002080549091506001600160a01b031633146126ee5760405162461bcd60e51b815260206004820152602a60248201527f53656e646572206d757374206d61746368207374616b6572206f66206465706f60448201527f736974207265636f7264000000000000000000000000000000000000000000006064820152608401610a69565b43816004015411156127685760405162461bcd60e51b815260206004820152603360248201527f556e6c6f636b206461746520666f72206465706f736974207265636f7264206860448201527f6173206e6f74206265656e2072656163686564000000000000000000000000006064820152608401610a69565b80600201548160050154036127bf5760405162461bcd60e51b815260206004820152601960248201527f4465706f73697420616c72656164792077697468647261776e000000000000006044820152606401610a69565b6001808201546001600160a01b03166000908152600b6020908152604080832060048601548452825280832081518083019092528054808352940154918101829052600285015490939161281390836135cb565b61281d919061368f565b61282791906136a6565b9050600083600501548261283b91906135cb565b9050806000036128b35760405162461bcd60e51b815260206004820152602760248201527f4e6f20617661696c61626c6520616d6f756e7420666f7220746869732064657060448201527f6f736974206964000000000000000000000000000000000000000000000000006064820152608401610a69565b808460050160008282546128c791906135de565b9091555050600c5460018501546001600160a01b039182169116036128f7576128f081886135de565b96506129b6565b600d5460018501546001600160a01b039182169116036129225761291b81876135de565b95506129b6565b60405162461bcd60e51b815260206004820152604c60248201527f53686f756c64206e6f742062652061206465706f736974207265636f7264206660448201527f6f72206173736574732062657369646520737461626c65636f696e206f72207060648201527f726f746f636f6c546f6b656e0000000000000000000000000000000000000000608482015260a401610a69565b5050505080806129c590613703565b915050612633565b508115612ad557600c546040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015612a3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a62919061351e565b612a6b57600080fd5b600c546001600160a01b031660009081526005602052604081208054849290612a959084906135cb565b9091555050336000908152600660209081526040808320600c546001600160a01b0316845290915281208054849290612acf9084906135cb565b90915550505b8015611f7957600d546040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015612b45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b69919061351e565b612b7257600080fd5b600d546001600160a01b031660009081526005602052604081208054849290612b9c9084906135cb565b9091555050336000908152600660209081526040808320600d546001600160a01b0316845290915281208054849290612bd69084906135cb565b909155505050505050565b6060818310612c325760405162461bcd60e51b815260206004820152600d60248201527f496e76616c69642072616e6765000000000000000000000000000000000000006044820152606401610a69565b6000612c3e84846135cb565b67ffffffffffffffff811115612c5657612c5661373b565b604051908082528060200260200182016040528015612cbb57816020015b612ca8604051806080016040528060008152602001600081526020016000815260200160006001600160a01b031681525090565b815260200190600190039081612c745790505b509050835b838110156118fb576000818152600760209081526040918290208251608081018452815481526001820154928101929092526002810154928201929092526003909101546001600160a01b0316606082015282612d1d87846135cb565b81518110612d2d57612d2d613660565b60200260200101819052508080612d4390613703565b915050612cc0565b6060600060015467ffffffffffffffff811115612d6a57612d6a61373b565b604051908082528060200260200182016040528015612dcf57816020015b612dbc604051806080016040528060008152602001600081526020016000815260200160006001600160a01b031681525090565b815260200190600190039081612d885790505b50905060005b600154811015612e5b576000818152600760209081526040918290208251608081018452815481526001820154928101929092526002810154928201929092526003909101546001600160a01b031660608201528251839083908110612e3d57612e3d613660565b60200260200101819052508080612e5390613703565b915050612dd5565b50919050565b6001600160a01b038116600090815260036020526040902060609061177590613010565b60008062989680612e9984622dc6c061368f565b612ea391906136a6565b612eb29064e8d4a5100061368f565b905062989680612ec5826216e36061368f565b612ecf91906136a6565b9392505050565b612ede613108565b6000612eed624f1a008461356f565b90506000808211612eff576000612f01565b815b612f0b90856135cb565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d43a33ea6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612f6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f8f9190613583565b8210612fa557612fa2624f1a00826135de565b90505b60005b6003811015612ffc57612fbc8160016135de565b612fc990624f1a0061368f565b612fd390836135de565b848260038110612fe557612fe5613660565b602002015280612ff481613703565b915050612fa8565b505050919050565b6000612ecf8383613033565b60606000612ecf83613082565b6000611775825490565b6000612ecf83836130de565b600081815260018301602052604081205461307a57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155611775565b506000611775565b6060816000018054806020026020016040519081016040528092919081815260200182805480156130d257602002820191906000526020600020905b8154815260200190600101908083116130be575b50505050509050919050565b60008260000182815481106130f5576130f5613660565b9060005260206000200154905092915050565b60405180606001604052806003906020820280368337509192915050565b6001600160a01b038116811461313b57600080fd5b50565b60008060006060848603121561315357600080fd5b833561315e81613126565b95602085013595506040909401359392505050565b60006020828403121561318557600080fd5b813567ffffffffffffffff81111561319c57600080fd5b820160808185031215612ecf57600080fd5b6000602082840312156131c057600080fd5b5035919050565b600080604083850312156131da57600080fd5b82356131e581613126565b946020939093013593505050565b60006020828403121561320557600080fd5b8135612ecf81613126565b602080825282518282018190526000919060409081850190868401855b8281101561328757815180516001600160a01b0390811686528782015116878601528581015186860152606080820151908601526080808201519086015260a0908101519085015260c0909301929085019060010161322d565b5091979650505050505050565b600080602083850312156132a757600080fd5b823567ffffffffffffffff808211156132bf57600080fd5b818501915085601f8301126132d357600080fd5b8135818111156132e257600080fd5b8660208260051b85010111156132f757600080fd5b60209290920196919550909350505050565b60008060006060848603121561331e57600080fd5b833561332981613126565b925060208401359150604084013561334081613126565b809150509250925092565b803567ffffffffffffffff8116811461336357600080fd5b919050565b6000806000806080858703121561337e57600080fd5b8435935060208501359250604085013561339781613126565b91506133a56060860161334b565b905092959194509250565b6000806000606084860312156133c557600080fd5b8335925060208401356133d781613126565b91506133e56040850161334b565b90509250925092565b60608101818360005b60038110156134165781518352602092830192909101906001016133f7565b50505092915050565b6000806040838503121561343257600080fd5b823561343d81613126565b9150602083013561344d81613126565b809150509250929050565b6000806040838503121561346b57600080fd5b50508035926020909101359150565b602080825282518282018190526000919060409081850190868401855b8281101561328757815180518552868101518786015285810151868601526060908101516001600160a01b03169085015260809093019290850190600101613497565b6020808252825182820181905260009190848201906040850190845b81811015613512578351835292840192918401916001016134f6565b50909695505050505050565b60006020828403121561353057600080fd5b81518015158114612ecf57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008261357e5761357e613540565b500690565b60006020828403121561359557600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156117755761177561359c565b808201808211156117755761177561359c565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261362657600080fd5b83018035915067ffffffffffffffff82111561364157600080fd5b6020019150600581901b360382131561365957600080fd5b9250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b80820281158282048414176117755761177561359c565b6000826136b5576136b5613540565b500490565b67ffffffffffffffff8281168282160390808211156136db576136db61359c565b5092915050565b67ffffffffffffffff8181168382160190808211156136db576136db61359c565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036137345761373461359c565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020828403121561377c57600080fd5b8151612ecf81613126565b6000815180845260005b818110156137ad57602081850181015186830182015201613791565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600060808201868352602060808185015281875180845260a086019150828901935060005b8181101561385857845180516001600160a01b03908116855285820151168585015260409081015167ffffffffffffffff169084015293830193606090920191600101613810565b5050848103604086015261386c8188613787565b935050505061388660608301846001600160a01b03169052565b95945050505050565b6000602082840312156138a157600080fd5b815160ff81168114612ecf57600080fd5b600181815b8085111561390b57817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156138f1576138f161359c565b808516156138fe57918102915b93841c93908002906138b7565b509250929050565b60008261392257506001611775565b8161392f57506000611775565b8160018114613945576002811461394f5761396b565b6001915050611775565b60ff8411156139605761396061359c565b50506001821b611775565b5060208310610133831016604e8410600b841016171561398e575081810a611775565b61399883836138b2565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156139ca576139ca61359c565b029392505050565b6000612ecf60ff84168361391356";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _manager: string,
    _stablecoin: string,
    _protocolToken: string,
    overrides?: Overrides & { from?: string }
  ): Promise<Staking> {
    return super.deploy(
      _manager,
      _stablecoin,
      _protocolToken,
      overrides || {}
    ) as Promise<Staking>;
  }
  override getDeployTransaction(
    _manager: string,
    _stablecoin: string,
    _protocolToken: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _manager,
      _stablecoin,
      _protocolToken,
      overrides || {}
    );
  }
  override attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  override connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
