/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Rollup, RollupInterface } from "../Rollup";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_participatingInterface",
        type: "address",
      },
      {
        internalType: "address",
        name: "_manager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "expected",
        type: "address",
      },
    ],
    name: "CALLER_NOT_PORTAL",
    type: "error",
  },
  {
    inputs: [],
    name: "CALLER_NOT_VALIDATOR",
    type: "error",
  },
  {
    inputs: [],
    name: "EMPTY_STATE_ROOT",
    type: "error",
  },
  {
    inputs: [],
    name: "EPOCH_NOT_CONFIRMED",
    type: "error",
  },
  {
    inputs: [],
    name: "INPUTS_HASH_MISMATCH_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INPUTS_LENGTH_MISMATCH_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INPUT_PARAMS_MISMATCH_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_PROOF_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_REQUEST_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_SEQUENCE_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_STATE_UPDATE_SETTLEMENT",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "Id",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cleared",
        type: "uint256",
      },
    ],
    name: "ObligationsWritten",
    type: "event",
  },
  {
    inputs: [],
    name: "CONFIRMATION_BLOCKS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "confirmStateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    name: "confirmedStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epoch",
    outputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "fraudulent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "getConfirmedStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "getProposedStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastConfirmedEpoch",
    outputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastSettlementIdProcessed",
    outputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "markFraudulent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nextRequestId",
    outputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint8",
                name: "typeIdentifier",
                type: "uint8",
              },
              {
                internalType: "Id",
                name: "sequenceId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "participatingInterface",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "structData",
                type: "bytes",
              },
            ],
            internalType: "struct StateUpdateLibrary.StateUpdate",
            name: "stateUpdate",
            type: "tuple",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct StateUpdateLibrary.SignedStateUpdate",
        name: "_signedUpdate",
        type: "tuple",
      },
      {
        internalType: "Id",
        name: "_stateRootId",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "processSettlement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "processedSettlements",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "proposalBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "proposalLockId",
    outputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_stateRoot",
        type: "bytes32",
      },
    ],
    name: "proposeStateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposedStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "requestSettlement",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_stateRoot",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint8",
                name: "typeIdentifier",
                type: "uint8",
              },
              {
                internalType: "Id",
                name: "sequenceId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "participatingInterface",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "structData",
                type: "bytes",
              },
            ],
            internalType: "struct StateUpdateLibrary.StateUpdate",
            name: "stateUpdate",
            type: "tuple",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct StateUpdateLibrary.SignedStateUpdate",
        name: "_signedUpdate",
        type: "tuple",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "submitSettlement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405260016000556000600155600160085560026009553480156200002557600080fd5b506040516200265f3803806200265f83398101604081905262000048916200007d565b6001600160a01b0391821660a05216608052620000b5565b80516001600160a01b03811681146200007857600080fd5b919050565b600080604083850312156200009157600080fd5b6200009c8362000060565b9150620000ac6020840162000060565b90509250929050565b60805160a05161252c620001336000396000505060008181610338015281816103d301528181610547015281816105f40152818161099d01528181610be101528181610c7b01528181610dfd01528181610f4b0152818161133a0152818161158a015281816118a301528181611ae40152611c3e015261252c6000f3fe608060405234801561001057600080fd5b506004361061016c5760003560e01c8063887412b7116100cd578063b97dd9e211610081578063df686c8511610066578063df686c85146102eb578063f1728ad2146102fe578063f27388611461032c57600080fd5b8063b97dd9e2146102c3578063c98bdc03146102cb57600080fd5b80639cb2c811116100b25780639cb2c81114610294578063a9275f0a146102a7578063b59c23c1146102b057600080fd5b8063887412b71461026b578063900cf0cf1461028b57600080fd5b8063538bf926116101245780636bb38f8d116101095780636bb38f8d14610205578063706efcd01461021857806379e1ccee1461022d57600080fd5b8063538bf926146101dc5780636a84a985146101fc57600080fd5b806348a8c9211161015557806348a8c921146101a05780634aaac399146101c05780634cc4f7c0146101c957600080fd5b80633003f147146101715780634698bb2214610197575b600080fd5b61018461017f366004611e28565b610334565b6040519081526020015b60405180910390f35b61018460085481565b6101846101ae366004611e61565b60066020526000908152604090205481565b61018461c35081565b6101846101d7366004611e61565b6104af565b6101846101ea366004611e61565b60046020526000908152604090205481565b61018460095481565b610184610213366004611e61565b6104fd565b61022b610226366004611e61565b610519565b005b61025b61023b366004611e7a565b600560209081526000928352604080842090915290825290205460ff1681565b604051901515815260200161018e565b610184610279366004611e61565b60036020526000908152604090205481565b61018460005481565b61022b6102a2366004611f00565b610807565b61018460015481565b61022b6102be366004611e61565b611588565b600054610184565b6101846102d9366004611e61565b60026020526000908152604090205481565b61022b6102f9366004611f70565b611672565b61025b61030c366004611e7a565b600760209081526000928352604080842090915290825290205460ff1681565b61022b6116ab565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636425666b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610394573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b89190611fc7565b6001600160a01b0316336001600160a01b03161461049c57337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636425666b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561042f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104539190611fc7565b6040517ffeb970c10000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201529116602482015260440160405180910390fd5b5060098054600181019091555b92915050565b600081815260066020526040812054908190036104f8576040517fa597b61c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b600081815260026020526040812054908190036104f857600080fd5b6040517ffacd743b0000000000000000000000000000000000000000000000000000000081523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063facd743b90602401602060405180830381865afa158015610596573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ba9190611fe4565b6105f0576040517fd6917b3700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d8dfeb456040518163ffffffff1660e01b8152600401602060405180830381865afa158015610650573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106749190611fc7565b90506000816001600160a01b031663282d3fdf836001600160a01b0316631a465fe16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e99190611fc7565b846001600160a01b031663ab900a8d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610727573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074b9190612006565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156107ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d29190612006565b600080548152600260209081526040808320879055958252600381528582204390556004905293842055505080546001019055565b60008381526006602052604081205480820361086a57505060008381526002602052604081205460019181900361086a576040517f5aba372c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061089e8585848a6040516020016108839190612079565b6040516020818303038152906040528051906020012061172a565b9050806108d7576040517f7657200300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026108e388806121a0565b6108f19060208101906121de565b60ff161461092b576040517f5424b3dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061093788806121a0565b6109459060608101906121f9565b8101906109529190612350565b805160a081015160085492935090916001011461099b576040517ffc4db1bf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636425666b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109f9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1d9190611fc7565b6001600160a01b0316637b6d899d826060015183604051602001610a8f9190600060c0820190506001600160a01b0380845116835280602085015116602084015280604085015116604084015250606083015160608301526080830151608083015260a083015160a083015292915050565b604051602081830303815290604052805190602001206040518363ffffffff1660e01b8152600401610acb929190918252602082015260400190565b602060405180830381865afa158015610ae8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0c9190611fe4565b1580610b1c575060808101514614155b15610b53576040517ffa47e1e900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80602001516001600160a01b03168260400151602001516001600160a01b0316141580610b93575080516040830151516001600160a01b03908116911614155b80610ba5575060408083015101514614155b15610bdc576040517fad08c18f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c48ce05b8560400151606001516040518263ffffffff1660e01b8152600401610c3591815260200190565b6040805180830381865afa158015610c51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c759190612411565b915091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636425666b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cfb9190611fc7565b6001600160a01b031663f1373ffa8560400151602001518660400151600001518486610d279190612464565b886040015160600151610d3a9190612477565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b158015610da157600080fd5b505af1158015610db5573d6000803e3d6000fd5b50505050610dc560085460010190565b6008819055507f2fbe32bf5c43587f241785776e03af9725712c4d9349d5d487e0b080554759cf8360a00151846000015185602001517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636425666b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7d9190611fc7565b875160208901516040517fb2838a730000000000000000000000000000000000000000000000000000000081526001600160a01b039283166004820152908216602482015291169063b2838a7390604401602060405180830381865afa158015610eeb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0f9190612006565b604051610f3f94939291909384526001600160a01b03928316602085015291166040830152606082015260800190565b60405180910390a160007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d8dfeb456040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fa7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fcb9190611fc7565b905087156114e6576000816001600160a01b031663282d3fdf836001600160a01b031663e9cbd8226040518163ffffffff1660e01b8152600401602060405180830381865afa158015611022573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110469190611fc7565b64e8d4a5100089604001516060015161105f919061248a565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156110c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e69190612006565b90506000826001600160a01b031663282d3fdf846001600160a01b0316631a465fe16040518163ffffffff1660e01b8152600401602060405180830381865afa158015611137573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115b9190611fc7565b856001600160a01b031663d86d30a464e8d4a510008c6040015160600151611183919061248a565b6040518263ffffffff1660e01b81526004016111a191815260200190565b602060405180830381865afa1580156111be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e29190612006565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611245573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112699190612006565b6040888101518082015160209091015191517fa6d7f27d00000000000000000000000000000000000000000000000000000000815260048101919091526001600160a01b0391821660248201526044810188905291925084169063a6d7f27d90606401600060405180830381600087803b1580156112e657600080fd5b505af11580156112fa573d6000803e3d6000fd5b50506040517f0ee2bb3100000000000000000000000000000000000000000000000000000000815260048101879052600092508291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690630ee2bb31906024016040805180830381865afa158015611380573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a49190612411565b60408b8101518082015160209091015191517f03c1e4b20000000000000000000000000000000000000000000000000000000081526004810189905260248101919091526001600160a01b039182166044820152606481018490529294509092508616906303c1e4b290608401600060405180830381600087803b15801561142b57600080fd5b505af115801561143f573d6000803e3d6000fd5b505050506040898101518082015160209091015191517f03c1e4b20000000000000000000000000000000000000000000000000000000081526004810186905260248101919091526001600160a01b03918216604482015260648101839052908616906303c1e4b290608401600060405180830381600087803b1580156114c557600080fd5b505af11580156114d9573d6000803e3d6000fd5b505050505050505061157a565b6040858101518082015160209091015191517fa6d7f27d00000000000000000000000000000000000000000000000000000000815260048101919091526001600160a01b039182166024820152604481018590529082169063a6d7f27d90606401600060405180830381600087803b15801561156157600080fd5b505af1158015611575573d6000803e3d6000fd5b505050505b505050505050505050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b2bbcfc06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061160a9190611fc7565b6001600160a01b0316336001600160a01b03161461162757600080fd5b600090815260056020908152604080832060028352818420548452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b60005460010160005560018054016001818155600091825260066020526040909120859055546116a59084908484611742565b50505050565b600180540160018190556000908152600260209081526040808320548084526003909252909120546116df61c35082612464565b4310156116eb57600080fd5b600154600090815260056020908152604080832085845290915290205460ff161561171557600080fd5b50600154600090815260066020526040902055565b600082611738868685611d92565b1495945050505050565b6000838152600660205260408120549081900361178b576040517f5aba372c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006117a4848484896040516020016108839190612079565b9050806117dd576040517f7657200300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026117e987806121a0565b6117f79060208101906121de565b60ff1614611831576040517f5424b3dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061183d87806121a0565b61184b9060608101906121f9565b8101906118589190612350565b805160a08101516008549293509091600101146118a1576040517ffc4db1bf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636425666b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156118ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119239190611fc7565b6001600160a01b0316637b6d899d8260600151836040516020016119959190600060c0820190506001600160a01b0380845116835280602085015116602084015280604085015116604084015250606083015160608301526080830151608083015260a083015160a083015292915050565b604051602081830303815290604052805190602001206040518363ffffffff1660e01b81526004016119d1929190918252602082015260400190565b602060405180830381865afa1580156119ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a129190611fe4565b1580611a22575060808101514614155b15611a59576040517ffa47e1e900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80602001516001600160a01b03168260400151602001516001600160a01b0316141580611a99575080516040830151516001600160a01b03908116911614155b80611aab575060408083015101514614155b15611ae2576040517fad08c18f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636425666b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b649190611fc7565b6040838101516020810151815160609092015192517ff1373ffa0000000000000000000000000000000000000000000000000000000081526001600160a01b0391821660048201529181166024830152604482019290925291169063f1373ffa90606401600060405180830381600087803b158015611be257600080fd5b505af1158015611bf6573d6000803e3d6000fd5b50505050611c0660085460010190565b6008819055507f2fbe32bf5c43587f241785776e03af9725712c4d9349d5d487e0b080554759cf8160a00151826000015183602001517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636425666b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611c9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cbe9190611fc7565b855160208701516040517fb2838a730000000000000000000000000000000000000000000000000000000081526001600160a01b039283166004820152908216602482015291169063b2838a7390604401602060405180830381865afa158015611d2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d509190612006565b604051611d8094939291909384526001600160a01b03928316602085015291166040830152606082015260800190565b60405180910390a15050505050505050565b600081815b84811015611dd557611dc182878784818110611db557611db56124c5565b90506020020135611dde565b915080611dcd816124f4565b915050611d97565b50949350505050565b6000818310611dfa576000828152602084905260409020611e09565b60008381526020839052604090205b9392505050565b6001600160a01b0381168114611e2557600080fd5b50565b60008060408385031215611e3b57600080fd5b8235611e4681611e10565b91506020830135611e5681611e10565b809150509250929050565b600060208284031215611e7357600080fd5b5035919050565b60008060408385031215611e8d57600080fd5b50508035926020909101359150565b600060808284031215611eae57600080fd5b50919050565b60008083601f840112611ec657600080fd5b50813567ffffffffffffffff811115611ede57600080fd5b6020830191508360208260051b8501011115611ef957600080fd5b9250929050565b60008060008060608587031215611f1657600080fd5b843567ffffffffffffffff80821115611f2e57600080fd5b611f3a88838901611e9c565b9550602087013594506040870135915080821115611f5757600080fd5b50611f6487828801611eb4565b95989497509550505050565b60008060008060608587031215611f8657600080fd5b84359350602085013567ffffffffffffffff80821115611fa557600080fd5b611fb188838901611e9c565b94506040870135915080821115611f5757600080fd5b600060208284031215611fd957600080fd5b8151611e0981611e10565b600060208284031215611ff657600080fd5b81518015158114611e0957600080fd5b60006020828403121561201857600080fd5b5051919050565b803560ff811681146104f857600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60208152600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff818436030181126120b157600080fd5b60806020840152830160ff6120c58261201f565b1660a0840152602081013560c084015260408101356120e381611e10565b6001600160a01b031660e08401526060810135368290037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe101811261212757600080fd5b0160208101903567ffffffffffffffff81111561214357600080fd5b80360382131561215257600080fd5b608061010085015261216961012085018284612030565b9150506121786020850161201f565b60ff811660408501525060408401356060840152606084013560808401528091505092915050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff818336030181126121d457600080fd5b9190910192915050565b6000602082840312156121f057600080fd5b611e098261201f565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261222e57600080fd5b83018035915067ffffffffffffffff82111561224957600080fd5b602001915036819003821315611ef957600080fd5b6040516080810167ffffffffffffffff811182821017156122a8577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405290565b60405160c0810167ffffffffffffffff811182821017156122a8577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006080828403121561230a57600080fd5b61231261225e565b9050813561231f81611e10565b8152602082013561232f81611e10565b80602083015250604082013560408201526060820135606082015292915050565b60008183036101e081121561236457600080fd5b61236c61225e565b60c082121561237a57600080fd5b6123826122ae565b9150833561238f81611e10565b8252602084013561239f81611e10565b602083015260408401356123b281611e10565b80604084015250606084013560608301526080840135608083015260a084013560a083015281815260c084013560208201526123f18560e086016122f8565b60408201526124048561016086016122f8565b6060820152949350505050565b6000806040838503121561242457600080fd5b505080516020909101519092909150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156104a9576104a9612435565b818103818111156104a9576104a9612435565b6000826124c0577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361252557612525612435565b506001019056";

type RollupConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RollupConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Rollup__factory extends ContractFactory {
  constructor(...args: RollupConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _participatingInterface: string,
    _manager: string,
    overrides?: Overrides & { from?: string }
  ): Promise<Rollup> {
    return super.deploy(
      _participatingInterface,
      _manager,
      overrides || {}
    ) as Promise<Rollup>;
  }
  override getDeployTransaction(
    _participatingInterface: string,
    _manager: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _participatingInterface,
      _manager,
      overrides || {}
    );
  }
  override attach(address: string): Rollup {
    return super.attach(address) as Rollup;
  }
  override connect(signer: Signer): Rollup__factory {
    return super.connect(signer) as Rollup__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RollupInterface {
    return new utils.Interface(_abi) as RollupInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Rollup {
    return new Contract(address, _abi, signerOrProvider) as Rollup;
  }
}
