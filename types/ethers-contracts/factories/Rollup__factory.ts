/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Rollup, RollupInterface } from "../Rollup";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_participatingInterface",
        type: "address",
      },
      {
        internalType: "address",
        name: "_manager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "expected",
        type: "address",
      },
    ],
    name: "CALLER_NOT_PORTAL",
    type: "error",
  },
  {
    inputs: [],
    name: "CALLER_NOT_VALIDATOR",
    type: "error",
  },
  {
    inputs: [],
    name: "EMPTY_STATE_ROOT",
    type: "error",
  },
  {
    inputs: [],
    name: "EPOCH_NOT_CONFIRMED",
    type: "error",
  },
  {
    inputs: [],
    name: "INPUTS_HASH_MISMATCH_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INPUTS_LENGTH_MISMATCH_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INPUT_PARAMS_MISMATCH_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_PROOF_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_REQUEST_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_SEQUENCE_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_STATE_UPDATE_SETTLEMENT",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "Id",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cleared",
        type: "uint256",
      },
    ],
    name: "ObligationsWritten",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "epoch",
            type: "uint256",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint8",
                        name: "typeIdentifier",
                        type: "uint8",
                      },
                      {
                        internalType: "Id",
                        name: "sequenceId",
                        type: "uint256",
                      },
                      {
                        internalType: "address",
                        name: "participatingInterface",
                        type: "address",
                      },
                      {
                        internalType: "bytes",
                        name: "structData",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct StateUpdateLibrary.StateUpdate",
                    name: "stateUpdate",
                    type: "tuple",
                  },
                  {
                    internalType: "uint8",
                    name: "v",
                    type: "uint8",
                  },
                  {
                    internalType: "bytes32",
                    name: "r",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "s",
                    type: "bytes32",
                  },
                ],
                internalType: "struct StateUpdateLibrary.SignedStateUpdate",
                name: "tradeUpdate",
                type: "tuple",
              },
              {
                internalType: "bytes32[]",
                name: "proof",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Rollup.TradeProof[]",
            name: "tradeProof",
            type: "tuple[]",
          },
        ],
        internalType: "struct Rollup.TradingFeeClaim[]",
        name: "_claims",
        type: "tuple[]",
      },
    ],
    name: "claimTradingFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "confirmStateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    name: "confirmedStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epoch",
    outputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "fraudulent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "getConfirmedStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "getProposedStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lockId",
        type: "uint256",
      },
    ],
    name: "isConfirmedLockId",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lockId",
        type: "uint256",
      },
    ],
    name: "isFraudulentLockId",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastConfirmedEpoch",
    outputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "markFraudulent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Id",
        name: "_chainId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint8",
                    name: "typeIdentifier",
                    type: "uint8",
                  },
                  {
                    internalType: "Id",
                    name: "sequenceId",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "participatingInterface",
                    type: "address",
                  },
                  {
                    internalType: "bytes",
                    name: "structData",
                    type: "bytes",
                  },
                ],
                internalType: "struct StateUpdateLibrary.StateUpdate",
                name: "stateUpdate",
                type: "tuple",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
            ],
            internalType: "struct StateUpdateLibrary.SignedStateUpdate",
            name: "signedUpdate",
            type: "tuple",
          },
          {
            internalType: "Id",
            name: "stateRootId",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "proof",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Rollup.SettlementParams[]",
        name: "_params",
        type: "tuple[]",
      },
    ],
    name: "processSettlements",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "processedSettlements",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "proposalBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_stateRoot",
        type: "bytes32",
      },
    ],
    name: "proposeStateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposedStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_assets",
        type: "address[]",
      },
    ],
    name: "relayTradingFees",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_stateRoot",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint8",
                name: "typeIdentifier",
                type: "uint8",
              },
              {
                internalType: "Id",
                name: "sequenceId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "participatingInterface",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "structData",
                type: "bytes",
              },
            ],
            internalType: "struct StateUpdateLibrary.StateUpdate",
            name: "stateUpdate",
            type: "tuple",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct StateUpdateLibrary.SignedStateUpdate",
        name: "_signedUpdate",
        type: "tuple",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "submitSettlement",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0604052600160005560006001553480156200001b57600080fd5b5060405162003ac038038062003ac08339810160408190526200003e9162000073565b6001600160a01b0391821660a05216608052620000ab565b80516001600160a01b03811681146200006e57600080fd5b919050565b600080604083850312156200008757600080fd5b620000928362000056565b9150620000a26020840162000056565b90509250929050565b60805160a0516139946200012c60003960008181610a3701528181610bcc015261132f015260008181610477015281816106110152818161070e0152818161094401528181610d1401528181610e3b0152818161117d01528181611e5f01528181611f7301528181611ffd0152818161223b01526125d101526139946000f3fe6080604052600436106101445760003560e01c8063900cf0cf116100c0578063dac6c59311610074578063f1728ad211610059578063f1728ad2146103d9578063f273886114610414578063fdb44a171461042957600080fd5b8063dac6c593146103b3578063df686c85146103c657600080fd5b8063b59c23c1116100a5578063b59c23c114610351578063b97dd9e214610371578063c98bdc031461038657600080fd5b8063900cf0cf14610325578063a9275f0a1461033b57600080fd5b80636b6e30e411610117578063706efcd0116100fc578063706efcd01461029d57806379e1ccee146102bd578063887412b7146102f857600080fd5b80636b6e30e41461022a5780636bb38f8d1461027d57600080fd5b80630792457c1461014957806310e0917d146101ba57806348a8c921146101cf5780634cc4f7c01461020a575b600080fd5b34801561015557600080fd5b506101a5610164366004612935565b600090815260076020908152604080832081518083018352815481526001909101548184018190528452600483528184209051845290915290205460ff1690565b60405190151581526020015b60405180910390f35b6101cd6101c836600461299a565b610449565b005b3480156101db57600080fd5b506101fc6101ea366004612935565b60056020526000908152604090205481565b6040519081526020016101b1565b34801561021657600080fd5b506101fc610225366004612935565b610579565b34801561023657600080fd5b506101a5610245366004612935565b600090815260076020908152604080832081518083018352815480825260019092015490840181905284526005909252909120541490565b34801561028957600080fd5b506101fc610298366004612935565b6105c7565b3480156102a957600080fd5b506101cd6102b8366004612935565b6105e3565b3480156102c957600080fd5b506101a56102d83660046129e6565b600460209081526000928352604080842090915290825290205460ff1681565b34801561030457600080fd5b506101fc610313366004612935565b60036020526000908152604090205481565b34801561033157600080fd5b506101fc60005481565b34801561034757600080fd5b506101fc60015481565b34801561035d57600080fd5b506101cd61036c366004612935565b610942565b34801561037d57600080fd5b506000546101fc565b34801561039257600080fd5b506101fc6103a1366004612935565b60026020526000908152604090205481565b6101cd6103c136600461299a565b610a2c565b6101cd6103d4366004612a08565b610e0d565b3480156103e557600080fd5b506101a56103f43660046129e6565b600660209081526000928352604080842090915290825290205460ff1681565b34801561042057600080fd5b506101cd6110d4565b34801561043557600080fd5b506101cd610444366004612a80565b611324565b6040517ffacd743b0000000000000000000000000000000000000000000000000000000081523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063facd743b90602401602060405180830381865afa1580156104c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ea9190612ad3565b6105615760405162461bcd60e51b815260206004820152602660248201527f4f6e6c792076616c696461746f722063616e2070726f6365737320736574746c60448201527f656d656e7473000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6105748361056f8385612db8565b611a01565b505050565b600081815260056020526040812054908190036105c2576040517fa597b61c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b600081815260026020526040812054908190036105c257600080fd5b6040517ffacd743b0000000000000000000000000000000000000000000000000000000081523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063facd743b90602401602060405180830381865afa158015610660573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106849190612ad3565b6106ba576040517fd6917b3700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060000361070a5760405162461bcd60e51b815260206004820152601960248201527f50726f706f73656420656d70747920737461746520726f6f74000000000000006044820152606401610558565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d8dfeb456040518163ffffffff1660e01b8152600401602060405180830381865afa15801561076a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078e9190612eeb565b90506000816001600160a01b031663282d3fdf836001600160a01b0316631a465fe16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108039190612eeb565b846001600160a01b031663ab900a8d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610841573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108659190612f08565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156108c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ec9190612f08565b600080548152600260209081526040808320879055868352600382528083204390558051808201825296875282548783019081529383526007909152812094518555905160019485015580549093019092555050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b2bbcfc06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c49190612eeb565b6001600160a01b0316336001600160a01b0316146109e157600080fd5b600090815260046020908152604080832060028352818420548452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610aca5760405162461bcd60e51b815260206004820152603360248201527f4f6e6c792070617274696369706174696e6720696e746572666163652063616e60448201527f20636c61696d2074726164696e672066656573000000000000000000000000006064820152608401610558565b60008167ffffffffffffffff811115610ae557610ae5612af0565b604051908082528060200260200182016040528015610b4e57816020015b60408051606081018252600080825260208083018290529282015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909201910181610b035790505b50905060005b82811015610d1157600085815260096020526040812090858584818110610b7d57610b7d612f21565b9050602002016020810190610b929190612f50565b6001600160a01b03166001600160a01b0316815260200190815260200160002054600003610bbf57600080fd5b60405180606001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602001858584818110610c0b57610c0b612f21565b9050602002016020810190610c209190612f50565b6001600160a01b031681526000878152600960209081526040822092019190878786818110610c5157610c51612f21565b9050602002016020810190610c669190612f50565b6001600160a01b03166001600160a01b0316815260200190815260200160002054815250828281518110610c9c57610c9c612f21565b60200260200101819052506000600960008781526020019081526020016000206000868685818110610cd057610cd0612f21565b9050602002016020810190610ce59190612f50565b6001600160a01b0316815260208101919091526040016000205580610d0981612f9c565b915050610b54565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638406c0796040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d949190612eeb565b6001600160a01b031663ea03683d34868460405180602001604052806000815250336040518663ffffffff1660e01b8152600401610dd59493929190613038565b6000604051808303818588803b158015610dee57600080fd5b505af1158015610e02573d6000803e3d6000fd5b505050505050505050565b6040517ffacd743b0000000000000000000000000000000000000000000000000000000081523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063facd743b90602401602060405180830381865afa158015610e8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eae9190612ad3565b610f205760405162461bcd60e51b815260206004820152602660248201527f4f6e6c792076616c696461746f722063616e2070726f6365737320736574746c60448201527f656d656e747300000000000000000000000000000000000000000000000000006064820152608401610558565b600080546001018082558152600260208190526040909120859055610f4584806130d2565b610f53906020810190613110565b60ff1614610f8d576040517f5424b3dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610f9984806130d2565b610fa790606081019061312b565b810190610fb491906131e8565b60408051600180825281830190925291925060009190816020015b611032604080516101608101909152600060e08201818152610100830182905261012083018290526060610140840181905283019081526080830182905260a0830182905260c08301919091528190815260200160008152602001606081525090565b815260200190600190039081610fcf57905050905060405180606001604052808661105c9061329f565b81526020016000548152602001858580806020026020016040519081016040528093929190818152602001838360200280828437600092018290525093909452505083518492506110af576110af612f21565b60200260200101819052506110cc82604001516040015182611a01565b505050505050565b60018054016001819055600090815260026020526040812054908190036111635760405162461bcd60e51b815260206004820152602560248201527f547279696e6720746f20636f6e6669726d20616e20656d70747920737461746560448201527f20726f6f740000000000000000000000000000000000000000000000000000006064820152608401610558565b6000600360008381526020019081526020016000205490507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d43a33ea6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111fd9190612f08565b61120790826132ab565b43101561127c5760405162461bcd60e51b815260206004820152602f60248201527f50726f706f73656420737461746520726f6f7420686173206e6f74207061737360448201527f656420667261756420706572696f6400000000000000000000000000000000006064820152608401610558565b600154600090815260046020908152604080832085845290915290205460ff161561130f5760405162461bcd60e51b815260206004820152602960248201527f547279696e6720746f20636f6e6669726d2061206672617564756c656e74207360448201527f7461746520726f6f7400000000000000000000000000000000000000000000006064820152608401610558565b50600154600090815260056020526040902055565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146113c25760405162461bcd60e51b815260206004820152603360248201527f4f6e6c792070617274696369706174696e6720696e746572666163652063616e60448201527f20636c61696d2074726164696e672066656573000000000000000000000000006064820152608401610558565b60005b81811015610574576000600560008585858181106113e5576113e5612f21565b90506020028101906113f791906132be565b600001358152602001908152602001600020549050806000036114a85760405162461bcd60e51b815260206004820152604560248201527f547279696e6720746f20636c61696d2074726164696e67206665657320666f7260448201527f20616e2065706f636820746861742069732079657420746f20626520636f6e6660648201527f69726d6564000000000000000000000000000000000000000000000000000000608482015260a401610558565b60005b8484848181106114bd576114bd612f21565b90506020028101906114cf91906132be565b6114dd9060208101906132f2565b90508110156119ec5760006115d78686868181106114fd576114fd612f21565b905060200281019061150f91906132be565b61151d9060208101906132f2565b8481811061152d5761152d612f21565b905060200281019061153f91906132be565b61154d9060208101906132f2565b8589898981811061156057611560612f21565b905060200281019061157291906132be565b6115809060208101906132f2565b8781811061159057611590612f21565b90506020028101906115a291906132be565b6115ac90806130d2565b6040516020016115bc91906133a3565b60405160208183030381529060405280519060200120612831565b9050806116265760405162461bcd60e51b815260206004820152601e60248201527f496e76616c6964206d65726b6c652070726f6f6620666f7220747261646500006044820152606401610558565b600186868681811061163a5761163a612f21565b905060200281019061164c91906132be565b61165a9060208101906132f2565b8481811061166a5761166a612f21565b905060200281019061167c91906132be565b61168690806130d2565b61169090806130d2565b61169e906020810190613110565b60ff16146116ee5760405162461bcd60e51b815260206004820152601b60248201527f537461746520757064617465206973206e6f74206120747261646500000000006044820152606401610558565b600086868681811061170257611702612f21565b905060200281019061171491906132be565b6117229060208101906132f2565b8481811061173257611732612f21565b905060200281019061174491906132be565b61174e90806130d2565b61175890806130d2565b61176690606081019061312b565b8101906117739190613677565b90506008600088888881811061178b5761178b612f21565b905060200281019061179d91906132be565b6117ab9060208101906132f2565b868181106117bb576117bb612f21565b90506020028101906117cd91906132be565b6117d790806130d2565b6117e190806130d2565b60209081013582528101919091526040016000205460ff161561186c5760405162461bcd60e51b815260206004820152602d60248201527f4665657320666f722074686973207472616465206861766520616c726561647960448201527f206265656e20636c61696d6564000000000000000000000000000000000000006064820152608401610558565b60016008600089898981811061188457611884612f21565b905060200281019061189691906132be565b6118a49060208101906132f2565b878181106118b4576118b4612f21565b90506020028101906118c691906132be565b6118d090806130d2565b6118da90806130d2565b602090810135825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790556101c08101516060015115611979576101c081018051606081015160409182015160009081526009602090815283822094518101516001600160a01b03168252939093529082208054919290916119739084906132ab565b90915550505b6101e081015160600151156119d7576101e081018051606081015160409182015160009081526009602090815283822094518101516001600160a01b03168252939093529082208054919290916119d19084906132ab565b90915550505b505080806119e490612f9c565b9150506114ab565b505080806119f990612f9c565b9150506113c5565b60408051606080820183526000808352835161012081018552608080820183815260a0830184905260c0830184905260e083018490526101008301849052825260208083018490528651808301885284815280820185905280880185905280860185905283880152865191820187528382528181018490528187018490528185018490529382015291830191909152918101919091526000825167ffffffffffffffff811115611ab357611ab3612af0565b604051908082528060200260200182016040528015611b1c57816020015b60408051606081018252600080825260208083018290529282015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909201910181611ad15790505b50905060005b8351811015610d1157600060056000868481518110611b4357611b43612f21565b60209081029190910181015181015182528101919091526040016000908120548086529003611be1576001905060026000868481518110611b8657611b86612f21565b60209081029190910181015181015182528101919091526040016000908120548086529003611be1576040517f5aba372c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611c52868481518110611bf857611bf8612f21565b6020026020010151604001518660000151888681518110611c1b57611c1b612f21565b602002602001015160000151604051602001611c379190613781565b60405160208183030381529060405280519060200120612849565b905080611c8b576040517f7657200300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260ff16868481518110611ca257611ca2612f21565b602090810291909101015151515160ff1614611cea576040517f5424b3dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50848281518110611cfd57611cfd612f21565b6020026020010151600001516000015160600151806020019051810190611d249190613861565b602085018190525160800151611d3a908761285f565b15611dad5760405162461bcd60e51b815260206004820152603160248201527f536574746c656d656e74207265717565737420636861696e496420646f65736e60448201527f2774206d61746368205f636861696e49640000000000000000000000000000006064820152608401610558565b836020015160000151602001516001600160a01b0316846020015160400151602001516001600160a01b0316141580611e0057506020840151805151604090910151516001600160a01b03908116911614155b80611e23575060208401516040808201510151905160800151611e23919061285f565b15611e5a576040517fad08c18f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c48ce05b876020015160400151606001516040518263ffffffff1660e01b8152600401611eb791815260200190565b6040805180830381865afa158015611ed3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ef7919061390b565b604080516060810182526020808b018051840151516001600160a01b039081168452905184015182015116908201529294509092508101611f3883856132ab565b88602001516040015160600151611f4f919061392f565b815250858581518110611f6457611f64612f21565b602002602001018190525060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d8dfeb456040518163ffffffff1660e01b8152600401602060405180830381865afa158015611fcf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ff39190612eeb565b90508315612784577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637dc0d1d06040518163ffffffff1660e01b8152600401602060405180830381865afa158015612059573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061207d9190612eeb565b602088810151604090810151808201519281015160609091015191517f6e4a22ed00000000000000000000000000000000000000000000000000000000815260048101939093526001600160a01b03908116602484015260448301919091529190911690636e4a22ed906064016020604051808303816000875af1158015612109573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061212d9190612f08565b8760400181815250506000816001600160a01b031663282d3fdf836001600160a01b031663e9cbd8226040518163ffffffff1660e01b8152600401602060405180830381865afa158015612185573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121a99190612eeb565b6040808c015190517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015612211573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122359190612f08565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637dc0d1d06040518163ffffffff1660e01b8152600401602060405180830381865afa158015612297573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122bb9190612eeb565b6001600160a01b031663d86d30a48a604001516040518263ffffffff1660e01b81526004016122ec91815260200190565b602060405180830381865afa158015612309573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061232d9190612f08565b90506305f5e1006123418262e4e1c0613942565b61234b9190613959565b90506000836001600160a01b031663282d3fdf856001600160a01b0316631a465fe16040518163ffffffff1660e01b8152600401602060405180830381865afa15801561239c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123c09190612eeb565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b039091166004820152602481018590526044016020604051808303816000875af1158015612425573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124499190612f08565b905060405180604001604052808b6000015181526020018c8a8151811061247257612472612f21565b60200260200101516020015181525060076000858152602001908152602001600020600082015181600001556020820151816001015590505060405180604001604052808b6000015181526020018c8a815181106124d2576124d2612f21565b60209081029190910181015181015190915260008381526007825260409081902083518155928201516001909301929092558b8101518201518083015191015191517fa6d7f27d00000000000000000000000000000000000000000000000000000000815260048101919091526001600160a01b039182166024820152604481018890529085169063a6d7f27d90606401600060405180830381600087803b15801561257d57600080fd5b505af1158015612591573d6000803e3d6000fd5b50506040517f0ee2bb3100000000000000000000000000000000000000000000000000000000815260048101889052600092508291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690630ee2bb31906024016040805180830381865afa158015612617573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061263b919061390b565b60208e8101516040908101518082015192015190517f03c1e4b2000000000000000000000000000000000000000000000000000000008152600481018a905260248101929092526001600160a01b03908116604483015260648201849052929450909250908716906303c1e4b290608401600060405180830381600087803b1580156126c657600080fd5b505af11580156126da573d6000803e3d6000fd5b5050505060208c8101516040908101518082015192015190517f03c1e4b20000000000000000000000000000000000000000000000000000000081526004810186905260248101929092526001600160a01b039081166044830152606482018390528716906303c1e4b290608401600060405180830381600087803b15801561276257600080fd5b505af1158015612776573d6000803e3d6000fd5b50505050505050505061281a565b6020878101516040908101518082015192015190517fa6d7f27d00000000000000000000000000000000000000000000000000000000815260048101929092526001600160a01b0390811660248301526044820185905282169063a6d7f27d90606401600060405180830381600087803b15801561280157600080fd5b505af1158015612815573d6000803e3d6000fd5b505050505b50505050808061282990612f9c565b915050611b22565b60008261283f86868561286a565b1495945050505050565b60008261285685846128b6565b14949350505050565b818114155b92915050565b600081815b848110156128ad576128998287878481811061288d5761288d612f21565b90506020020135612903565b9150806128a581612f9c565b91505061286f565b50949350505050565b600081815b84518110156128fb576128e7828683815181106128da576128da612f21565b6020026020010151612903565b9150806128f381612f9c565b9150506128bb565b509392505050565b600081831061291f57600082815260208490526040902061292e565b60008381526020839052604090205b9392505050565b60006020828403121561294757600080fd5b5035919050565b60008083601f84011261296057600080fd5b50813567ffffffffffffffff81111561297857600080fd5b6020830191508360208260051b850101111561299357600080fd5b9250929050565b6000806000604084860312156129af57600080fd5b83359250602084013567ffffffffffffffff8111156129cd57600080fd5b6129d98682870161294e565b9497909650939450505050565b600080604083850312156129f957600080fd5b50508035926020909101359150565b60008060008060608587031215612a1e57600080fd5b84359350602085013567ffffffffffffffff80821115612a3d57600080fd5b9086019060808289031215612a5157600080fd5b90935060408601359080821115612a6757600080fd5b50612a748782880161294e565b95989497509550505050565b60008060208385031215612a9357600080fd5b823567ffffffffffffffff811115612aaa57600080fd5b612ab68582860161294e565b90969095509350505050565b8015158114612ad057600080fd5b50565b600060208284031215612ae557600080fd5b815161292e81612ac2565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715612b4257612b42612af0565b60405290565b6040516060810167ffffffffffffffff81118282101715612b4257612b42612af0565b60405160a0810167ffffffffffffffff81118282101715612b4257612b42612af0565b604051610120810167ffffffffffffffff81118282101715612b4257612b42612af0565b604051610200810167ffffffffffffffff81118282101715612b4257612b42612af0565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612c1d57612c1d612af0565b604052919050565b600067ffffffffffffffff821115612c3f57612c3f612af0565b5060051b60200190565b803560ff811681146105c257600080fd5b6001600160a01b0381168114612ad057600080fd5b80356105c281612c5a565b600060808284031215612c8c57600080fd5b612c94612b1f565b9050813567ffffffffffffffff80821115612cae57600080fd5b9083019060808286031215612cc257600080fd5b612cca612b1f565b612cd383612c49565b8152602080840135818301526040840135612ced81612c5a565b6040830152606084013583811115612d0457600080fd5b80850194505086601f850112612d1957600080fd5b833583811115612d2b57612d2b612af0565b612d5b827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601612bd6565b93508084528782828701011115612d7157600080fd5b8082860183860137600082828601015250826060830152818552612d96818701612c49565b8186015250505050604082013560408201526060820135606082015292915050565b6000612dcb612dc684612c25565b612bd6565b83815260208082019190600586811b860136811115612de957600080fd5b865b81811015612ede57803567ffffffffffffffff80821115612e0c5760008081fd5b818a01915060608236031215612e225760008081fd5b612e2a612b48565b823582811115612e3a5760008081fd5b612e4636828601612c7a565b825250868301358782015260408084013583811115612e655760008081fd5b939093019236601f850112612e7c57600092508283fd5b83359250612e8c612dc684612c25565b83815292871b84018801928881019036851115612ea95760008081fd5b948901945b84861015612ec757853582529489019490890190612eae565b918301919091525088525050948301948301612deb565b5092979650505050505050565b600060208284031215612efd57600080fd5b815161292e81612c5a565b600060208284031215612f1a57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215612f6257600080fd5b813561292e81612c5a565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612fcd57612fcd612f6d565b5060010190565b6000815180845260005b81811015612ffa57602081850181015186830182015201612fde565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600060808201868352602060808185015281875180845260a086019150828901935060005b8181101561309b57845180516001600160a01b039081168552858201511685850152604090810151908401529383019360609092019160010161305d565b505084810360408601526130af8188612fd4565b93505050506130c960608301846001600160a01b03169052565b95945050505050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8183360301811261310657600080fd5b9190910192915050565b60006020828403121561312257600080fd5b61292e82612c49565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261316057600080fd5b83018035915067ffffffffffffffff82111561317b57600080fd5b60200191503681900382131561299357600080fd5b6000608082840312156131a257600080fd5b6131aa612b1f565b905081356131b781612c5a565b815260208201356131c781612c5a565b80602083015250604082013560408201526060820135606082015292915050565b60008183036101c08112156131fc57600080fd5b613204612b1f565b60a082121561321257600080fd5b61321a612b6b565b9150833561322781612c5a565b8252602084013561323781612c5a565b6020830152604084013561324a81612c5a565b80604084015250606084013560608301526080840135608083015281815260a0840135602082015261327f8560c08601613190565b6040820152613292856101408601613190565b6060820152949350505050565b60006128643683612c7a565b8082018082111561286457612864612f6d565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc183360301811261310657600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261332757600080fd5b83018035915067ffffffffffffffff82111561334257600080fd5b6020019150600581901b360382131561299357600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60208152600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff818436030181126133db57600080fd5b60806020840152830160ff6133ef82612c49565b1660a0840152602081013560c0840152604081013561340d81612c5a565b6001600160a01b031660e08401526060810135368290037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe101811261345157600080fd5b0160208101903567ffffffffffffffff81111561346d57600080fd5b80360382131561347c57600080fd5b60806101008501526134936101208501828461335a565b9150506134a260208501612c49565b60ff811660408501525060408401356060840152606084013560808401528091505092915050565b6000608082840312156134dc57600080fd5b6134e4612b1f565b905081356134f181612c5a565b815260208281013590820152604082013561350b81612c5a565b806040830152506060820135606082015292915050565b80356105c281612ac2565b600081830361014081121561354157600080fd5b613549612b1f565b915060e081121561355957600080fd5b50613562612b1f565b61356c84846134ca565b8152608083013561357c81612ac2565b602082015260a0830135604082015260c0830135606082015281526135a360e08301612c49565b60208201526101008201356040820152610120820135606082015292915050565b60006103c082840312156135d757600080fd5b6135df612b8e565b90506135ea82612c6f565b81526135f9836020840161352d565b602082015261360c83610160840161352d565b604082015261361f836102a084016134ca565b6060820152610320820135608082015261034082013560a08201526136476103608301613522565b60c08201526136596103808301612c6f565b60e082015261366b6103a08301612c6f565b61010082015292915050565b60006107e0828403121561368a57600080fd5b613692612bb2565b823581526136a384602085016135c4565b60208201526103e083013560408201526136c1846104008501613190565b606082015261048083013560808201526136df846104a08501613190565b60a082015261052083013560c08201526136fd846105408501613190565b60e08201526105c083013561010082015261371c846105e08501613190565b6101208201526106608301356101408201526106808301356101608201526106a08301356101808201526106c08301356101a0820152613760846106e08501613190565b6101c0820152613774846107608501613190565b6101e08201529392505050565b60208152600082516080602084015260ff81511660a0840152602081015160c08401526001600160a01b0360408201511660e08401526060810151905060806101008401526137d4610120840182612fd4565b905060208401516137ea604085018260ff169052565b5060408401516060840152606084015160808401528091505092915050565b60006080828403121561381b57600080fd5b613823612b1f565b9050815161383081612c5a565b8152602082015161384081612c5a565b80602083015250604082015160408201526060820151606082015292915050565b60008183036101c081121561387557600080fd5b61387d612b1f565b60a082121561388b57600080fd5b613893612b6b565b915083516138a081612c5a565b825260208401516138b081612c5a565b602083015260408401516138c381612c5a565b80604084015250606084015160608301526080840151608083015281815260a084015160208201526138f88560c08601613809565b6040820152613292856101408601613809565b6000806040838503121561391e57600080fd5b505080516020909101519092909150565b8181038181111561286457612864612f6d565b808202811582820484141761286457612864612f6d565b60008261398f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056";

type RollupConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RollupConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Rollup__factory extends ContractFactory {
  constructor(...args: RollupConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _participatingInterface: string,
    _manager: string,
    overrides?: Overrides & { from?: string }
  ): Promise<Rollup> {
    return super.deploy(
      _participatingInterface,
      _manager,
      overrides || {}
    ) as Promise<Rollup>;
  }
  override getDeployTransaction(
    _participatingInterface: string,
    _manager: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _participatingInterface,
      _manager,
      overrides || {}
    );
  }
  override attach(address: string): Rollup {
    return super.attach(address) as Rollup;
  }
  override connect(signer: Signer): Rollup__factory {
    return super.connect(signer) as Rollup__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RollupInterface {
    return new utils.Interface(_abi) as RollupInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Rollup {
    return new Contract(address, _abi, signerOrProvider) as Rollup;
  }
}
