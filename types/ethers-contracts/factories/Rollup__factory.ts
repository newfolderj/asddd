/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Rollup, RollupInterface } from "../Rollup";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_participatingInterface",
        type: "address",
      },
      {
        internalType: "address",
        name: "_manager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "expected",
        type: "address",
      },
    ],
    name: "CALLER_NOT_PORTAL",
    type: "error",
  },
  {
    inputs: [],
    name: "CALLER_NOT_VALIDATOR",
    type: "error",
  },
  {
    inputs: [],
    name: "EMPTY_STATE_ROOT",
    type: "error",
  },
  {
    inputs: [],
    name: "EPOCH_NOT_CONFIRMED",
    type: "error",
  },
  {
    inputs: [],
    name: "INPUTS_HASH_MISMATCH_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INPUTS_LENGTH_MISMATCH_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INPUT_PARAMS_MISMATCH_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_PROOF_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_REQUEST_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_SEQUENCE_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_STATE_UPDATE_SETTLEMENT",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "Id",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cleared",
        type: "uint256",
      },
    ],
    name: "ObligationsWritten",
    type: "event",
  },
  {
    inputs: [],
    name: "CONFIRMATION_BLOCKS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "epoch",
            type: "uint256",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint8",
                        name: "typeIdentifier",
                        type: "uint8",
                      },
                      {
                        internalType: "Id",
                        name: "sequenceId",
                        type: "uint256",
                      },
                      {
                        internalType: "address",
                        name: "participatingInterface",
                        type: "address",
                      },
                      {
                        internalType: "bytes",
                        name: "structData",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct StateUpdateLibrary.StateUpdate",
                    name: "stateUpdate",
                    type: "tuple",
                  },
                  {
                    internalType: "uint8",
                    name: "v",
                    type: "uint8",
                  },
                  {
                    internalType: "bytes32",
                    name: "r",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "s",
                    type: "bytes32",
                  },
                ],
                internalType: "struct StateUpdateLibrary.SignedStateUpdate",
                name: "tradeUpdate",
                type: "tuple",
              },
              {
                internalType: "bytes32[]",
                name: "proof",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Rollup.TradeProof[]",
            name: "tradeProof",
            type: "tuple[]",
          },
        ],
        internalType: "struct Rollup.TradingFeeClaim[]",
        name: "_claims",
        type: "tuple[]",
      },
    ],
    name: "claimTradingFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "confirmStateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    name: "confirmedStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epoch",
    outputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "fraudulent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "getConfirmedStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "getProposedStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastConfirmedEpoch",
    outputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "markFraudulent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Id",
        name: "_chainId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint8",
                    name: "typeIdentifier",
                    type: "uint8",
                  },
                  {
                    internalType: "Id",
                    name: "sequenceId",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "participatingInterface",
                    type: "address",
                  },
                  {
                    internalType: "bytes",
                    name: "structData",
                    type: "bytes",
                  },
                ],
                internalType: "struct StateUpdateLibrary.StateUpdate",
                name: "stateUpdate",
                type: "tuple",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
            ],
            internalType: "struct StateUpdateLibrary.SignedStateUpdate",
            name: "signedUpdate",
            type: "tuple",
          },
          {
            internalType: "Id",
            name: "stateRootId",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "proof",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Rollup.SettlementParams[]",
        name: "_params",
        type: "tuple[]",
      },
    ],
    name: "processSettlements",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "processedSettlements",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "proposalBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "proposalLockId",
    outputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_stateRoot",
        type: "bytes32",
      },
    ],
    name: "proposeStateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposedStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_assets",
        type: "address[]",
      },
    ],
    name: "relayTradingFees",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_stateRoot",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint8",
                name: "typeIdentifier",
                type: "uint8",
              },
              {
                internalType: "Id",
                name: "sequenceId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "participatingInterface",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "structData",
                type: "bytes",
              },
            ],
            internalType: "struct StateUpdateLibrary.StateUpdate",
            name: "stateUpdate",
            type: "tuple",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct StateUpdateLibrary.SignedStateUpdate",
        name: "_signedUpdate",
        type: "tuple",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "submitSettlement",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0604052600160005560006001553480156200001b57600080fd5b5060405162003f3138038062003f318339810160408190526200003e9162000073565b6001600160a01b0391821660a05216608052620000ab565b80516001600160a01b03811681146200006e57600080fd5b919050565b600080604083850312156200008757600080fd5b620000928362000056565b9150620000a26020840162000056565b90509250929050565b60805160a051613e0c62000125600039600081816114f3015281816116880152611b5e0152600081816107fc0152818161091001528181610cff01528181610f5d015281816110ee015281816111eb01528181611400015281816125ca015281816126de01528181612acd0152612d2b0152613e0c6000f3fe6080604052600436106101445760003560e01c8063900cf0cf116100c0578063dac6c59311610074578063f1728ad211610059578063f1728ad21461036d578063f2738861146103a8578063fdb44a17146103bd57600080fd5b8063dac6c59314610347578063df686c851461035a57600080fd5b8063b59c23c1116100a5578063b59c23c1146102e5578063b97dd9e214610305578063c98bdc031461031a57600080fd5b8063900cf0cf146102b9578063a9275f0a146102cf57600080fd5b8063538bf92611610117578063706efcd0116100fc578063706efcd01461022157806379e1ccee14610241578063887412b71461028c57600080fd5b8063538bf926146101d45780636bb38f8d1461020157600080fd5b806310e0917d1461014957806348a8c9211461015e5780634aaac3991461019e5780634cc4f7c0146101b4575b600080fd5b61015c610157366004612f50565b6103dd565b005b34801561016a57600080fd5b5061018b610179366004612f9c565b60066020526000908152604090205481565b6040519081526020015b60405180910390f35b3480156101aa57600080fd5b5061018b61c35081565b3480156101c057600080fd5b5061018b6101cf366004612f9c565b611056565b3480156101e057600080fd5b5061018b6101ef366004612f9c565b60046020526000908152604090205481565b34801561020d57600080fd5b5061018b61021c366004612f9c565b6110a4565b34801561022d57600080fd5b5061015c61023c366004612f9c565b6110c0565b34801561024d57600080fd5b5061027c61025c366004612fb5565b600560209081526000928352604080842090915290825290205460ff1681565b6040519015158152602001610195565b34801561029857600080fd5b5061018b6102a7366004612f9c565b60036020526000908152604090205481565b3480156102c557600080fd5b5061018b60005481565b3480156102db57600080fd5b5061018b60015481565b3480156102f157600080fd5b5061015c610300366004612f9c565b6113fe565b34801561031157600080fd5b5060005461018b565b34801561032657600080fd5b5061018b610335366004612f9c565b60026020526000908152604090205481565b61015c610355366004612f50565b6114e8565b61015c610368366004612fd7565b6117cd565b34801561037957600080fd5b5061027c610388366004612fb5565b600760209081526000928352604080842090915290825290205460ff1681565b3480156103b457600080fd5b5061015c61198c565b3480156103c957600080fd5b5061015c6103d836600461304f565b611b53565b60008167ffffffffffffffff8111156103f8576103f8613091565b60405190808252806020026020018201604052801561046157816020015b60408051606081018252600080825260208083018290529282015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816104165790505b50905060005b82811015610f5a5760008060066000878786818110610488576104886130c0565b905060200281019061049a91906130ef565b602001358152602001908152602001600020549050806000801b036105365760019150600260008787868181106104d3576104d36130c0565b90506020028101906104e591906130ef565b602001358152602001908152602001600020549050806000801b03610536576040517f5aba372c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006105c787878681811061054d5761054d6130c0565b905060200281019061055f91906130ef565b61056d90604081019061312d565b848a8a89818110610580576105806130c0565b905060200281019061059291906130ef565b61059c9080613195565b6040516020016105ac9190613246565b60405160208183030381529060405280519060200120612200565b905080610600576040517f7657200300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002878786818110610614576106146130c0565b905060200281019061062691906130ef565b6106309080613195565b61063a9080613195565b61064890602081019061336d565b60ff1614610682576040517f5424b3dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000878786818110610696576106966130c0565b90506020028101906106a891906130ef565b6106b29080613195565b6106bc9080613195565b6106ca906060810190613388565b8101906106d79190613528565b80516080810151919250906106ec908b612218565b156107645760405162461bcd60e51b815260206004820152603160248201527f536574746c656d656e74207265717565737420636861696e496420646f65736e60448201527f2774206d61746368205f636861696e496400000000000000000000000000000060648201526084015b60405180910390fd5b80602001516001600160a01b03168260400151602001516001600160a01b03161415806107a4575080516040830151516001600160a01b03908116911614155b806107c057506107c08260400151604001518260800151612218565b156107f7576040517fad08c18f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c48ce05b8560400151606001516040518263ffffffff1660e01b815260040161085091815260200190565b6040805180830381865afa15801561086c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089091906135e9565b9150915060405180606001604052808560400151600001516001600160a01b031681526020018560400151602001516001600160a01b0316815260200182846108d9919061363c565b8660400151606001516108ec919061364f565b815250898981518110610901576109016130c0565b602002602001018190525060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d8dfeb456040518163ffffffff1660e01b8152600401602060405180830381865afa15801561096c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109909190613662565b90508715610eab576000816001600160a01b031663282d3fdf836001600160a01b031663e9cbd8226040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109e7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0b9190613662565b64e8d4a51000896040015160600151610a24919061367f565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610a87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aab91906136ba565b90506000826001600160a01b031663282d3fdf846001600160a01b0316631a465fe16040518163ffffffff1660e01b8152600401602060405180830381865afa158015610afc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b209190613662565b856001600160a01b031663d86d30a464e8d4a510008c6040015160600151610b48919061367f565b6040518263ffffffff1660e01b8152600401610b6691815260200190565b602060405180830381865afa158015610b83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba791906136ba565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610c0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2e91906136ba565b6040888101518082015160209091015191517fa6d7f27d00000000000000000000000000000000000000000000000000000000815260048101919091526001600160a01b0391821660248201526044810188905291925084169063a6d7f27d90606401600060405180830381600087803b158015610cab57600080fd5b505af1158015610cbf573d6000803e3d6000fd5b50506040517f0ee2bb3100000000000000000000000000000000000000000000000000000000815260048101879052600092508291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690630ee2bb31906024016040805180830381865afa158015610d45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6991906135e9565b60408b8101518082015160209091015191517f03c1e4b20000000000000000000000000000000000000000000000000000000081526004810189905260248101919091526001600160a01b039182166044820152606481018490529294509092508616906303c1e4b290608401600060405180830381600087803b158015610df057600080fd5b505af1158015610e04573d6000803e3d6000fd5b505050506040898101518082015160209091015191517f03c1e4b20000000000000000000000000000000000000000000000000000000081526004810186905260248101919091526001600160a01b03918216604482015260648101839052908616906303c1e4b290608401600060405180830381600087803b158015610e8a57600080fd5b505af1158015610e9e573d6000803e3d6000fd5b5050505050505050610f3f565b6040858101518082015160209091015191517fa6d7f27d00000000000000000000000000000000000000000000000000000000815260048101919091526001600160a01b039182166024820152604481018590529082169063a6d7f27d90606401600060405180830381600087803b158015610f2657600080fd5b505af1158015610f3a573d6000803e3d6000fd5b505050505b50505050505050508080610f52906136d3565b915050610467565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638406c0796040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fdd9190613662565b6001600160a01b031663ea03683d34868460405180602001604052806000815250336040518663ffffffff1660e01b815260040161101e949392919061376f565b6000604051808303818588803b15801561103757600080fd5b505af115801561104b573d6000803e3d6000fd5b505050505050505050565b6000818152600660205260408120549081900361109f576040517fa597b61c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b6000818152600260205260408120549081900361109f57600080fd5b6040517ffacd743b0000000000000000000000000000000000000000000000000000000081523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063facd743b90602401602060405180830381865afa15801561113d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111619190613817565b611197576040517fd6917b3700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000036111e75760405162461bcd60e51b815260206004820152601960248201527f50726f706f73656420656d70747920737461746520726f6f7400000000000000604482015260640161075b565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d8dfeb456040518163ffffffff1660e01b8152600401602060405180830381865afa158015611247573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126b9190613662565b90506000816001600160a01b031663282d3fdf836001600160a01b0316631a465fe16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e09190613662565b846001600160a01b031663ab900a8d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561131e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134291906136ba565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156113a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c991906136ba565b600080548152600260209081526040808320879055958252600381528582204390556004905293842055505080546001019055565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b2bbcfc06040518163ffffffff1660e01b8152600401602060405180830381865afa15801561145c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114809190613662565b6001600160a01b0316336001600160a01b03161461149d57600080fd5b600090815260056020908152604080832060028352818420548452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146115865760405162461bcd60e51b815260206004820152603360248201527f4f6e6c792070617274696369706174696e6720696e746572666163652063616e60448201527f20636c61696d2074726164696e67206665657300000000000000000000000000606482015260840161075b565b60008167ffffffffffffffff8111156115a1576115a1613091565b60405190808252806020026020018201604052801561160a57816020015b60408051606081018252600080825260208083018290529282015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816115bf5790505b50905060005b82811015610f5a57600085815260096020526040812090858584818110611639576116396130c0565b905060200201602081019061164e9190613834565b6001600160a01b03166001600160a01b031681526020019081526020016000205460000361167b57600080fd5b60405180606001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020018585848181106116c7576116c76130c0565b90506020020160208101906116dc9190613834565b6001600160a01b03168152600087815260096020908152604082209201919087878681811061170d5761170d6130c0565b90506020020160208101906117229190613834565b6001600160a01b03166001600160a01b0316815260200190815260200160002054815250828281518110611758576117586130c0565b6020026020010181905250600060096000878152602001908152602001600020600086868581811061178c5761178c6130c0565b90506020020160208101906117a19190613834565b6001600160a01b03168152602081019190915260400160002055806117c5816136d3565b915050611610565b60005460010160005560018054016001819055600090815260066020526040902084905560026117fd8480613195565b61180b90602081019061336d565b60ff1614611845576040517f5424b3dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006118518480613195565b61185f906060810190613388565b81019061186c9190613528565b60408051600180825281830190925291925060009190816020015b6118ea604080516101608101909152600060e08201818152610100830182905261012083018290526060610140840181905283019081526080830182905260a0830182905260c08301919091528190815260200160008152602001606081525090565b81526020019060019003908161188757905050905060405180606001604052808661191490613851565b8152602001600154815260200185858080602002602001604051908101604052809392919081815260200183836020028082843760009201829052509390945250508351849250611967576119676130c0565b602002602001018190525061198482604001516040015182612223565b505050505050565b6001805401600181905560009081526002602052604081205490819003611a1b5760405162461bcd60e51b815260206004820152602560248201527f547279696e6720746f20636f6e6669726d20616e20656d70747920737461746560448201527f20726f6f74000000000000000000000000000000000000000000000000000000606482015260840161075b565b600081815260036020526040902054611a3661c3508261363c565b431015611aab5760405162461bcd60e51b815260206004820152602f60248201527f50726f706f73656420737461746520726f6f7420686173206e6f74207061737360448201527f656420667261756420706572696f640000000000000000000000000000000000606482015260840161075b565b600154600090815260056020908152604080832085845290915290205460ff1615611b3e5760405162461bcd60e51b815260206004820152602960248201527f547279696e6720746f20636f6e6669726d2061206672617564756c656e74207360448201527f7461746520726f6f740000000000000000000000000000000000000000000000606482015260840161075b565b50600154600090815260066020526040902055565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611bf15760405162461bcd60e51b815260206004820152603360248201527f4f6e6c792070617274696369706174696e6720696e746572666163652063616e60448201527f20636c61696d2074726164696e67206665657300000000000000000000000000606482015260840161075b565b60005b818110156121fb57600060066000858585818110611c1457611c146130c0565b9050602002810190611c26919061398d565b60000135815260200190815260200160002054905080600003611cd75760405162461bcd60e51b815260206004820152604560248201527f547279696e6720746f20636c61696d2074726164696e67206665657320666f7260448201527f20616e2065706f636820746861742069732079657420746f20626520636f6e6660648201527f69726d6564000000000000000000000000000000000000000000000000000000608482015260a40161075b565b60005b848484818110611cec57611cec6130c0565b9050602002810190611cfe919061398d565b611d0c90602081019061312d565b90508110156121e6576000611dd1868686818110611d2c57611d2c6130c0565b9050602002810190611d3e919061398d565b611d4c90602081019061312d565b84818110611d5c57611d5c6130c0565b9050602002810190611d6e919061398d565b611d7c90602081019061312d565b85898989818110611d8f57611d8f6130c0565b9050602002810190611da1919061398d565b611daf90602081019061312d565b87818110611dbf57611dbf6130c0565b9050602002810190610592919061398d565b905080611e205760405162461bcd60e51b815260206004820152601e60248201527f496e76616c6964206d65726b6c652070726f6f6620666f722074726164650000604482015260640161075b565b6001868686818110611e3457611e346130c0565b9050602002810190611e46919061398d565b611e5490602081019061312d565b84818110611e6457611e646130c0565b9050602002810190611e76919061398d565b611e809080613195565b611e8a9080613195565b611e9890602081019061336d565b60ff1614611ee85760405162461bcd60e51b815260206004820152601b60248201527f537461746520757064617465206973206e6f7420612074726164650000000000604482015260640161075b565b6000868686818110611efc57611efc6130c0565b9050602002810190611f0e919061398d565b611f1c90602081019061312d565b84818110611f2c57611f2c6130c0565b9050602002810190611f3e919061398d565b611f489080613195565b611f529080613195565b611f60906060810190613388565b810190611f6d9190613b6e565b905060086000888888818110611f8557611f856130c0565b9050602002810190611f97919061398d565b611fa590602081019061312d565b86818110611fb557611fb56130c0565b9050602002810190611fc7919061398d565b611fd19080613195565b611fdb9080613195565b60209081013582528101919091526040016000205460ff16156120665760405162461bcd60e51b815260206004820152602d60248201527f4665657320666f722074686973207472616465206861766520616c726561647960448201527f206265656e20636c61696d656400000000000000000000000000000000000000606482015260840161075b565b60016008600089898981811061207e5761207e6130c0565b9050602002810190612090919061398d565b61209e90602081019061312d565b878181106120ae576120ae6130c0565b90506020028101906120c0919061398d565b6120ca9080613195565b6120d49080613195565b602090810135825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790556101c08101516060015115612173576101c081018051606081015160409182015160009081526009602090815283822094518101516001600160a01b031682529390935290822080549192909161216d90849061363c565b90915550505b6101e081015160600151156121d1576101e081018051606081015160409182015160009081526009602090815283822094518101516001600160a01b03168252939093529082208054919290916121cb90849061363c565b90915550505b505080806121de906136d3565b915050611cda565b505080806121f3906136d3565b915050611bf4565b505050565b60008261220e868685612e23565b1495945050505050565b818114155b92915050565b6000815167ffffffffffffffff81111561223f5761223f613091565b6040519080825280602002602001820160405280156122a857816020015b60408051606081018252600080825260208083018290529282015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90920191018161225d5790505b50905060005b8251811015612d2857600080600660008685815181106122d0576122d06130c0565b6020026020010151602001518152602001908152602001600020549050806000801b0361236a576001915060026000868581518110612311576123116130c0565b6020026020010151602001518152602001908152602001600020549050806000801b0361236a576040517f5aba372c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006123d7868581518110612381576123816130c0565b602002602001015160400151838887815181106123a0576123a06130c0565b6020026020010151600001516040516020016123bc9190613c78565b60405160208183030381529060405280519060200120612e6f565b905080612410576040517f7657200300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260ff16868581518110612427576124276130c0565b602090810291909101015151515160ff161461246f576040517f5424b3dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000868581518110612483576124836130c0565b60200260200101516000015160000151606001518060200190518101906124aa9190613d58565b80516080810151919250906124bf908a612218565b156125325760405162461bcd60e51b815260206004820152603160248201527f536574746c656d656e74207265717565737420636861696e496420646f65736e60448201527f2774206d61746368205f636861696e4964000000000000000000000000000000606482015260840161075b565b80602001516001600160a01b03168260400151602001516001600160a01b0316141580612572575080516040830151516001600160a01b03908116911614155b8061258e575061258e8260400151604001518260800151612218565b156125c5576040517fad08c18f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c48ce05b8560400151606001516040518263ffffffff1660e01b815260040161261e91815260200190565b6040805180830381865afa15801561263a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061265e91906135e9565b9150915060405180606001604052808560400151600001516001600160a01b031681526020018560400151602001516001600160a01b0316815260200182846126a7919061363c565b8660400151606001516126ba919061364f565b8152508989815181106126cf576126cf6130c0565b602002602001018190525060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d8dfeb456040518163ffffffff1660e01b8152600401602060405180830381865afa15801561273a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061275e9190613662565b90508715612c79576000816001600160a01b031663282d3fdf836001600160a01b031663e9cbd8226040518163ffffffff1660e01b8152600401602060405180830381865afa1580156127b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127d99190613662565b64e8d4a510008960400151606001516127f2919061367f565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015612855573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061287991906136ba565b90506000826001600160a01b031663282d3fdf846001600160a01b0316631a465fe16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156128ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128ee9190613662565b856001600160a01b031663d86d30a464e8d4a510008c6040015160600151612916919061367f565b6040518263ffffffff1660e01b815260040161293491815260200190565b602060405180830381865afa158015612951573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061297591906136ba565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156129d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129fc91906136ba565b6040888101518082015160209091015191517fa6d7f27d00000000000000000000000000000000000000000000000000000000815260048101919091526001600160a01b0391821660248201526044810188905291925084169063a6d7f27d90606401600060405180830381600087803b158015612a7957600080fd5b505af1158015612a8d573d6000803e3d6000fd5b50506040517f0ee2bb3100000000000000000000000000000000000000000000000000000000815260048101879052600092508291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690630ee2bb31906024016040805180830381865afa158015612b13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b3791906135e9565b60408b8101518082015160209091015191517f03c1e4b20000000000000000000000000000000000000000000000000000000081526004810189905260248101919091526001600160a01b039182166044820152606481018490529294509092508616906303c1e4b290608401600060405180830381600087803b158015612bbe57600080fd5b505af1158015612bd2573d6000803e3d6000fd5b505050506040898101518082015160209091015191517f03c1e4b20000000000000000000000000000000000000000000000000000000081526004810186905260248101919091526001600160a01b03918216604482015260648101839052908616906303c1e4b290608401600060405180830381600087803b158015612c5857600080fd5b505af1158015612c6c573d6000803e3d6000fd5b5050505050505050612d0d565b6040858101518082015160209091015191517fa6d7f27d00000000000000000000000000000000000000000000000000000000815260048101919091526001600160a01b039182166024820152604481018590529082169063a6d7f27d90606401600060405180830381600087803b158015612cf457600080fd5b505af1158015612d08573d6000803e3d6000fd5b505050505b50505050505050508080612d20906136d3565b9150506122ae565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638406c0796040518163ffffffff1660e01b8152600401602060405180830381865afa158015612d87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612dab9190613662565b6001600160a01b031663ea03683d34858460405180602001604052806000815250336040518663ffffffff1660e01b8152600401612dec949392919061376f565b6000604051808303818588803b158015612e0557600080fd5b505af1158015612e19573d6000803e3d6000fd5b5050505050505050565b600081815b84811015612e6657612e5282878784818110612e4657612e466130c0565b90506020020135612e85565b915080612e5e816136d3565b915050612e28565b50949350505050565b600082612e7c8584612eb7565b14949350505050565b6000818310612ea1576000828152602084905260409020612eb0565b60008381526020839052604090205b9392505050565b600081815b8451811015612efc57612ee882868381518110612edb57612edb6130c0565b6020026020010151612e85565b915080612ef4816136d3565b915050612ebc565b509392505050565b60008083601f840112612f1657600080fd5b50813567ffffffffffffffff811115612f2e57600080fd5b6020830191508360208260051b8501011115612f4957600080fd5b9250929050565b600080600060408486031215612f6557600080fd5b83359250602084013567ffffffffffffffff811115612f8357600080fd5b612f8f86828701612f04565b9497909650939450505050565b600060208284031215612fae57600080fd5b5035919050565b60008060408385031215612fc857600080fd5b50508035926020909101359150565b60008060008060608587031215612fed57600080fd5b84359350602085013567ffffffffffffffff8082111561300c57600080fd5b908601906080828903121561302057600080fd5b9093506040860135908082111561303657600080fd5b5061304387828801612f04565b95989497509550505050565b6000806020838503121561306257600080fd5b823567ffffffffffffffff81111561307957600080fd5b61308585828601612f04565b90969095509350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa183360301811261312357600080fd5b9190910192915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261316257600080fd5b83018035915067ffffffffffffffff82111561317d57600080fd5b6020019150600581901b3603821315612f4957600080fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8183360301811261312357600080fd5b803560ff8116811461109f57600080fd5b6001600160a01b03811681146131ef57600080fd5b50565b803561109f816131da565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60208152600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8184360301811261327e57600080fd5b60806020840152830160ff613292826131c9565b1660a0840152602081013560c084015260408101356132b0816131da565b6001600160a01b031660e08401526060810135368290037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe10181126132f457600080fd5b0160208101903567ffffffffffffffff81111561331057600080fd5b80360382131561331f57600080fd5b6080610100850152613336610120850182846131fd565b915050613345602085016131c9565b60ff811660408501525060408401356060840152606084013560808401528091505092915050565b60006020828403121561337f57600080fd5b612eb0826131c9565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126133bd57600080fd5b83018035915067ffffffffffffffff8211156133d857600080fd5b602001915036819003821315612f4957600080fd5b6040516080810167ffffffffffffffff8111828210171561341057613410613091565b60405290565b60405160c0810167ffffffffffffffff8111828210171561341057613410613091565b604051610120810167ffffffffffffffff8111828210171561341057613410613091565b604051610200810167ffffffffffffffff8111828210171561341057613410613091565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156134c8576134c8613091565b604052919050565b6000608082840312156134e257600080fd5b6134ea6133ed565b905081356134f7816131da565b81526020820135613507816131da565b80602083015250604082013560408201526060820135606082015292915050565b60008183036101e081121561353c57600080fd5b6135446133ed565b60c082121561355257600080fd5b61355a613416565b91508335613567816131da565b82526020840135613577816131da565b6020830152604084013561358a816131da565b80604084015250606084013560608301526080840135608083015260a084013560a083015281815260c084013560208201526135c98560e086016134d0565b60408201526135dc8561016086016134d0565b6060820152949350505050565b600080604083850312156135fc57600080fd5b505080516020909101519092909150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561221d5761221d61360d565b8181038181111561221d5761221d61360d565b60006020828403121561367457600080fd5b8151612eb0816131da565b6000826136b5577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000602082840312156136cc57600080fd5b5051919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036137045761370461360d565b5060010190565b6000815180845260005b8181101561373157602081850181015186830182015201613715565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600060808201868352602060808185015281875180845260a086019150828901935060005b818110156137d257845180516001600160a01b0390811685528582015116858501526040908101519084015293830193606090920191600101613794565b505084810360408601526137e6818861370b565b935050505061380060608301846001600160a01b03169052565b95945050505050565b80151581146131ef57600080fd5b60006020828403121561382957600080fd5b8151612eb081613809565b60006020828403121561384657600080fd5b8135612eb0816131da565b60006080823603121561386357600080fd5b61386b6133ed565b823567ffffffffffffffff8082111561388357600080fd5b81850191506080823603121561389857600080fd5b6138a06133ed565b6138a9836131c9565b81526020808401358183015260408401356138c3816131da565b60408301526060840135838111156138da57600080fd5b939093019236601f8501126138ee57600080fd5b83358381111561390057613900613091565b613930827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601613481565b9350808452368282870101111561394657600080fd5b808286018386013760008282860101525082606083015281855261396b8188016131c9565b9085015250505060408381013590820152606092830135928101929092525090565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc183360301811261312357600080fd5b6000608082840312156139d357600080fd5b6139db6133ed565b905081356139e8816131da565b8152602082810135908201526040820135613a02816131da565b806040830152506060820135606082015292915050565b803561109f81613809565b6000818303610140811215613a3857600080fd5b613a406133ed565b915060e0811215613a5057600080fd5b50613a596133ed565b613a6384846139c1565b81526080830135613a7381613809565b602082015260a0830135604082015260c083013560608201528152613a9a60e083016131c9565b60208201526101008201356040820152610120820135606082015292915050565b60006103c08284031215613ace57600080fd5b613ad6613439565b9050613ae1826131f2565b8152613af08360208401613a24565b6020820152613b03836101608401613a24565b6040820152613b16836102a084016139c1565b6060820152610320820135608082015261034082013560a0820152613b3e6103608301613a19565b60c0820152613b5061038083016131f2565b60e0820152613b626103a083016131f2565b61010082015292915050565b60006107e08284031215613b8157600080fd5b613b8961345d565b82358152613b9a8460208501613abb565b60208201526103e08301356040820152613bb88461040085016134d0565b60608201526104808301356080820152613bd6846104a085016134d0565b60a082015261052083013560c0820152613bf48461054085016134d0565b60e08201526105c0830135610100820152613c13846105e085016134d0565b6101208201526106608301356101408201526106808301356101608201526106a08301356101808201526106c08301356101a0820152613c57846106e085016134d0565b6101c0820152613c6b8461076085016134d0565b6101e08201529392505050565b60208152600082516080602084015260ff81511660a0840152602081015160c08401526001600160a01b0360408201511660e0840152606081015190506080610100840152613ccb61012084018261370b565b90506020840151613ce1604085018260ff169052565b5060408401516060840152606084015160808401528091505092915050565b600060808284031215613d1257600080fd5b613d1a6133ed565b90508151613d27816131da565b81526020820151613d37816131da565b80602083015250604082015160408201526060820151606082015292915050565b60008183036101e0811215613d6c57600080fd5b613d746133ed565b60c0821215613d8257600080fd5b613d8a613416565b91508351613d97816131da565b82526020840151613da7816131da565b60208301526040840151613dba816131da565b80604084015250606084015160608301526080840151608083015260a084015160a083015281815260c08401516020820152613df98560e08601613d00565b60408201526135dc856101608601613d0056";

type RollupConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RollupConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Rollup__factory extends ContractFactory {
  constructor(...args: RollupConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _participatingInterface: string,
    _manager: string,
    overrides?: Overrides & { from?: string }
  ): Promise<Rollup> {
    return super.deploy(
      _participatingInterface,
      _manager,
      overrides || {}
    ) as Promise<Rollup>;
  }
  override getDeployTransaction(
    _participatingInterface: string,
    _manager: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _participatingInterface,
      _manager,
      overrides || {}
    );
  }
  override attach(address: string): Rollup {
    return super.attach(address) as Rollup;
  }
  override connect(signer: Signer): Rollup__factory {
    return super.connect(signer) as Rollup__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RollupInterface {
    return new utils.Interface(_abi) as RollupInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Rollup {
    return new Contract(address, _abi, signerOrProvider) as Rollup;
  }
}
