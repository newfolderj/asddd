/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Rollup, RollupInterface } from "../Rollup";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_participatingInterface",
        type: "address",
      },
      {
        internalType: "address",
        name: "_manager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "expected",
        type: "address",
      },
    ],
    name: "CALLER_NOT_PORTAL",
    type: "error",
  },
  {
    inputs: [],
    name: "CALLER_NOT_VALIDATOR",
    type: "error",
  },
  {
    inputs: [],
    name: "EMPTY_STATE_ROOT",
    type: "error",
  },
  {
    inputs: [],
    name: "EPOCH_NOT_CONFIRMED",
    type: "error",
  },
  {
    inputs: [],
    name: "INPUTS_HASH_MISMATCH_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INPUTS_LENGTH_MISMATCH_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INPUT_PARAMS_MISMATCH_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_PROOF_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_REQUEST_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_SEQUENCE_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_STATE_UPDATE_SETTLEMENT",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "SettlementFeePaid",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "epoch",
            type: "uint256",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint8",
                        name: "typeIdentifier",
                        type: "uint8",
                      },
                      {
                        internalType: "Id",
                        name: "sequenceId",
                        type: "uint256",
                      },
                      {
                        internalType: "address",
                        name: "participatingInterface",
                        type: "address",
                      },
                      {
                        internalType: "bytes",
                        name: "structData",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct StateUpdateLibrary.StateUpdate",
                    name: "stateUpdate",
                    type: "tuple",
                  },
                  {
                    internalType: "uint8",
                    name: "v",
                    type: "uint8",
                  },
                  {
                    internalType: "bytes32",
                    name: "r",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "s",
                    type: "bytes32",
                  },
                ],
                internalType: "struct StateUpdateLibrary.SignedStateUpdate",
                name: "tradeUpdate",
                type: "tuple",
              },
              {
                internalType: "bytes32[]",
                name: "proof",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Rollup.TradeProof[]",
            name: "tradeProof",
            type: "tuple[]",
          },
        ],
        internalType: "struct Rollup.TradingFeeClaim[]",
        name: "_claims",
        type: "tuple[]",
      },
    ],
    name: "claimTradingFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "confirmStateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    name: "confirmedStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epoch",
    outputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "fraudulent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "getConfirmedStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "getProposedStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lockId",
        type: "uint256",
      },
    ],
    name: "isConfirmedLockId",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lockId",
        type: "uint256",
      },
    ],
    name: "isFraudulentLockId",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastConfirmedEpoch",
    outputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "markFraudulent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Id",
        name: "_chainId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint8",
                    name: "typeIdentifier",
                    type: "uint8",
                  },
                  {
                    internalType: "Id",
                    name: "sequenceId",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "participatingInterface",
                    type: "address",
                  },
                  {
                    internalType: "bytes",
                    name: "structData",
                    type: "bytes",
                  },
                ],
                internalType: "struct StateUpdateLibrary.StateUpdate",
                name: "stateUpdate",
                type: "tuple",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
            ],
            internalType: "struct StateUpdateLibrary.SignedStateUpdate",
            name: "signedUpdate",
            type: "tuple",
          },
          {
            internalType: "Id",
            name: "stateRootId",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "proof",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Rollup.SettlementParams[]",
        name: "_params",
        type: "tuple[]",
      },
    ],
    name: "processSettlements",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "processedSettlements",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "proposalBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_stateRoot",
        type: "bytes32",
      },
    ],
    name: "proposeStateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposedStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_assets",
        type: "address[]",
      },
    ],
    name: "relayTradingFees",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_stateRoot",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint8",
                name: "typeIdentifier",
                type: "uint8",
              },
              {
                internalType: "Id",
                name: "sequenceId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "participatingInterface",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "structData",
                type: "bytes",
              },
            ],
            internalType: "struct StateUpdateLibrary.StateUpdate",
            name: "stateUpdate",
            type: "tuple",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct StateUpdateLibrary.SignedStateUpdate",
        name: "_signedUpdate",
        type: "tuple",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "submitSettlement",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0604052600160005560006001553480156200001b57600080fd5b5060405162003b3938038062003b398339810160408190526200003e9162000073565b6001600160a01b0391821660a05216608052620000ab565b80516001600160a01b03811681146200006e57600080fd5b919050565b600080604083850312156200008757600080fd5b620000928362000056565b9150620000a26020840162000056565b90509250929050565b60805160a051613a0d6200012c60003960008181610a3701528181610bcc015261132f015260008181610477015281816106110152818161070e0152818161094401528181610d1401528181610e3b0152818161117d01528181611e6701528181611fd801528181612062015281816122a001526126360152613a0d6000f3fe6080604052600436106101445760003560e01c8063900cf0cf116100c0578063dac6c59311610074578063f1728ad211610059578063f1728ad2146103d9578063f273886114610414578063fdb44a171461042957600080fd5b8063dac6c593146103b3578063df686c85146103c657600080fd5b8063b59c23c1116100a5578063b59c23c114610351578063b97dd9e214610371578063c98bdc031461038657600080fd5b8063900cf0cf14610325578063a9275f0a1461033b57600080fd5b80636b6e30e411610117578063706efcd0116100fc578063706efcd01461029d57806379e1ccee146102bd578063887412b7146102f857600080fd5b80636b6e30e41461022a5780636bb38f8d1461027d57600080fd5b80630792457c1461014957806310e0917d146101ba57806348a8c921146101cf5780634cc4f7c01461020a575b600080fd5b34801561015557600080fd5b506101a561016436600461299a565b600090815260076020908152604080832081518083018352815481526001909101548184018190528452600483528184209051845290915290205460ff1690565b60405190151581526020015b60405180910390f35b6101cd6101c83660046129ff565b610449565b005b3480156101db57600080fd5b506101fc6101ea36600461299a565b60056020526000908152604090205481565b6040519081526020016101b1565b34801561021657600080fd5b506101fc61022536600461299a565b610579565b34801561023657600080fd5b506101a561024536600461299a565b600090815260076020908152604080832081518083018352815480825260019092015490840181905284526005909252909120541490565b34801561028957600080fd5b506101fc61029836600461299a565b6105c7565b3480156102a957600080fd5b506101cd6102b836600461299a565b6105e3565b3480156102c957600080fd5b506101a56102d8366004612a4b565b600460209081526000928352604080842090915290825290205460ff1681565b34801561030457600080fd5b506101fc61031336600461299a565b60036020526000908152604090205481565b34801561033157600080fd5b506101fc60005481565b34801561034757600080fd5b506101fc60015481565b34801561035d57600080fd5b506101cd61036c36600461299a565b610942565b34801561037d57600080fd5b506000546101fc565b34801561039257600080fd5b506101fc6103a136600461299a565b60026020526000908152604090205481565b6101cd6103c13660046129ff565b610a2c565b6101cd6103d4366004612a6d565b610e0d565b3480156103e557600080fd5b506101a56103f4366004612a4b565b600660209081526000928352604080842090915290825290205460ff1681565b34801561042057600080fd5b506101cd6110d4565b34801561043557600080fd5b506101cd610444366004612ae5565b611324565b6040517ffacd743b0000000000000000000000000000000000000000000000000000000081523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063facd743b90602401602060405180830381865afa1580156104c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ea9190612b38565b6105615760405162461bcd60e51b815260206004820152602660248201527f4f6e6c792076616c696461746f722063616e2070726f6365737320736574746c60448201527f656d656e7473000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6105748361056f8385612e1d565b611a01565b505050565b600081815260056020526040812054908190036105c2576040517fa597b61c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b600081815260026020526040812054908190036105c257600080fd5b6040517ffacd743b0000000000000000000000000000000000000000000000000000000081523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063facd743b90602401602060405180830381865afa158015610660573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106849190612b38565b6106ba576040517fd6917b3700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060000361070a5760405162461bcd60e51b815260206004820152601960248201527f50726f706f73656420656d70747920737461746520726f6f74000000000000006044820152606401610558565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d8dfeb456040518163ffffffff1660e01b8152600401602060405180830381865afa15801561076a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078e9190612f50565b90506000816001600160a01b031663282d3fdf836001600160a01b0316631a465fe16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108039190612f50565b846001600160a01b031663ab900a8d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610841573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108659190612f6d565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156108c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ec9190612f6d565b600080548152600260209081526040808320879055868352600382528083204390558051808201825296875282548783019081529383526007909152812094518555905160019485015580549093019092555050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b2bbcfc06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c49190612f50565b6001600160a01b0316336001600160a01b0316146109e157600080fd5b600090815260046020908152604080832060028352818420548452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610aca5760405162461bcd60e51b815260206004820152603360248201527f4f6e6c792070617274696369706174696e6720696e746572666163652063616e60448201527f20636c61696d2074726164696e672066656573000000000000000000000000006064820152608401610558565b60008167ffffffffffffffff811115610ae557610ae5612b55565b604051908082528060200260200182016040528015610b4e57816020015b60408051606081018252600080825260208083018290529282015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909201910181610b035790505b50905060005b82811015610d1157600085815260096020526040812090858584818110610b7d57610b7d612f86565b9050602002016020810190610b929190612fb5565b6001600160a01b03166001600160a01b0316815260200190815260200160002054600003610bbf57600080fd5b60405180606001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602001858584818110610c0b57610c0b612f86565b9050602002016020810190610c209190612fb5565b6001600160a01b031681526000878152600960209081526040822092019190878786818110610c5157610c51612f86565b9050602002016020810190610c669190612fb5565b6001600160a01b03166001600160a01b0316815260200190815260200160002054815250828281518110610c9c57610c9c612f86565b60200260200101819052506000600960008781526020019081526020016000206000868685818110610cd057610cd0612f86565b9050602002016020810190610ce59190612fb5565b6001600160a01b0316815260208101919091526040016000205580610d0981613001565b915050610b54565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638406c0796040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d949190612f50565b6001600160a01b031663ea03683d34868460405180602001604052806000815250336040518663ffffffff1660e01b8152600401610dd5949392919061309d565b6000604051808303818588803b158015610dee57600080fd5b505af1158015610e02573d6000803e3d6000fd5b505050505050505050565b6040517ffacd743b0000000000000000000000000000000000000000000000000000000081523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063facd743b90602401602060405180830381865afa158015610e8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eae9190612b38565b610f205760405162461bcd60e51b815260206004820152602660248201527f4f6e6c792076616c696461746f722063616e2070726f6365737320736574746c60448201527f656d656e747300000000000000000000000000000000000000000000000000006064820152608401610558565b600080546001018082558152600260208190526040909120859055610f458480613137565b610f53906020810190613175565b60ff1614610f8d576040517f5424b3dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610f998480613137565b610fa7906060810190613190565b810190610fb4919061324d565b60408051600180825281830190925291925060009190816020015b611032604080516101608101909152600060e08201818152610100830182905261012083018290526060610140840181905283019081526080830182905260a0830182905260c08301919091528190815260200160008152602001606081525090565b815260200190600190039081610fcf57905050905060405180606001604052808661105c9061330e565b81526020016000548152602001858580806020026020016040519081016040528093929190818152602001838360200280828437600092018290525093909452505083518492506110af576110af612f86565b60200260200101819052506110cc82604001516040015182611a01565b505050505050565b60018054016001819055600090815260026020526040812054908190036111635760405162461bcd60e51b815260206004820152602560248201527f547279696e6720746f20636f6e6669726d20616e20656d70747920737461746560448201527f20726f6f740000000000000000000000000000000000000000000000000000006064820152608401610558565b6000600360008381526020019081526020016000205490507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d43a33ea6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111fd9190612f6d565b611207908261331a565b43101561127c5760405162461bcd60e51b815260206004820152602f60248201527f50726f706f73656420737461746520726f6f7420686173206e6f74207061737360448201527f656420667261756420706572696f6400000000000000000000000000000000006064820152608401610558565b600154600090815260046020908152604080832085845290915290205460ff161561130f5760405162461bcd60e51b815260206004820152602960248201527f547279696e6720746f20636f6e6669726d2061206672617564756c656e74207360448201527f7461746520726f6f7400000000000000000000000000000000000000000000006064820152608401610558565b50600154600090815260056020526040902055565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146113c25760405162461bcd60e51b815260206004820152603360248201527f4f6e6c792070617274696369706174696e6720696e746572666163652063616e60448201527f20636c61696d2074726164696e672066656573000000000000000000000000006064820152608401610558565b60005b81811015610574576000600560008585858181106113e5576113e5612f86565b90506020028101906113f7919061332d565b600001358152602001908152602001600020549050806000036114a85760405162461bcd60e51b815260206004820152604560248201527f547279696e6720746f20636c61696d2074726164696e67206665657320666f7260448201527f20616e2065706f636820746861742069732079657420746f20626520636f6e6660648201527f69726d6564000000000000000000000000000000000000000000000000000000608482015260a401610558565b60005b8484848181106114bd576114bd612f86565b90506020028101906114cf919061332d565b6114dd906020810190613361565b90508110156119ec5760006115d78686868181106114fd576114fd612f86565b905060200281019061150f919061332d565b61151d906020810190613361565b8481811061152d5761152d612f86565b905060200281019061153f919061332d565b61154d906020810190613361565b8589898981811061156057611560612f86565b9050602002810190611572919061332d565b611580906020810190613361565b8781811061159057611590612f86565b90506020028101906115a2919061332d565b6115ac9080613137565b6040516020016115bc9190613412565b60405160208183030381529060405280519060200120612896565b9050806116265760405162461bcd60e51b815260206004820152601e60248201527f496e76616c6964206d65726b6c652070726f6f6620666f7220747261646500006044820152606401610558565b600186868681811061163a5761163a612f86565b905060200281019061164c919061332d565b61165a906020810190613361565b8481811061166a5761166a612f86565b905060200281019061167c919061332d565b6116869080613137565b6116909080613137565b61169e906020810190613175565b60ff16146116ee5760405162461bcd60e51b815260206004820152601b60248201527f537461746520757064617465206973206e6f74206120747261646500000000006044820152606401610558565b600086868681811061170257611702612f86565b9050602002810190611714919061332d565b611722906020810190613361565b8481811061173257611732612f86565b9050602002810190611744919061332d565b61174e9080613137565b6117589080613137565b611766906060810190613190565b81019061177391906136e6565b90506008600088888881811061178b5761178b612f86565b905060200281019061179d919061332d565b6117ab906020810190613361565b868181106117bb576117bb612f86565b90506020028101906117cd919061332d565b6117d79080613137565b6117e19080613137565b60209081013582528101919091526040016000205460ff161561186c5760405162461bcd60e51b815260206004820152602d60248201527f4665657320666f722074686973207472616465206861766520616c726561647960448201527f206265656e20636c61696d6564000000000000000000000000000000000000006064820152608401610558565b60016008600089898981811061188457611884612f86565b9050602002810190611896919061332d565b6118a4906020810190613361565b878181106118b4576118b4612f86565b90506020028101906118c6919061332d565b6118d09080613137565b6118da9080613137565b602090810135825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790556101c08101516060015115611979576101c081018051606081015160409182015160009081526009602090815283822094518101516001600160a01b031682529390935290822080549192909161197390849061331a565b90915550505b6101e081015160600151156119d7576101e081018051606081015160409182015160009081526009602090815283822094518101516001600160a01b03168252939093529082208054919290916119d190849061331a565b90915550505b505080806119e490613001565b9150506114ab565b505080806119f990613001565b9150506113c5565b60408051606080820183526000808352835161014081018552608080820183815260a0830184905260c0830184905260e0830184905261010083018490526101208301849052825260208083018490528651808301885284815280820185905280880185905280860185905283880152865191820187528382528181018490528187018490528185018490529382015291830191909152918101919091526000825167ffffffffffffffff811115611abb57611abb612b55565b604051908082528060200260200182016040528015611b2457816020015b60408051606081018252600080825260208083018290529282015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909201910181611ad95790505b50905060005b8351811015610d1157600060056000868481518110611b4b57611b4b612f86565b60209081029190910181015181015182528101919091526040016000908120548086529003611be9576001905060026000868481518110611b8e57611b8e612f86565b60209081029190910181015181015182528101919091526040016000908120548086529003611be9576040517f5aba372c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611c5a868481518110611c0057611c00612f86565b6020026020010151604001518660000151888681518110611c2357611c23612f86565b602002602001015160000151604051602001611c3f91906137f0565b604051602081830303815290604052805190602001206128ae565b905080611c93576040517f7657200300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260ff16868481518110611caa57611caa612f86565b602090810291909101015151515160ff1614611cf2576040517f5424b3dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50848281518110611d0557611d05612f86565b6020026020010151600001516000015160600151806020019051810190611d2c91906138d0565b602085018190525160800151611d4290876128c4565b15611db55760405162461bcd60e51b815260206004820152603160248201527f536574746c656d656e74207265717565737420636861696e496420646f65736e60448201527f2774206d61746368205f636861696e49640000000000000000000000000000006064820152608401610558565b836020015160000151602001516001600160a01b0316846020015160400151602001516001600160a01b0316141580611e0857506020840151805151604090910151516001600160a01b03908116911614155b80611e2b575060208401516040808201510151905160800151611e2b91906128c4565b15611e62576040517fad08c18f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c48ce05b876020015160400151606001516040518263ffffffff1660e01b8152600401611ebf91815260200190565b6040805180830381865afa158015611edb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eff9190613984565b604080516060810182526020808b018051840151516001600160a01b039081168452905184015182015116908201529294509092508101611f40838561331a565b88602001516040015160600151611f5791906139a8565b815250858581518110611f6c57611f6c612f86565b60209081029190910181019190915286810151604001519081015190516001600160a01b03918216918a91167f2ecb680081153a1937489792c1a616b7ceb5f4997852163ddd78e7c700650d63611fc3858761331a565b60405190815260200160405180910390a460007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d8dfeb456040518163ffffffff1660e01b8152600401602060405180830381865afa158015612034573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120589190612f50565b905083156127e9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637dc0d1d06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156120be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120e29190612f50565b602088810151604090810151808201519281015160609091015191517f6e4a22ed00000000000000000000000000000000000000000000000000000000815260048101939093526001600160a01b03908116602484015260448301919091529190911690636e4a22ed906064016020604051808303816000875af115801561216e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121929190612f6d565b8760400181815250506000816001600160a01b031663282d3fdf836001600160a01b031663e9cbd8226040518163ffffffff1660e01b8152600401602060405180830381865afa1580156121ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061220e9190612f50565b6040808c015190517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015612276573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061229a9190612f6d565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637dc0d1d06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156122fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123209190612f50565b6001600160a01b031663d86d30a48a604001516040518263ffffffff1660e01b815260040161235191815260200190565b602060405180830381865afa15801561236e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123929190612f6d565b90506305f5e1006123a68262e4e1c06139bb565b6123b091906139d2565b90506000836001600160a01b031663282d3fdf856001600160a01b0316631a465fe16040518163ffffffff1660e01b8152600401602060405180830381865afa158015612401573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124259190612f50565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b039091166004820152602481018590526044016020604051808303816000875af115801561248a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124ae9190612f6d565b905060405180604001604052808b6000015181526020018c8a815181106124d7576124d7612f86565b60200260200101516020015181525060076000858152602001908152602001600020600082015181600001556020820151816001015590505060405180604001604052808b6000015181526020018c8a8151811061253757612537612f86565b60209081029190910181015181015190915260008381526007825260409081902083518155928201516001909301929092558b8101518201518083015191015191517fa6d7f27d00000000000000000000000000000000000000000000000000000000815260048101919091526001600160a01b039182166024820152604481018890529085169063a6d7f27d90606401600060405180830381600087803b1580156125e257600080fd5b505af11580156125f6573d6000803e3d6000fd5b50506040517f0ee2bb3100000000000000000000000000000000000000000000000000000000815260048101889052600092508291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690630ee2bb31906024016040805180830381865afa15801561267c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126a09190613984565b60208e8101516040908101518082015192015190517f03c1e4b2000000000000000000000000000000000000000000000000000000008152600481018a905260248101929092526001600160a01b03908116604483015260648201849052929450909250908716906303c1e4b290608401600060405180830381600087803b15801561272b57600080fd5b505af115801561273f573d6000803e3d6000fd5b5050505060208c8101516040908101518082015192015190517f03c1e4b20000000000000000000000000000000000000000000000000000000081526004810186905260248101929092526001600160a01b039081166044830152606482018390528716906303c1e4b290608401600060405180830381600087803b1580156127c757600080fd5b505af11580156127db573d6000803e3d6000fd5b50505050505050505061287f565b6020878101516040908101518082015192015190517fa6d7f27d00000000000000000000000000000000000000000000000000000000815260048101929092526001600160a01b0390811660248301526044820185905282169063a6d7f27d90606401600060405180830381600087803b15801561286657600080fd5b505af115801561287a573d6000803e3d6000fd5b505050505b50505050808061288e90613001565b915050611b2a565b6000826128a48686856128cf565b1495945050505050565b6000826128bb858461291b565b14949350505050565b818114155b92915050565b600081815b84811015612912576128fe828787848181106128f2576128f2612f86565b90506020020135612968565b91508061290a81613001565b9150506128d4565b50949350505050565b600081815b84518110156129605761294c8286838151811061293f5761293f612f86565b6020026020010151612968565b91508061295881613001565b915050612920565b509392505050565b6000818310612984576000828152602084905260409020612993565b60008381526020839052604090205b9392505050565b6000602082840312156129ac57600080fd5b5035919050565b60008083601f8401126129c557600080fd5b50813567ffffffffffffffff8111156129dd57600080fd5b6020830191508360208260051b85010111156129f857600080fd5b9250929050565b600080600060408486031215612a1457600080fd5b83359250602084013567ffffffffffffffff811115612a3257600080fd5b612a3e868287016129b3565b9497909650939450505050565b60008060408385031215612a5e57600080fd5b50508035926020909101359150565b60008060008060608587031215612a8357600080fd5b84359350602085013567ffffffffffffffff80821115612aa257600080fd5b9086019060808289031215612ab657600080fd5b90935060408601359080821115612acc57600080fd5b50612ad9878288016129b3565b95989497509550505050565b60008060208385031215612af857600080fd5b823567ffffffffffffffff811115612b0f57600080fd5b612b1b858286016129b3565b90969095509350505050565b8015158114612b3557600080fd5b50565b600060208284031215612b4a57600080fd5b815161299381612b27565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715612ba757612ba7612b55565b60405290565b6040516060810167ffffffffffffffff81118282101715612ba757612ba7612b55565b60405160c0810167ffffffffffffffff81118282101715612ba757612ba7612b55565b604051610120810167ffffffffffffffff81118282101715612ba757612ba7612b55565b604051610200810167ffffffffffffffff81118282101715612ba757612ba7612b55565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612c8257612c82612b55565b604052919050565b600067ffffffffffffffff821115612ca457612ca4612b55565b5060051b60200190565b803560ff811681146105c257600080fd5b6001600160a01b0381168114612b3557600080fd5b80356105c281612cbf565b600060808284031215612cf157600080fd5b612cf9612b84565b9050813567ffffffffffffffff80821115612d1357600080fd5b9083019060808286031215612d2757600080fd5b612d2f612b84565b612d3883612cae565b8152602080840135818301526040840135612d5281612cbf565b6040830152606084013583811115612d6957600080fd5b80850194505086601f850112612d7e57600080fd5b833583811115612d9057612d90612b55565b612dc0827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601612c3b565b93508084528782828701011115612dd657600080fd5b8082860183860137600082828601015250826060830152818552612dfb818701612cae565b8186015250505050604082013560408201526060820135606082015292915050565b6000612e30612e2b84612c8a565b612c3b565b83815260208082019190600586811b860136811115612e4e57600080fd5b865b81811015612f4357803567ffffffffffffffff80821115612e715760008081fd5b818a01915060608236031215612e875760008081fd5b612e8f612bad565b823582811115612e9f5760008081fd5b612eab36828601612cdf565b825250868301358782015260408084013583811115612eca5760008081fd5b939093019236601f850112612ee157600092508283fd5b83359250612ef1612e2b84612c8a565b83815292871b84018801928881019036851115612f0e5760008081fd5b948901945b84861015612f2c57853582529489019490890190612f13565b918301919091525088525050948301948301612e50565b5092979650505050505050565b600060208284031215612f6257600080fd5b815161299381612cbf565b600060208284031215612f7f57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215612fc757600080fd5b813561299381612cbf565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361303257613032612fd2565b5060010190565b6000815180845260005b8181101561305f57602081850181015186830182015201613043565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600060808201868352602060808185015281875180845260a086019150828901935060005b8181101561310057845180516001600160a01b03908116855285820151168585015260409081015190840152938301936060909201916001016130c2565b505084810360408601526131148188613039565b935050505061312e60608301846001600160a01b03169052565b95945050505050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8183360301811261316b57600080fd5b9190910192915050565b60006020828403121561318757600080fd5b61299382612cae565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126131c557600080fd5b83018035915067ffffffffffffffff8211156131e057600080fd5b6020019150368190038213156129f857600080fd5b60006080828403121561320757600080fd5b61320f612b84565b9050813561321c81612cbf565b8152602082013561322c81612cbf565b80602083015250604082013560408201526060820135606082015292915050565b60008183036101e081121561326157600080fd5b613269612b84565b60c082121561327757600080fd5b61327f612bd0565b9150833561328c81612cbf565b8252602084013561329c81612cbf565b602083015260408401356132af81612cbf565b80604084015250606084013560608301526080840135608083015260a084013560a083015281815260c084013560208201526132ee8560e086016131f5565b60408201526133018561016086016131f5565b6060820152949350505050565b60006128c93683612cdf565b808201808211156128c9576128c9612fd2565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc183360301811261316b57600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261339657600080fd5b83018035915067ffffffffffffffff8211156133b157600080fd5b6020019150600581901b36038213156129f857600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60208152600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8184360301811261344a57600080fd5b60806020840152830160ff61345e82612cae565b1660a0840152602081013560c0840152604081013561347c81612cbf565b6001600160a01b031660e08401526060810135368290037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe10181126134c057600080fd5b0160208101903567ffffffffffffffff8111156134dc57600080fd5b8036038213156134eb57600080fd5b6080610100850152613502610120850182846133c9565b91505061351160208501612cae565b60ff811660408501525060408401356060840152606084013560808401528091505092915050565b60006080828403121561354b57600080fd5b613553612b84565b9050813561356081612cbf565b815260208281013590820152604082013561357a81612cbf565b806040830152506060820135606082015292915050565b80356105c281612b27565b60008183036101408112156135b057600080fd5b6135b8612b84565b915060e08112156135c857600080fd5b506135d1612b84565b6135db8484613539565b815260808301356135eb81612b27565b602082015260a0830135604082015260c08301356060820152815261361260e08301612cae565b60208201526101008201356040820152610120820135606082015292915050565b60006103c0828403121561364657600080fd5b61364e612bf3565b905061365982612cd4565b8152613668836020840161359c565b602082015261367b83610160840161359c565b604082015261368e836102a08401613539565b6060820152610320820135608082015261034082013560a08201526136b66103608301613591565b60c08201526136c86103808301612cd4565b60e08201526136da6103a08301612cd4565b61010082015292915050565b60006107e082840312156136f957600080fd5b613701612c17565b823581526137128460208501613633565b60208201526103e083013560408201526137308461040085016131f5565b6060820152610480830135608082015261374e846104a085016131f5565b60a082015261052083013560c082015261376c8461054085016131f5565b60e08201526105c083013561010082015261378b846105e085016131f5565b6101208201526106608301356101408201526106808301356101608201526106a08301356101808201526106c08301356101a08201526137cf846106e085016131f5565b6101c08201526137e38461076085016131f5565b6101e08201529392505050565b60208152600082516080602084015260ff81511660a0840152602081015160c08401526001600160a01b0360408201511660e0840152606081015190506080610100840152613843610120840182613039565b90506020840151613859604085018260ff169052565b5060408401516060840152606084015160808401528091505092915050565b60006080828403121561388a57600080fd5b613892612b84565b9050815161389f81612cbf565b815260208201516138af81612cbf565b80602083015250604082015160408201526060820151606082015292915050565b60008183036101e08112156138e457600080fd5b6138ec612b84565b60c08212156138fa57600080fd5b613902612bd0565b9150835161390f81612cbf565b8252602084015161391f81612cbf565b6020830152604084015161393281612cbf565b80604084015250606084015160608301526080840151608083015260a084015160a083015281815260c084015160208201526139718560e08601613878565b6040820152613301856101608601613878565b6000806040838503121561399757600080fd5b505080516020909101519092909150565b818103818111156128c9576128c9612fd2565b80820281158282048414176128c9576128c9612fd2565b600082613a08577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056";

type RollupConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RollupConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Rollup__factory extends ContractFactory {
  constructor(...args: RollupConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _participatingInterface: string,
    _manager: string,
    overrides?: Overrides & { from?: string }
  ): Promise<Rollup> {
    return super.deploy(
      _participatingInterface,
      _manager,
      overrides || {}
    ) as Promise<Rollup>;
  }
  override getDeployTransaction(
    _participatingInterface: string,
    _manager: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _participatingInterface,
      _manager,
      overrides || {}
    );
  }
  override attach(address: string): Rollup {
    return super.attach(address) as Rollup;
  }
  override connect(signer: Signer): Rollup__factory {
    return super.connect(signer) as Rollup__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RollupInterface {
    return new utils.Interface(_abi) as RollupInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Rollup {
    return new Contract(address, _abi, signerOrProvider) as Rollup;
  }
}
