/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Rollup, RollupInterface } from "../Rollup";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_participatingInterface",
        type: "address",
      },
      {
        internalType: "address",
        name: "_manager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "expected",
        type: "address",
      },
    ],
    name: "CALLER_NOT_PORTAL",
    type: "error",
  },
  {
    inputs: [],
    name: "CALLER_NOT_VALIDATOR",
    type: "error",
  },
  {
    inputs: [],
    name: "EMPTY_STATE_ROOT",
    type: "error",
  },
  {
    inputs: [],
    name: "EPOCH_NOT_CONFIRMED",
    type: "error",
  },
  {
    inputs: [],
    name: "INPUTS_HASH_MISMATCH_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INPUTS_LENGTH_MISMATCH_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INPUT_PARAMS_MISMATCH_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_PROOF_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_REQUEST_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_SEQUENCE_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_STATE_UPDATE_SETTLEMENT",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "Id",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cleared",
        type: "uint256",
      },
    ],
    name: "ObligationsWritten",
    type: "event",
  },
  {
    inputs: [],
    name: "CONFIRMATION_BLOCKS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "epoch",
            type: "uint256",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint8",
                        name: "typeIdentifier",
                        type: "uint8",
                      },
                      {
                        internalType: "Id",
                        name: "sequenceId",
                        type: "uint256",
                      },
                      {
                        internalType: "address",
                        name: "participatingInterface",
                        type: "address",
                      },
                      {
                        internalType: "bytes",
                        name: "structData",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct StateUpdateLibrary.StateUpdate",
                    name: "stateUpdate",
                    type: "tuple",
                  },
                  {
                    internalType: "uint8",
                    name: "v",
                    type: "uint8",
                  },
                  {
                    internalType: "bytes32",
                    name: "r",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "s",
                    type: "bytes32",
                  },
                ],
                internalType: "struct StateUpdateLibrary.SignedStateUpdate",
                name: "tradeUpdate",
                type: "tuple",
              },
              {
                internalType: "bytes32[]",
                name: "proof",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Rollup.TradeProof[]",
            name: "tradeProof",
            type: "tuple[]",
          },
        ],
        internalType: "struct Rollup.TradingFeeClaim[]",
        name: "_claims",
        type: "tuple[]",
      },
    ],
    name: "claimTradingFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "confirmStateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    name: "confirmedStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epoch",
    outputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "fraudulent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "getConfirmedStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "getProposedStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastConfirmedEpoch",
    outputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastSettlementIdProcessed",
    outputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "markFraudulent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nextRequestId",
    outputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint8",
                name: "typeIdentifier",
                type: "uint8",
              },
              {
                internalType: "Id",
                name: "sequenceId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "participatingInterface",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "structData",
                type: "bytes",
              },
            ],
            internalType: "struct StateUpdateLibrary.StateUpdate",
            name: "stateUpdate",
            type: "tuple",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct StateUpdateLibrary.SignedStateUpdate",
        name: "_signedUpdate",
        type: "tuple",
      },
      {
        internalType: "Id",
        name: "_stateRootId",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "processSettlement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "processedSettlements",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "proposalBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "proposalLockId",
    outputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_stateRoot",
        type: "bytes32",
      },
    ],
    name: "proposeStateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposedStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_assets",
        type: "address[]",
      },
    ],
    name: "relayTradingFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "requestSettlement",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_stateRoot",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint8",
                name: "typeIdentifier",
                type: "uint8",
              },
              {
                internalType: "Id",
                name: "sequenceId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "participatingInterface",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "structData",
                type: "bytes",
              },
            ],
            internalType: "struct StateUpdateLibrary.StateUpdate",
            name: "stateUpdate",
            type: "tuple",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct StateUpdateLibrary.SignedStateUpdate",
        name: "_signedUpdate",
        type: "tuple",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "submitSettlement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405260016000556000600155600160085560026009553480156200002557600080fd5b506040516200371b3803806200371b83398101604081905262000048916200007d565b6001600160a01b0391821660a05216608052620000b5565b80516001600160a01b03811681146200007857600080fd5b919050565b600080604083850312156200009157600080fd5b6200009c8362000060565b9150620000ac6020840162000060565b90509250929050565b60805160a0516135de6200013d600039600081816117240152611bc50152600081816103740152818161040f015281816105840152818161069b01528181610a4401528181610c8801528181610d2201528181610ea401528181610ff2015281816113e1015281816116310152818161247c015281816126bd015261281701526135de6000f3fe608060405234801561001057600080fd5b50600436106101825760003560e01c8063900cf0cf116100d8578063c98bdc031161008c578063f1728ad211610066578063f1728ad214610327578063f273886114610355578063fdb44a171461035d57600080fd5b8063c98bdc03146102e1578063dac6c59314610301578063df686c851461031457600080fd5b8063a9275f0a116100bd578063a9275f0a146102bd578063b59c23c1146102c6578063b97dd9e2146102d957600080fd5b8063900cf0cf146102a15780639cb2c811146102aa57600080fd5b8063538bf9261161013a578063706efcd011610114578063706efcd01461022e57806379e1ccee14610243578063887412b71461028157600080fd5b8063538bf926146101f25780636a84a985146102125780636bb38f8d1461021b57600080fd5b806348a8c9211161016b57806348a8c921146101b65780634aaac399146101d65780634cc4f7c0146101df57600080fd5b80633003f147146101875780634698bb22146101ad575b600080fd5b61019a610195366004612a0c565b610370565b6040519081526020015b60405180910390f35b61019a60085481565b61019a6101c4366004612a45565b60066020526000908152604090205481565b61019a61c35081565b61019a6101ed366004612a45565b6104ec565b61019a610200366004612a45565b60046020526000908152604090205481565b61019a60095481565b61019a610229366004612a45565b61053a565b61024161023c366004612a45565b610556565b005b610271610251366004612a5e565b600560209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016101a4565b61019a61028f366004612a45565b60036020526000908152604090205481565b61019a60005481565b6102416102b8366004612ae4565b6108ae565b61019a60015481565b6102416102d4366004612a45565b61162f565b60005461019a565b61019a6102ef366004612a45565b60026020526000908152604090205481565b61024161030f366004612b54565b611719565b610241610322366004612ba0565b61196c565b610271610335366004612a5e565b600760209081526000928352604080842090915290825290205460ff1681565b6102416119a5565b61024161036b366004612bf7565b611bba565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636425666b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f49190612c39565b6001600160a01b0316336001600160a01b0316146104d957337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636425666b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561046b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048f9190612c39565b6040517ffeb970c10000000000000000000000000000000000000000000000000000000081526001600160a01b039283166004820152911660248201526044015b60405180910390fd5b5060098054600181019091555b92915050565b60008181526006602052604081205490819003610535576040517fa597b61c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b6000818152600260205260408120549081900361053557600080fd5b6040517ffacd743b0000000000000000000000000000000000000000000000000000000081523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063facd743b90602401602060405180830381865afa1580156105d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f79190612c64565b61062d576040517fd6917b3700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600003610697576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f50726f706f73656420656d70747920737461746520726f6f740000000000000060448201526064016104d0565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d8dfeb456040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071b9190612c39565b90506000816001600160a01b031663282d3fdf836001600160a01b0316631a465fe16040518163ffffffff1660e01b8152600401602060405180830381865afa15801561076c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107909190612c39565b846001600160a01b031663ab900a8d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f29190612c81565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610855573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108799190612c81565b600080548152600260209081526040808320879055958252600381528582204390556004905293842055505080546001019055565b600083815260066020526040812054808203610911575050600083815260026020526040812054600191819003610911576040517f5aba372c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006109458585848a60405160200161092a9190612cf4565b60405160208183030381529060405280519060200120612303565b90508061097e576040517f7657200300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600261098a8880612e1b565b610998906020810190612e59565b60ff16146109d2576040517f5424b3dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006109de8880612e1b565b6109ec906060810190612e74565b8101906109f99190613090565b805160a0810151600854929350909160010114610a42576040517ffc4db1bf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636425666b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610aa0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac49190612c39565b6001600160a01b0316637b6d899d826060015183604051602001610b369190600060c0820190506001600160a01b0380845116835280602085015116602084015280604085015116604084015250606083015160608301526080830151608083015260a083015160a083015292915050565b604051602081830303815290604052805190602001206040518363ffffffff1660e01b8152600401610b72929190918252602082015260400190565b602060405180830381865afa158015610b8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb39190612c64565b1580610bc3575060808101514614155b15610bfa576040517ffa47e1e900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80602001516001600160a01b03168260400151602001516001600160a01b0316141580610c3a575080516040830151516001600160a01b03908116911614155b80610c4c575060408083015101514614155b15610c83576040517fad08c18f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c48ce05b8560400151606001516040518263ffffffff1660e01b8152600401610cdc91815260200190565b6040805180830381865afa158015610cf8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1c9190613151565b915091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636425666b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da29190612c39565b6001600160a01b031663f1373ffa8560400151602001518660400151600001518486610dce91906131a4565b886040015160600151610de191906131b7565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b158015610e4857600080fd5b505af1158015610e5c573d6000803e3d6000fd5b50505050610e6c60085460010190565b6008819055507f2fbe32bf5c43587f241785776e03af9725712c4d9349d5d487e0b080554759cf8360a00151846000015185602001517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636425666b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f249190612c39565b875160208901516040517fb2838a730000000000000000000000000000000000000000000000000000000081526001600160a01b039283166004820152908216602482015291169063b2838a7390604401602060405180830381865afa158015610f92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb69190612c81565b604051610fe694939291909384526001600160a01b03928316602085015291166040830152606082015260800190565b60405180910390a160007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d8dfeb456040518163ffffffff1660e01b8152600401602060405180830381865afa15801561104e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110729190612c39565b9050871561158d576000816001600160a01b031663282d3fdf836001600160a01b031663e9cbd8226040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ed9190612c39565b64e8d4a5100089604001516060015161110691906131ca565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611169573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118d9190612c81565b90506000826001600160a01b031663282d3fdf846001600160a01b0316631a465fe16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112029190612c39565b856001600160a01b031663d86d30a464e8d4a510008c604001516060015161122a91906131ca565b6040518263ffffffff1660e01b815260040161124891815260200190565b602060405180830381865afa158015611265573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112899190612c81565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156112ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113109190612c81565b6040888101518082015160209091015191517fa6d7f27d00000000000000000000000000000000000000000000000000000000815260048101919091526001600160a01b0391821660248201526044810188905291925084169063a6d7f27d90606401600060405180830381600087803b15801561138d57600080fd5b505af11580156113a1573d6000803e3d6000fd5b50506040517f0ee2bb3100000000000000000000000000000000000000000000000000000000815260048101879052600092508291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690630ee2bb31906024016040805180830381865afa158015611427573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144b9190613151565b60408b8101518082015160209091015191517f03c1e4b20000000000000000000000000000000000000000000000000000000081526004810189905260248101919091526001600160a01b039182166044820152606481018490529294509092508616906303c1e4b290608401600060405180830381600087803b1580156114d257600080fd5b505af11580156114e6573d6000803e3d6000fd5b505050506040898101518082015160209091015191517f03c1e4b20000000000000000000000000000000000000000000000000000000081526004810186905260248101919091526001600160a01b03918216604482015260648101839052908616906303c1e4b290608401600060405180830381600087803b15801561156c57600080fd5b505af1158015611580573d6000803e3d6000fd5b5050505050505050611621565b6040858101518082015160209091015191517fa6d7f27d00000000000000000000000000000000000000000000000000000000815260048101919091526001600160a01b039182166024820152604481018590529082169063a6d7f27d90606401600060405180830381600087803b15801561160857600080fd5b505af115801561161c573d6000803e3d6000fd5b505050505b505050505050505050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b2bbcfc06040518163ffffffff1660e01b8152600401602060405180830381865afa15801561168d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116b19190612c39565b6001600160a01b0316336001600160a01b0316146116ce57600080fd5b600090815260056020908152604080832060028352818420548452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146117d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f4f6e6c792070617274696369706174696e6720696e746572666163652063616e60448201527f20636c61696d2074726164696e6720666565730000000000000000000000000060648201526084016104d0565b60008167ffffffffffffffff8111156117ec576117ec612ed9565b604051908082528060200260200182016040528015611815578160200160208202803683370190505b50905060005b82811015611965576000858152600b602052604081209085858481811061184457611844613205565b90506020020160208101906118599190613234565b6001600160a01b03166001600160a01b031681526020019081526020016000205460000361188657600080fd5b6000858152600b60205260408120908585848181106118a7576118a7613205565b90506020020160208101906118bc9190613234565b6001600160a01b03166001600160a01b03168152602001908152602001600020548282815181106118ef576118ef613205565b6020026020010181815250506000600b6000878152602001908152602001600020600086868581811061192457611924613205565b90506020020160208101906119399190613234565b6001600160a01b031681526020810191909152604001600020558061195d81613251565b91505061181b565b5050505050565b600054600101600055600180540160018181556000918252600660205260409091208590555461199f908490848461231b565b50505050565b6001805401600181905560009081526002602052604081205490819003611a4e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f547279696e6720746f20636f6e6669726d20616e20656d70747920737461746560448201527f20726f6f7400000000000000000000000000000000000000000000000000000060648201526084016104d0565b600081815260036020526040902054611a6961c350826131a4565b431015611af8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f50726f706f73656420737461746520726f6f7420686173206e6f74207061737360448201527f656420667261756420706572696f64000000000000000000000000000000000060648201526084016104d0565b600154600090815260056020908152604080832085845290915290205460ff1615611ba5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f547279696e6720746f20636f6e6669726d2061206672617564756c656e74207360448201527f7461746520726f6f74000000000000000000000000000000000000000000000060648201526084016104d0565b50600154600090815260066020526040902055565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611c72576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f4f6e6c792070617274696369706174696e6720696e746572666163652063616e60448201527f20636c61696d2074726164696e6720666565730000000000000000000000000060648201526084016104d0565b60005b818110156122fe57600060066000858585818110611c9557611c95613205565b9050602002810190611ca79190613289565b60000135815260200190815260200160002054905080600003611d72576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604560248201527f547279696e6720746f20636c61696d2074726164696e67206665657320666f7260448201527f20616e2065706f636820746861742069732079657420746f20626520636f6e6660648201527f69726d6564000000000000000000000000000000000000000000000000000000608482015260a4016104d0565b60005b848484818110611d8757611d87613205565b9050602002810190611d999190613289565b611da79060208101906132bd565b90508110156122e9576000611e86868686818110611dc757611dc7613205565b9050602002810190611dd99190613289565b611de79060208101906132bd565b84818110611df757611df7613205565b9050602002810190611e099190613289565b611e179060208101906132bd565b85898989818110611e2a57611e2a613205565b9050602002810190611e3c9190613289565b611e4a9060208101906132bd565b87818110611e5a57611e5a613205565b9050602002810190611e6c9190613289565b611e769080612e1b565b60405160200161092a9190612cf4565b905080611eef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f496e76616c6964206d65726b6c652070726f6f6620666f72207472616465000060448201526064016104d0565b6001868686818110611f0357611f03613205565b9050602002810190611f159190613289565b611f239060208101906132bd565b84818110611f3357611f33613205565b9050602002810190611f459190613289565b611f4f9080612e1b565b611f599080612e1b565b611f67906020810190612e59565b60ff1614611fd1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f537461746520757064617465206973206e6f742061207472616465000000000060448201526064016104d0565b6000868686818110611fe557611fe5613205565b9050602002810190611ff79190613289565b6120059060208101906132bd565b8481811061201557612015613205565b90506020028101906120279190613289565b6120319080612e1b565b61203b9080612e1b565b612049906060810190612e74565b81019061205691906134b4565b9050600a600088888881811061206e5761206e613205565b90506020028101906120809190613289565b61208e9060208101906132bd565b8681811061209e5761209e613205565b90506020028101906120b09190613289565b6120ba9080612e1b565b6120c49080612e1b565b60209081013582528101919091526040016000205460ff1615612169576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f4665657320666f722074686973207472616465206861766520616c726561647960448201527f206265656e20636c61696d65640000000000000000000000000000000000000060648201526084016104d0565b6001600a600089898981811061218157612181613205565b90506020028101906121939190613289565b6121a19060208101906132bd565b878181106121b1576121b1613205565b90506020028101906121c39190613289565b6121cd9080612e1b565b6121d79080612e1b565b602090810135825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790556101c08101516060015115612276576101c08101805160608101516040918201516000908152600b602090815283822094518101516001600160a01b03168252939093529082208054919290916122709084906131a4565b90915550505b6101e081015160600151156122d4576101e08101805160608101516040918201516000908152600b602090815283822094518101516001600160a01b03168252939093529082208054919290916122ce9084906131a4565b90915550505b505080806122e190613251565b915050611d75565b505080806122f690613251565b915050611c75565b505050565b60008261231186868561296b565b1495945050505050565b60008381526006602052604081205490819003612364576040517f5aba372c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061237d8484848960405160200161092a9190612cf4565b9050806123b6576040517f7657200300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026123c28780612e1b565b6123d0906020810190612e59565b60ff161461240a576040517f5424b3dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006124168780612e1b565b612424906060810190612e74565b8101906124319190613090565b805160a081015160085492935090916001011461247a576040517ffc4db1bf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636425666b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156124d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124fc9190612c39565b6001600160a01b0316637b6d899d82606001518360405160200161256e9190600060c0820190506001600160a01b0380845116835280602085015116602084015280604085015116604084015250606083015160608301526080830151608083015260a083015160a083015292915050565b604051602081830303815290604052805190602001206040518363ffffffff1660e01b81526004016125aa929190918252602082015260400190565b602060405180830381865afa1580156125c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125eb9190612c64565b15806125fb575060808101514614155b15612632576040517ffa47e1e900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80602001516001600160a01b03168260400151602001516001600160a01b0316141580612672575080516040830151516001600160a01b03908116911614155b80612684575060408083015101514614155b156126bb576040517fad08c18f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636425666b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612719573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061273d9190612c39565b6040838101516020810151815160609092015192517ff1373ffa0000000000000000000000000000000000000000000000000000000081526001600160a01b0391821660048201529181166024830152604482019290925291169063f1373ffa90606401600060405180830381600087803b1580156127bb57600080fd5b505af11580156127cf573d6000803e3d6000fd5b505050506127df60085460010190565b6008819055507f2fbe32bf5c43587f241785776e03af9725712c4d9349d5d487e0b080554759cf8160a00151826000015183602001517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636425666b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612873573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128979190612c39565b855160208701516040517fb2838a730000000000000000000000000000000000000000000000000000000081526001600160a01b039283166004820152908216602482015291169063b2838a7390604401602060405180830381865afa158015612905573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129299190612c81565b60405161295994939291909384526001600160a01b03928316602085015291166040830152606082015260800190565b60405180910390a15050505050505050565b600081815b848110156129ae5761299a8287878481811061298e5761298e613205565b905060200201356129b7565b9150806129a681613251565b915050612970565b50949350505050565b60008183106129d35760008281526020849052604090206129e2565b60008381526020839052604090205b9392505050565b6001600160a01b03811681146129fe57600080fd5b50565b8035610535816129e9565b60008060408385031215612a1f57600080fd5b8235612a2a816129e9565b91506020830135612a3a816129e9565b809150509250929050565b600060208284031215612a5757600080fd5b5035919050565b60008060408385031215612a7157600080fd5b50508035926020909101359150565b600060808284031215612a9257600080fd5b50919050565b60008083601f840112612aaa57600080fd5b50813567ffffffffffffffff811115612ac257600080fd5b6020830191508360208260051b8501011115612add57600080fd5b9250929050565b60008060008060608587031215612afa57600080fd5b843567ffffffffffffffff80821115612b1257600080fd5b612b1e88838901612a80565b9550602087013594506040870135915080821115612b3b57600080fd5b50612b4887828801612a98565b95989497509550505050565b600080600060408486031215612b6957600080fd5b83359250602084013567ffffffffffffffff811115612b8757600080fd5b612b9386828701612a98565b9497909650939450505050565b60008060008060608587031215612bb657600080fd5b84359350602085013567ffffffffffffffff80821115612bd557600080fd5b612be188838901612a80565b94506040870135915080821115612b3b57600080fd5b60008060208385031215612c0a57600080fd5b823567ffffffffffffffff811115612c2157600080fd5b612c2d85828601612a98565b90969095509350505050565b600060208284031215612c4b57600080fd5b81516129e2816129e9565b80151581146129fe57600080fd5b600060208284031215612c7657600080fd5b81516129e281612c56565b600060208284031215612c9357600080fd5b5051919050565b803560ff8116811461053557600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60208152600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81843603018112612d2c57600080fd5b60806020840152830160ff612d4082612c9a565b1660a0840152602081013560c08401526040810135612d5e816129e9565b6001600160a01b031660e08401526060810135368290037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1018112612da257600080fd5b0160208101903567ffffffffffffffff811115612dbe57600080fd5b803603821315612dcd57600080fd5b6080610100850152612de461012085018284612cab565b915050612df360208501612c9a565b60ff811660408501525060408401356060840152606084013560808401528091505092915050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81833603018112612e4f57600080fd5b9190910192915050565b600060208284031215612e6b57600080fd5b6129e282612c9a565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612ea957600080fd5b83018035915067ffffffffffffffff821115612ec457600080fd5b602001915036819003821315612add57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715612f52577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405290565b60405160c0810167ffffffffffffffff81118282101715612f52577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715612f52577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610200810167ffffffffffffffff81118282101715612f52577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006080828403121561304a57600080fd5b613052612f08565b9050813561305f816129e9565b8152602082013561306f816129e9565b80602083015250604082013560408201526060820135606082015292915050565b60008183036101e08112156130a457600080fd5b6130ac612f08565b60c08212156130ba57600080fd5b6130c2612f58565b915083356130cf816129e9565b825260208401356130df816129e9565b602083015260408401356130f2816129e9565b80604084015250606084013560608301526080840135608083015260a084013560a083015281815260c084013560208201526131318560e08601613038565b6040820152613144856101608601613038565b6060820152949350505050565b6000806040838503121561316457600080fd5b505080516020909101519092909150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156104e6576104e6613175565b818103818111156104e6576104e6613175565b600082613200577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561324657600080fd5b81356129e2816129e9565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361328257613282613175565b5060010190565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1833603018112612e4f57600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126132f257600080fd5b83018035915067ffffffffffffffff82111561330d57600080fd5b6020019150600581901b3603821315612add57600080fd5b60006080828403121561333757600080fd5b61333f612f08565b9050813561334c816129e9565b8152602082810135908201526040820135613366816129e9565b806040830152506060820135606082015292915050565b600081830361014081121561339157600080fd5b613399612f08565b915060e08112156133a957600080fd5b506133b2612f08565b6133bc8484613325565b815260808301356133cc81612c56565b602082015260a0830135604082015260c0830135606082015281526133f360e08301612c9a565b60208201526101008201356040820152610120820135606082015292915050565b60006103a0828403121561342757600080fd5b61342f612fa2565b905061343a82612a01565b8152613449836020840161337d565b602082015261345c83610160840161337d565b604082015261346f836102a08401613325565b6060820152610320820135608082015261034082013560a08201526134976103608301612a01565b60c08201526134a96103808301612a01565b60e082015292915050565b600061094082840312156134c757600080fd5b6134cf612fed565b823581526134e08460208501613414565b60208201526103c083013560408201526134fe846103e08501613038565b6060820152610460830135608082015261351c846104808501613038565b60a082015261050083013560c082015261353a846105208501613038565b60e08201526105a0830135610100820152613559846105c08501613038565b61012082015261356d846106408501613038565b610140820152613581846106c08501613038565b610160820152613595846107408501613038565b6101808201526135a9846107c08501613038565b6101a08201526135bd846108408501613038565b6101c08201526135d1846108c08501613038565b6101e0820152939250505056";

type RollupConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RollupConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Rollup__factory extends ContractFactory {
  constructor(...args: RollupConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _participatingInterface: string,
    _manager: string,
    overrides?: Overrides & { from?: string }
  ): Promise<Rollup> {
    return super.deploy(
      _participatingInterface,
      _manager,
      overrides || {}
    ) as Promise<Rollup>;
  }
  override getDeployTransaction(
    _participatingInterface: string,
    _manager: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _participatingInterface,
      _manager,
      overrides || {}
    );
  }
  override attach(address: string): Rollup {
    return super.attach(address) as Rollup;
  }
  override connect(signer: Signer): Rollup__factory {
    return super.connect(signer) as Rollup__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RollupInterface {
    return new utils.Interface(_abi) as RollupInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Rollup {
    return new Contract(address, _abi, signerOrProvider) as Rollup;
  }
}
