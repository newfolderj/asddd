/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Rollup, RollupInterface } from "../Rollup";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_participatingInterface",
        type: "address",
      },
      {
        internalType: "address",
        name: "_manager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "expected",
        type: "address",
      },
    ],
    name: "CALLER_NOT_PORTAL",
    type: "error",
  },
  {
    inputs: [],
    name: "CALLER_NOT_VALIDATOR",
    type: "error",
  },
  {
    inputs: [],
    name: "EMPTY_STATE_ROOT",
    type: "error",
  },
  {
    inputs: [],
    name: "EPOCH_NOT_CONFIRMED",
    type: "error",
  },
  {
    inputs: [],
    name: "INPUTS_HASH_MISMATCH_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INPUTS_LENGTH_MISMATCH_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INPUT_PARAMS_MISMATCH_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_PROOF_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_REQUEST_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_SEQUENCE_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_STATE_UPDATE_SETTLEMENT",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "Id",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cleared",
        type: "uint256",
      },
    ],
    name: "ObligationsWritten",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "epoch",
            type: "uint256",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint8",
                        name: "typeIdentifier",
                        type: "uint8",
                      },
                      {
                        internalType: "Id",
                        name: "sequenceId",
                        type: "uint256",
                      },
                      {
                        internalType: "address",
                        name: "participatingInterface",
                        type: "address",
                      },
                      {
                        internalType: "bytes",
                        name: "structData",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct StateUpdateLibrary.StateUpdate",
                    name: "stateUpdate",
                    type: "tuple",
                  },
                  {
                    internalType: "uint8",
                    name: "v",
                    type: "uint8",
                  },
                  {
                    internalType: "bytes32",
                    name: "r",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "s",
                    type: "bytes32",
                  },
                ],
                internalType: "struct StateUpdateLibrary.SignedStateUpdate",
                name: "tradeUpdate",
                type: "tuple",
              },
              {
                internalType: "bytes32[]",
                name: "proof",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Rollup.TradeProof[]",
            name: "tradeProof",
            type: "tuple[]",
          },
        ],
        internalType: "struct Rollup.TradingFeeClaim[]",
        name: "_claims",
        type: "tuple[]",
      },
    ],
    name: "claimTradingFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "confirmStateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    name: "confirmedStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epoch",
    outputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "fraudulent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "getConfirmedStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "getProposedStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lockId",
        type: "uint256",
      },
    ],
    name: "isConfirmedLockId",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lockId",
        type: "uint256",
      },
    ],
    name: "isFraudulentLockId",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastConfirmedEpoch",
    outputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "markFraudulent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Id",
        name: "_chainId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint8",
                    name: "typeIdentifier",
                    type: "uint8",
                  },
                  {
                    internalType: "Id",
                    name: "sequenceId",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "participatingInterface",
                    type: "address",
                  },
                  {
                    internalType: "bytes",
                    name: "structData",
                    type: "bytes",
                  },
                ],
                internalType: "struct StateUpdateLibrary.StateUpdate",
                name: "stateUpdate",
                type: "tuple",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
            ],
            internalType: "struct StateUpdateLibrary.SignedStateUpdate",
            name: "signedUpdate",
            type: "tuple",
          },
          {
            internalType: "Id",
            name: "stateRootId",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "proof",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Rollup.SettlementParams[]",
        name: "_params",
        type: "tuple[]",
      },
    ],
    name: "processSettlements",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "processedSettlements",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "proposalBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_stateRoot",
        type: "bytes32",
      },
    ],
    name: "proposeStateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposedStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_assets",
        type: "address[]",
      },
    ],
    name: "relayTradingFees",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_stateRoot",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint8",
                name: "typeIdentifier",
                type: "uint8",
              },
              {
                internalType: "Id",
                name: "sequenceId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "participatingInterface",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "structData",
                type: "bytes",
              },
            ],
            internalType: "struct StateUpdateLibrary.StateUpdate",
            name: "stateUpdate",
            type: "tuple",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct StateUpdateLibrary.SignedStateUpdate",
        name: "_signedUpdate",
        type: "tuple",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "submitSettlement",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0604052600160005560006001553480156200001b57600080fd5b5060405162004490380380620044908339810160408190526200003e9162000073565b6001600160a01b0391821660a05216608052620000ab565b80516001600160a01b03811681146200006e57600080fd5b919050565b600080604083850312156200008757600080fd5b620000928362000056565b9150620000a26020840162000056565b90509250929050565b60805160a0516143646200012c600039600081816116cd015281816118660152611ef00152600081816108d9015281816109c901528181610e9701528181611115015281816112a7015281816113a4015281816115da015281816119e801528181611d3e01528181612a3d01528181612b2d0152612ff701526143646000f3fe6080604052600436106101445760003560e01c8063900cf0cf116100c0578063dac6c59311610074578063f1728ad211610059578063f1728ad2146103d9578063f273886114610414578063fdb44a171461042957600080fd5b8063dac6c593146103b3578063df686c85146103c657600080fd5b8063b59c23c1116100a5578063b59c23c114610351578063b97dd9e214610371578063c98bdc031461038657600080fd5b8063900cf0cf14610325578063a9275f0a1461033b57600080fd5b80636b6e30e411610117578063706efcd0116100fc578063706efcd01461029d57806379e1ccee146102bd578063887412b7146102f857600080fd5b80636b6e30e41461022a5780636bb38f8d1461027d57600080fd5b80630792457c1461014957806310e0917d146101ba57806348a8c921146101cf5780634cc4f7c01461020a575b600080fd5b34801561015557600080fd5b506101a56101643660046133fd565b600090815260076020908152604080832081518083018352815481526001909101548184018190528452600483528184209051845290915290205460ff1690565b60405190151581526020015b60405180910390f35b6101cd6101c8366004613462565b610449565b005b3480156101db57600080fd5b506101fc6101ea3660046133fd565b60056020526000908152604090205481565b6040519081526020016101b1565b34801561021657600080fd5b506101fc6102253660046133fd565b61120f565b34801561023657600080fd5b506101a56102453660046133fd565b600090815260076020908152604080832081518083018352815480825260019092015490840181905284526005909252909120541490565b34801561028957600080fd5b506101fc6102983660046133fd565b61125d565b3480156102a957600080fd5b506101cd6102b83660046133fd565b611279565b3480156102c957600080fd5b506101a56102d83660046134ae565b600460209081526000928352604080842090915290825290205460ff1681565b34801561030457600080fd5b506101fc6103133660046133fd565b60036020526000908152604090205481565b34801561033157600080fd5b506101fc60005481565b34801561034757600080fd5b506101fc60015481565b34801561035d57600080fd5b506101cd61036c3660046133fd565b6115d8565b34801561037d57600080fd5b506000546101fc565b34801561039257600080fd5b506101fc6103a13660046133fd565b60026020526000908152604090205481565b6101cd6103c1366004613462565b6116c2565b6101cd6103d43660046134d0565b611ae1565b3480156103e557600080fd5b506101a56103f43660046134ae565b600660209081526000928352604080842090915290825290205460ff1681565b34801561042057600080fd5b506101cd611c95565b34801561043557600080fd5b506101cd610444366004613548565b611ee5565b610451613353565b60008267ffffffffffffffff81111561046c5761046c61358a565b6040519080825280602002602001820160405280156104d557816020015b60408051606081018252600080825260208083018290529282015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90920191018161048a5790505b50905060005b83811015611112576000600560008787858181106104fb576104fb6135b9565b905060200281019061050d91906135e8565b602090810135825281019190915260400160009081205480865290036105aa5750600160026000878785818110610546576105466135b9565b905060200281019061055891906135e8565b602090810135825281019190915260400160009081205480865290036105aa576040517f5aba372c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061063c8787858181106105c1576105c16135b9565b90506020028101906105d391906135e8565b6105e1906040810190613626565b87518a8a888181106105f5576105f56135b9565b905060200281019061060791906135e8565b610611908061368e565b604051602001610621919061373f565b604051602081830303815290604052805190602001206125fc565b905080610675576040517f7657200300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002878785818110610689576106896135b9565b905060200281019061069b91906135e8565b6106a5908061368e565b6106af908061368e565b6106bd906020810190613866565b60ff16146106f7576040517f5424b3dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b868684818110610709576107096135b9565b905060200281019061071b91906135e8565b610725908061368e565b61072f908061368e565b61073d906060810190613881565b81019061074a9190613a49565b6020860181905251608001516107609089612614565b156107d85760405162461bcd60e51b815260206004820152603160248201527f536574746c656d656e74207265717565737420636861696e496420646f65736e60448201527f2774206d61746368205f636861696e496400000000000000000000000000000060648201526084015b60405180910390fd5b846020015160000151602001516001600160a01b0316856020015160400151602001516001600160a01b031614158061082b57506020850151805151604090910151516001600160a01b03908116911614155b8061084e57506020850151604080820151015190516080015161084e9190612614565b15610885576040517fad08c18f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60208501516040908101516060015190517fc48ce05b00000000000000000000000000000000000000000000000000000000815267ffffffffffffffff909116600482015260009081906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c48ce05b906024016040805180830381865afa15801561091f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109439190613b0a565b604080516060810182526020808c018051840151516001600160a01b0390811684529051840151820151169082015292945090925081016109848385613b73565b8960200151604001516060015161099b9190613b9b565b67ffffffffffffffff168152508686815181106109ba576109ba6135b9565b602002602001018190525060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d8dfeb456040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a499190613bbc565b9050841561105b576000816001600160a01b031663282d3fdf836001600160a01b031663e9cbd8226040518163ffffffff1660e01b8152600401602060405180830381865afa158015610aa0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac49190613bbc565b60208c01516040908101516060015190517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015267ffffffffffffffff1660248201526044016020604051808303816000875af1158015610b3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b639190613bd9565b90506000826001600160a01b031663282d3fdf846001600160a01b0316631a465fe16040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd89190613bbc565b60208d01516040908101516060015190517fd86d30a400000000000000000000000000000000000000000000000000000000815267ffffffffffffffff90911660048201526001600160a01b0387169063d86d30a490602401602060405180830381865afa158015610c4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c729190613bd9565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610cd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf99190613bd9565b905060405180604001604052808b6000015181526020018d8d8b818110610d2257610d226135b9565b9050602002810190610d3491906135e8565b602090810135909152600084815260078252604090819020835181559282015160019093019290925581518083019092528b51825281018d8d8b818110610d7d57610d7d6135b9565b9050602002810190610d8f91906135e8565b60209081013590915260008381526007825260409081902083518155928201516001909301929092558b8101518201518083015191015191517f8f65ae6f00000000000000000000000000000000000000000000000000000000815260048101919091526001600160a01b03918216602482015267ffffffffffffffff8716604482015290841690638f65ae6f90606401600060405180830381600087803b158015610e3a57600080fd5b505af1158015610e4e573d6000803e3d6000fd5b50506040517f0ee2bb3100000000000000000000000000000000000000000000000000000000815267ffffffffffffffff87166004820152600092508291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690630ee2bb31906024016040805180830381865afa158015610edd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f019190613b0a565b60208e8101516040908101518082015192015190517f757c25e50000000000000000000000000000000000000000000000000000000081526004810189905260248101929092526001600160a01b03908116604483015267ffffffffffffffff841660648301529294509092509086169063757c25e590608401600060405180830381600087803b158015610f9557600080fd5b505af1158015610fa9573d6000803e3d6000fd5b5050505060208c8101516040908101518082015192015190517f757c25e50000000000000000000000000000000000000000000000000000000081526004810186905260248101929092526001600160a01b03908116604483015267ffffffffffffffff8316606483015286169063757c25e590608401600060405180830381600087803b15801561103a57600080fd5b505af115801561104e573d6000803e3d6000fd5b50505050505050506110fa565b6020888101516040908101518082015192015190517f8f65ae6f00000000000000000000000000000000000000000000000000000000815260048101929092526001600160a01b03908116602483015267ffffffffffffffff85166044830152821690638f65ae6f90606401600060405180830381600087803b1580156110e157600080fd5b505af11580156110f5573d6000803e3d6000fd5b505050505b5050505050808061110a90613bf2565b9150506104db565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638406c0796040518163ffffffff1660e01b8152600401602060405180830381865afa158015611171573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111959190613bbc565b6001600160a01b031663b29aaf2d34878460405180602001604052806000815250336040518663ffffffff1660e01b81526004016111d69493929190613c8e565b6000604051808303818588803b1580156111ef57600080fd5b505af1158015611203573d6000803e3d6000fd5b50505050505050505050565b60008181526005602052604081205490819003611258576040517fa597b61c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b6000818152600260205260408120549081900361125857600080fd5b6040517ffacd743b0000000000000000000000000000000000000000000000000000000081523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063facd743b90602401602060405180830381865afa1580156112f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131a9190613d40565b611350576040517fd6917b3700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000036113a05760405162461bcd60e51b815260206004820152601960248201527f50726f706f73656420656d70747920737461746520726f6f740000000000000060448201526064016107cf565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d8dfeb456040518163ffffffff1660e01b8152600401602060405180830381865afa158015611400573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114249190613bbc565b90506000816001600160a01b031663282d3fdf836001600160a01b0316631a465fe16040518163ffffffff1660e01b8152600401602060405180830381865afa158015611475573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114999190613bbc565b846001600160a01b031663ab900a8d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114fb9190613bd9565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af115801561155e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115829190613bd9565b600080548152600260209081526040808320879055868352600382528083204390558051808201825296875282548783019081529383526007909152812094518555905160019485015580549093019092555050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b2bbcfc06040518163ffffffff1660e01b8152600401602060405180830381865afa158015611636573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165a9190613bbc565b6001600160a01b0316336001600160a01b03161461167757600080fd5b600090815260046020908152604080832060028352818420548452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146117605760405162461bcd60e51b815260206004820152603360248201527f4f6e6c792070617274696369706174696e6720696e746572666163652063616e60448201527f20636c61696d2074726164696e6720666565730000000000000000000000000060648201526084016107cf565b60008167ffffffffffffffff81111561177b5761177b61358a565b6040519080825280602002602001820160405280156117e457816020015b60408051606081018252600080825260208083018290529282015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816117995790505b50905060005b828110156119e557600085815260096020526040812090858584818110611813576118136135b9565b90506020020160208101906118289190613d5d565b6001600160a01b03168152602081019190915260400160009081205467ffffffffffffffff16900361185957600080fd5b60405180606001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020018585848181106118a5576118a56135b9565b90506020020160208101906118ba9190613d5d565b6001600160a01b0316815260008781526009602090815260408220920191908787868181106118eb576118eb6135b9565b90506020020160208101906119009190613d5d565b6001600160a01b0316815260208101919091526040016000205467ffffffffffffffff169052825183908390811061193a5761193a6135b9565b6020026020010181905250600060096000878152602001908152602001600020600086868581811061196e5761196e6135b9565b90506020020160208101906119839190613d5d565b6001600160a01b03168152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff92909216919091179055806119dd81613bf2565b9150506117ea565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638406c0796040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a689190613bbc565b6001600160a01b031663b29aaf2d34868460405180602001604052806000815250336040518663ffffffff1660e01b8152600401611aa99493929190613c8e565b6000604051808303818588803b158015611ac257600080fd5b505af1158015611ad6573d6000803e3d6000fd5b505050505050505050565b600080546001018082558152600260208190526040909120859055611b06848061368e565b611b14906020810190613866565b60ff1614611b4e576040517f5424b3dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611b5a848061368e565b611b68906060810190613881565b810190611b759190613a49565b60408051600180825281830190925291925060009190816020015b611bf3604080516101608101909152600060e08201818152610100830182905261012083018290526060610140840181905283019081526080830182905260a0830182905260c08301919091528190815260200160008152602001606081525090565b815260200190600190039081611b90579050509050604051806060016040528086611c1d90613d7a565b8152602001600054815260200185858080602002602001604051908101604052809392919081815260200183836020028082843760009201829052509390945250508351849250611c7057611c706135b9565b6020026020010181905250611c8d8260400151604001518261261f565b505050505050565b6001805401600181905560009081526002602052604081205490819003611d245760405162461bcd60e51b815260206004820152602560248201527f547279696e6720746f20636f6e6669726d20616e20656d70747920737461746560448201527f20726f6f7400000000000000000000000000000000000000000000000000000060648201526084016107cf565b6000600360008381526020019081526020016000205490507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d43a33ea6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dbe9190613bd9565b611dc89082613eb6565b431015611e3d5760405162461bcd60e51b815260206004820152602f60248201527f50726f706f73656420737461746520726f6f7420686173206e6f74207061737360448201527f656420667261756420706572696f64000000000000000000000000000000000060648201526084016107cf565b600154600090815260046020908152604080832085845290915290205460ff1615611ed05760405162461bcd60e51b815260206004820152602960248201527f547279696e6720746f20636f6e6669726d2061206672617564756c656e74207360448201527f7461746520726f6f74000000000000000000000000000000000000000000000060648201526084016107cf565b50600154600090815260056020526040902055565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611f835760405162461bcd60e51b815260206004820152603360248201527f4f6e6c792070617274696369706174696e6720696e746572666163652063616e60448201527f20636c61696d2074726164696e6720666565730000000000000000000000000060648201526084016107cf565b60005b818110156125f757600060056000858585818110611fa657611fa66135b9565b9050602002810190611fb89190613ec9565b600001358152602001908152602001600020549050806000036120695760405162461bcd60e51b815260206004820152604560248201527f547279696e6720746f20636c61696d2074726164696e67206665657320666f7260448201527f20616e2065706f636820746861742069732079657420746f20626520636f6e6660648201527f69726d6564000000000000000000000000000000000000000000000000000000608482015260a4016107cf565b60005b84848481811061207e5761207e6135b9565b90506020028101906120909190613ec9565b61209e906020810190613626565b90508110156125e25760006121638686868181106120be576120be6135b9565b90506020028101906120d09190613ec9565b6120de906020810190613626565b848181106120ee576120ee6135b9565b90506020028101906121009190613ec9565b61210e906020810190613626565b85898989818110612121576121216135b9565b90506020028101906121339190613ec9565b612141906020810190613626565b87818110612151576121516135b9565b90506020028101906106079190613ec9565b9050806121b25760405162461bcd60e51b815260206004820152601e60248201527f496e76616c6964206d65726b6c652070726f6f6620666f72207472616465000060448201526064016107cf565b60018686868181106121c6576121c66135b9565b90506020028101906121d89190613ec9565b6121e6906020810190613626565b848181106121f6576121f66135b9565b90506020028101906122089190613ec9565b612212908061368e565b61221c908061368e565b61222a906020810190613866565b60ff161461227a5760405162461bcd60e51b815260206004820152601b60248201527f537461746520757064617465206973206e6f742061207472616465000000000060448201526064016107cf565b600086868681811061228e5761228e6135b9565b90506020028101906122a09190613ec9565b6122ae906020810190613626565b848181106122be576122be6135b9565b90506020028101906122d09190613ec9565b6122da908061368e565b6122e4908061368e565b6122f2906060810190613881565b8101906122ff91906140ca565b905060086000888888818110612317576123176135b9565b90506020028101906123299190613ec9565b612337906020810190613626565b86818110612347576123476135b9565b90506020028101906123599190613ec9565b612363908061368e565b61236d908061368e565b60209081013582528101919091526040016000205460ff16156123f85760405162461bcd60e51b815260206004820152602d60248201527f4665657320666f722074686973207472616465206861766520616c726561647960448201527f206265656e20636c61696d65640000000000000000000000000000000000000060648201526084016107cf565b600160086000898989818110612410576124106135b9565b90506020028101906124229190613ec9565b612430906020810190613626565b87818110612440576124406135b9565b90506020028101906124529190613ec9565b61245c908061368e565b612466908061368e565b602090810135825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790556101c08101516060015167ffffffffffffffff161561253a576101c081018051606081015160409182015160009081526009602090815283822094518101516001600160a01b031682529390935290822080549192909161251390849067ffffffffffffffff16613b73565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505b6101e08101516060015167ffffffffffffffff16156125cd576101e081018051606081015160409182015160009081526009602090815283822094518101516001600160a01b03168252939093529082208054919290916125a690849067ffffffffffffffff16613b73565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505b505080806125da90613bf2565b91505061206c565b505080806125ef90613bf2565b915050611f86565b505050565b60008261260a868685613272565b1495945050505050565b818114155b92915050565b612627613353565b6000825167ffffffffffffffff8111156126435761264361358a565b6040519080825280602002602001820160405280156126ac57816020015b60408051606081018252600080825260208083018290529282015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816126615790505b50905060005b83518110156119e5576000600560008684815181106126d3576126d36135b9565b60209081029190910181015181015182528101919091526040016000908120548086529003612771576001905060026000868481518110612716576127166135b9565b60209081029190910181015181015182528101919091526040016000908120548086529003612771576040517f5aba372c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006127e2868481518110612788576127886135b9565b60200260200101516040015186600001518886815181106127ab576127ab6135b9565b6020026020010151600001516040516020016127c791906141d4565b604051602081830303815290604052805190602001206132be565b90508061281b576040517f7657200300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260ff16868481518110612832576128326135b9565b602090810291909101015151515160ff161461287a576040517f5424b3dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85838151811061288c5761288c6135b9565b60200260200101516000015160000151606001518060200190518101906128b391906142b0565b6020860181905251608001516128c99088612614565b1561293c5760405162461bcd60e51b815260206004820152603160248201527f536574746c656d656e74207265717565737420636861696e496420646f65736e60448201527f2774206d61746368205f636861696e496400000000000000000000000000000060648201526084016107cf565b846020015160000151602001516001600160a01b0316856020015160400151602001516001600160a01b031614158061298f57506020850151805151604090910151516001600160a01b03908116911614155b806129b25750602085015160408082015101519051608001516129b29190612614565b156129e9576040517fad08c18f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60208501516040908101516060015190517fc48ce05b00000000000000000000000000000000000000000000000000000000815267ffffffffffffffff909116600482015260009081906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c48ce05b906024016040805180830381865afa158015612a83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612aa79190613b0a565b604080516060810182526020808c018051840151516001600160a01b039081168452905184015182015116908201529294509092508101612ae88385613b73565b89602001516040015160600151612aff9190613b9b565b67ffffffffffffffff16815250868681518110612b1e57612b1e6135b9565b602002602001018190525060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d8dfeb456040518163ffffffff1660e01b8152600401602060405180830381865afa158015612b89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bad9190613bbc565b905084156131bb576000816001600160a01b031663282d3fdf836001600160a01b031663e9cbd8226040518163ffffffff1660e01b8152600401602060405180830381865afa158015612c04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c289190613bbc565b60208c01516040908101516060015190517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015267ffffffffffffffff1660248201526044016020604051808303816000875af1158015612ca3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cc79190613bd9565b90506000826001600160a01b031663282d3fdf846001600160a01b0316631a465fe16040518163ffffffff1660e01b8152600401602060405180830381865afa158015612d18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d3c9190613bbc565b60208d01516040908101516060015190517fd86d30a400000000000000000000000000000000000000000000000000000000815267ffffffffffffffff90911660048201526001600160a01b0387169063d86d30a490602401602060405180830381865afa158015612db2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612dd69190613bd9565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015612e39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e5d9190613bd9565b905060405180604001604052808b6000015181526020018c8a81518110612e8657612e866135b9565b60200260200101516020015181525060076000848152602001908152602001600020600082015181600001556020820151816001015590505060405180604001604052808b6000015181526020018c8a81518110612ee657612ee66135b9565b60209081029190910181015181015190915260008381526007825260409081902083518155928201516001909301929092558b8101518201518083015191015191517f8f65ae6f00000000000000000000000000000000000000000000000000000000815260048101919091526001600160a01b03918216602482015267ffffffffffffffff8716604482015290841690638f65ae6f90606401600060405180830381600087803b158015612f9a57600080fd5b505af1158015612fae573d6000803e3d6000fd5b50506040517f0ee2bb3100000000000000000000000000000000000000000000000000000000815267ffffffffffffffff87166004820152600092508291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690630ee2bb31906024016040805180830381865afa15801561303d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130619190613b0a565b60208e8101516040908101518082015192015190517f757c25e50000000000000000000000000000000000000000000000000000000081526004810189905260248101929092526001600160a01b03908116604483015267ffffffffffffffff841660648301529294509092509086169063757c25e590608401600060405180830381600087803b1580156130f557600080fd5b505af1158015613109573d6000803e3d6000fd5b5050505060208c8101516040908101518082015192015190517f757c25e50000000000000000000000000000000000000000000000000000000081526004810186905260248101929092526001600160a01b03908116604483015267ffffffffffffffff8316606483015286169063757c25e590608401600060405180830381600087803b15801561319a57600080fd5b505af11580156131ae573d6000803e3d6000fd5b505050505050505061325a565b6020888101516040908101518082015192015190517f8f65ae6f00000000000000000000000000000000000000000000000000000000815260048101929092526001600160a01b03908116602483015267ffffffffffffffff85166044830152821690638f65ae6f90606401600060405180830381600087803b15801561324157600080fd5b505af1158015613255573d6000803e3d6000fd5b505050505b5050505050808061326a90613bf2565b9150506126b2565b600081815b848110156132b5576132a182878784818110613295576132956135b9565b905060200201356132d4565b9150806132ad81613bf2565b915050613277565b50949350505050565b6000826132cb8584613306565b14949350505050565b60008183106132f05760008281526020849052604090206132ff565b60008381526020839052604090205b9392505050565b600081815b845181101561334b576133378286838151811061332a5761332a6135b9565b60200260200101516132d4565b91508061334381613bf2565b91505061330b565b509392505050565b6040805180820190915260008152602081016133f860408051610140810182526000608080830182815260a0840183905260c0840183905260e0840183905261010084018390526101208401839052835260208084018390528451918201855282825281018290528084018290526060810191909152909182019081526040805160808101825260008082526020828101829052928201819052606082015291015290565b905290565b60006020828403121561340f57600080fd5b5035919050565b60008083601f84011261342857600080fd5b50813567ffffffffffffffff81111561344057600080fd5b6020830191508360208260051b850101111561345b57600080fd5b9250929050565b60008060006040848603121561347757600080fd5b83359250602084013567ffffffffffffffff81111561349557600080fd5b6134a186828701613416565b9497909650939450505050565b600080604083850312156134c157600080fd5b50508035926020909101359150565b600080600080606085870312156134e657600080fd5b84359350602085013567ffffffffffffffff8082111561350557600080fd5b908601906080828903121561351957600080fd5b9093506040860135908082111561352f57600080fd5b5061353c87828801613416565b95989497509550505050565b6000806020838503121561355b57600080fd5b823567ffffffffffffffff81111561357257600080fd5b61357e85828601613416565b90969095509350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa183360301811261361c57600080fd5b9190910192915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261365b57600080fd5b83018035915067ffffffffffffffff82111561367657600080fd5b6020019150600581901b360382131561345b57600080fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8183360301811261361c57600080fd5b803560ff8116811461125857600080fd5b6001600160a01b03811681146136e857600080fd5b50565b8035611258816136d3565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60208152600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8184360301811261377757600080fd5b60806020840152830160ff61378b826136c2565b1660a0840152602081013560c084015260408101356137a9816136d3565b6001600160a01b031660e08401526060810135368290037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe10181126137ed57600080fd5b0160208101903567ffffffffffffffff81111561380957600080fd5b80360382131561381857600080fd5b608061010085015261382f610120850182846136f6565b91505061383e602085016136c2565b60ff811660408501525060408401356060840152606084013560808401528091505092915050565b60006020828403121561387857600080fd5b6132ff826136c2565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126138b657600080fd5b83018035915067ffffffffffffffff8211156138d157600080fd5b60200191503681900382131561345b57600080fd5b6040516080810167ffffffffffffffff811182821017156139095761390961358a565b60405290565b60405160c0810167ffffffffffffffff811182821017156139095761390961358a565b604051610120810167ffffffffffffffff811182821017156139095761390961358a565b604051610200810167ffffffffffffffff811182821017156139095761390961358a565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156139c1576139c161358a565b604052919050565b67ffffffffffffffff811681146136e857600080fd5b8035611258816139c9565b6000608082840312156139fc57600080fd5b613a046138e6565b90508135613a11816136d3565b81526020820135613a21816136d3565b6020820152604082810135908201526060820135613a3e816139c9565b606082015292915050565b60008183036101e0811215613a5d57600080fd5b613a656138e6565b60c0821215613a7357600080fd5b613a7b61390f565b91508335613a88816136d3565b82526020840135613a98816136d3565b60208301526040840135613aab816136d3565b80604084015250606084013560608301526080840135608083015260a084013560a083015281815260c08401356020820152613aea8560e086016139ea565b6040820152613afd8561016086016139ea565b6060820152949350505050565b60008060408385031215613b1d57600080fd5b8251613b28816139c9565b6020840151909250613b39816139c9565b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b67ffffffffffffffff818116838216019080821115613b9457613b94613b44565b5092915050565b67ffffffffffffffff828116828216039080821115613b9457613b94613b44565b600060208284031215613bce57600080fd5b81516132ff816136d3565b600060208284031215613beb57600080fd5b5051919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613c2357613c23613b44565b5060010190565b6000815180845260005b81811015613c5057602081850181015186830182015201613c34565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600060808201868352602060808185015281875180845260a086019150828901935060005b81811015613cfb57845180516001600160a01b03908116855285820151168585015260409081015167ffffffffffffffff169084015293830193606090920191600101613cb3565b50508481036040860152613d0f8188613c2a565b9350505050613d2960608301846001600160a01b03169052565b95945050505050565b80151581146136e857600080fd5b600060208284031215613d5257600080fd5b81516132ff81613d32565b600060208284031215613d6f57600080fd5b81356132ff816136d3565b600060808236031215613d8c57600080fd5b613d946138e6565b823567ffffffffffffffff80821115613dac57600080fd5b818501915060808236031215613dc157600080fd5b613dc96138e6565b613dd2836136c2565b8152602080840135818301526040840135613dec816136d3565b6040830152606084013583811115613e0357600080fd5b939093019236601f850112613e1757600080fd5b833583811115613e2957613e2961358a565b613e59827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160161397a565b93508084523682828701011115613e6f57600080fd5b8082860183860137600082828601015250826060830152818552613e948188016136c2565b9085015250505060408381013590820152606092830135928101929092525090565b8082018082111561261957612619613b44565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc183360301811261361c57600080fd5b600060808284031215613f0f57600080fd5b613f176138e6565b90508135613f24816136d3565b8152602082810135908201526040820135613f3e816136d3565b806040830152506060820135606082015292915050565b803561125881613d32565b6000818303610140811215613f7457600080fd5b613f7c6138e6565b915060e0811215613f8c57600080fd5b50613f956138e6565b613f9f8484613efd565b81526080830135613faf81613d32565b602082015260a0830135613fc2816139c9565b604082015260c0830135613fd5816139c9565b60608201528152613fe860e083016136c2565b60208201526101008201356040820152610120820135606082015292915050565b60006103c0828403121561401c57600080fd5b614024613932565b905061402f826136eb565b815261403e8360208401613f60565b6020820152614051836101608401613f60565b6040820152614064836102a08401613efd565b606082015261407661032083016139df565b608082015261408861034083016139df565b60a082015261409a6103608301613f55565b60c08201526140ac61038083016136eb565b60e08201526140be6103a083016136eb565b61010082015292915050565b60006107e082840312156140dd57600080fd5b6140e5613956565b823581526140f68460208501614009565b60208201526103e083013560408201526141148461040085016139ea565b60608201526104808301356080820152614132846104a085016139ea565b60a082015261052083013560c08201526141508461054085016139ea565b60e08201526105c083013561010082015261416f846105e085016139ea565b6101208201526106608301356101408201526106808301356101608201526106a08301356101808201526106c08301356101a08201526141b3846106e085016139ea565b6101c08201526141c78461076085016139ea565b6101e08201529392505050565b60208152600082516080602084015260ff81511660a0840152602081015160c08401526001600160a01b0360408201511660e0840152606081015190506080610100840152614227610120840182613c2a565b9050602084015161423d604085018260ff169052565b5060408401516060840152606084015160808401528091505092915050565b60006080828403121561426e57600080fd5b6142766138e6565b90508151614283816136d3565b81526020820151614293816136d3565b6020820152604082810151908201526060820151613a3e816139c9565b60008183036101e08112156142c457600080fd5b6142cc6138e6565b60c08212156142da57600080fd5b6142e261390f565b915083516142ef816136d3565b825260208401516142ff816136d3565b60208301526040840151614312816136d3565b80604084015250606084015160608301526080840151608083015260a084015160a083015281815260c084015160208201526143518560e0860161425c565b6040820152613afd85610160860161425c56";

type RollupConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RollupConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Rollup__factory extends ContractFactory {
  constructor(...args: RollupConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _participatingInterface: string,
    _manager: string,
    overrides?: Overrides & { from?: string }
  ): Promise<Rollup> {
    return super.deploy(
      _participatingInterface,
      _manager,
      overrides || {}
    ) as Promise<Rollup>;
  }
  override getDeployTransaction(
    _participatingInterface: string,
    _manager: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _participatingInterface,
      _manager,
      overrides || {}
    );
  }
  override attach(address: string): Rollup {
    return super.attach(address) as Rollup;
  }
  override connect(signer: Signer): Rollup__factory {
    return super.connect(signer) as Rollup__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RollupInterface {
    return new utils.Interface(_abi) as RollupInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Rollup {
    return new Contract(address, _abi, signerOrProvider) as Rollup;
  }
}
