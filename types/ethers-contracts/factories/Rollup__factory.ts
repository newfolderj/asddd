/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Rollup, RollupInterface } from "../Rollup";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_participatingInterface",
        type: "address",
      },
      {
        internalType: "address",
        name: "_manager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "expected",
        type: "address",
      },
    ],
    name: "CALLER_NOT_PORTAL",
    type: "error",
  },
  {
    inputs: [],
    name: "CALLER_NOT_VALIDATOR",
    type: "error",
  },
  {
    inputs: [],
    name: "EMPTY_STATE_ROOT",
    type: "error",
  },
  {
    inputs: [],
    name: "EPOCH_NOT_CONFIRMED",
    type: "error",
  },
  {
    inputs: [],
    name: "INPUTS_HASH_MISMATCH_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INPUTS_LENGTH_MISMATCH_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INPUT_PARAMS_MISMATCH_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_PROOF_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_REQUEST_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_SEQUENCE_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_STATE_UPDATE_SETTLEMENT",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "Id",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cleared",
        type: "uint256",
      },
    ],
    name: "ObligationsWritten",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "epoch",
            type: "uint256",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint8",
                        name: "typeIdentifier",
                        type: "uint8",
                      },
                      {
                        internalType: "Id",
                        name: "sequenceId",
                        type: "uint256",
                      },
                      {
                        internalType: "address",
                        name: "participatingInterface",
                        type: "address",
                      },
                      {
                        internalType: "bytes",
                        name: "structData",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct StateUpdateLibrary.StateUpdate",
                    name: "stateUpdate",
                    type: "tuple",
                  },
                  {
                    internalType: "uint8",
                    name: "v",
                    type: "uint8",
                  },
                  {
                    internalType: "bytes32",
                    name: "r",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "s",
                    type: "bytes32",
                  },
                ],
                internalType: "struct StateUpdateLibrary.SignedStateUpdate",
                name: "tradeUpdate",
                type: "tuple",
              },
              {
                internalType: "bytes32[]",
                name: "proof",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Rollup.TradeProof[]",
            name: "tradeProof",
            type: "tuple[]",
          },
        ],
        internalType: "struct Rollup.TradingFeeClaim[]",
        name: "_claims",
        type: "tuple[]",
      },
    ],
    name: "claimTradingFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "confirmStateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    name: "confirmedStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epoch",
    outputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "fraudulent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "getConfirmedStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "getProposedStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lockId",
        type: "uint256",
      },
    ],
    name: "isConfirmedLockId",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lockId",
        type: "uint256",
      },
    ],
    name: "isFraudulentLockId",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastConfirmedEpoch",
    outputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "markFraudulent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Id",
        name: "_chainId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint8",
                    name: "typeIdentifier",
                    type: "uint8",
                  },
                  {
                    internalType: "Id",
                    name: "sequenceId",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "participatingInterface",
                    type: "address",
                  },
                  {
                    internalType: "bytes",
                    name: "structData",
                    type: "bytes",
                  },
                ],
                internalType: "struct StateUpdateLibrary.StateUpdate",
                name: "stateUpdate",
                type: "tuple",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
            ],
            internalType: "struct StateUpdateLibrary.SignedStateUpdate",
            name: "signedUpdate",
            type: "tuple",
          },
          {
            internalType: "Id",
            name: "stateRootId",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "proof",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Rollup.SettlementParams[]",
        name: "_params",
        type: "tuple[]",
      },
    ],
    name: "processSettlements",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "processedSettlements",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "proposalBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_stateRoot",
        type: "bytes32",
      },
    ],
    name: "proposeStateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposedStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_assets",
        type: "address[]",
      },
    ],
    name: "relayTradingFees",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_stateRoot",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint8",
                name: "typeIdentifier",
                type: "uint8",
              },
              {
                internalType: "Id",
                name: "sequenceId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "participatingInterface",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "structData",
                type: "bytes",
              },
            ],
            internalType: "struct StateUpdateLibrary.StateUpdate",
            name: "stateUpdate",
            type: "tuple",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct StateUpdateLibrary.SignedStateUpdate",
        name: "_signedUpdate",
        type: "tuple",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "submitSettlement",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tradingFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0604052600160005560006001553480156200001b57600080fd5b5060405162003b8938038062003b898339810160408190526200003e9162000073565b6001600160a01b0391821660a05216608052620000ab565b80516001600160a01b03811681146200006e57600080fd5b919050565b600080604083850312156200008757600080fd5b620000928362000056565b9150620000a26020840162000056565b90509250929050565b60805160a051613a5d6200012c60003960008181610a8a01528181610c1f01526113820152600081816104ca01528181610664015281816107610152818161099701528181610d6701528181610e8e015281816111d001528181611eb201528181611fc6015281816120500152818161228e01526126240152613a5d6000f3fe60806040526004361061015f5760003560e01c8063a9275f0a116100c0578063df686c8511610074578063f1728ad211610059578063f1728ad21461042c578063f273886114610467578063fdb44a171461047c57600080fd5b8063df686c85146103e1578063e2bf1549146103f457600080fd5b8063b97dd9e2116100a5578063b97dd9e21461038c578063c98bdc03146103a1578063dac6c593146103ce57600080fd5b8063a9275f0a14610356578063b59c23c11461036c57600080fd5b80636bb38f8d1161011757806379e1ccee116100fc57806379e1ccee146102d8578063887412b714610313578063900cf0cf1461034057600080fd5b80636bb38f8d14610298578063706efcd0146102b857600080fd5b806348a8c9211161014857806348a8c921146101ea5780634cc4f7c0146102255780636b6e30e41461024557600080fd5b80630792457c1461016457806310e0917d146101d5575b600080fd5b34801561017057600080fd5b506101c061017f366004612988565b600090815260076020908152604080832081518083018352815481526001909101548184018190528452600483528184209051845290915290205460ff1690565b60405190151581526020015b60405180910390f35b6101e86101e33660046129ed565b61049c565b005b3480156101f657600080fd5b50610217610205366004612988565b60056020526000908152604090205481565b6040519081526020016101cc565b34801561023157600080fd5b50610217610240366004612988565b6105cc565b34801561025157600080fd5b506101c0610260366004612988565b600090815260076020908152604080832081518083018352815480825260019092015490840181905284526005909252909120541490565b3480156102a457600080fd5b506102176102b3366004612988565b61061a565b3480156102c457600080fd5b506101e86102d3366004612988565b610636565b3480156102e457600080fd5b506101c06102f3366004612a39565b600460209081526000928352604080842090915290825290205460ff1681565b34801561031f57600080fd5b5061021761032e366004612988565b60036020526000908152604090205481565b34801561034c57600080fd5b5061021760005481565b34801561036257600080fd5b5061021760015481565b34801561037857600080fd5b506101e8610387366004612988565b610995565b34801561039857600080fd5b50600054610217565b3480156103ad57600080fd5b506102176103bc366004612988565b60026020526000908152604090205481565b6101e86103dc3660046129ed565b610a7f565b6101e86103ef366004612a5b565b610e60565b34801561040057600080fd5b5061021761040f366004612af6565b600960209081526000928352604080842090915290825290205481565b34801561043857600080fd5b506101c0610447366004612a39565b600660209081526000928352604080842090915290825290205460ff1681565b34801561047357600080fd5b506101e8611127565b34801561048857600080fd5b506101e8610497366004612b26565b611377565b6040517ffacd743b0000000000000000000000000000000000000000000000000000000081523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063facd743b90602401602060405180830381865afa158015610519573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053d9190612b76565b6105b45760405162461bcd60e51b815260206004820152602660248201527f4f6e6c792076616c696461746f722063616e2070726f6365737320736574746c60448201527f656d656e7473000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6105c7836105c28385612e3b565b611a54565b505050565b60008181526005602052604081205490819003610615576040517fa597b61c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b6000818152600260205260408120549081900361061557600080fd5b6040517ffacd743b0000000000000000000000000000000000000000000000000000000081523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063facd743b90602401602060405180830381865afa1580156106b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d79190612b76565b61070d576040517fd6917b3700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060000361075d5760405162461bcd60e51b815260206004820152601960248201527f50726f706f73656420656d70747920737461746520726f6f740000000000000060448201526064016105ab565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d8dfeb456040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e19190612f6e565b90506000816001600160a01b031663282d3fdf836001600160a01b0316631a465fe16040518163ffffffff1660e01b8152600401602060405180830381865afa158015610832573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108569190612f6e565b846001600160a01b031663ab900a8d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610894573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b89190612f8b565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af115801561091b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093f9190612f8b565b600080548152600260209081526040808320879055868352600382528083204390558051808201825296875282548783019081529383526007909152812094518555905160019485015580549093019092555050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b2bbcfc06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a179190612f6e565b6001600160a01b0316336001600160a01b031614610a3457600080fd5b600090815260046020908152604080832060028352818420548452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b1d5760405162461bcd60e51b815260206004820152603360248201527f4f6e6c792070617274696369706174696e6720696e746572666163652063616e60448201527f20636c61696d2074726164696e6720666565730000000000000000000000000060648201526084016105ab565b60008167ffffffffffffffff811115610b3857610b38612b93565b604051908082528060200260200182016040528015610ba157816020015b60408051606081018252600080825260208083018290529282015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909201910181610b565790505b50905060005b82811015610d6457600085815260096020526040812090858584818110610bd057610bd0612fa4565b9050602002016020810190610be59190612fd3565b6001600160a01b03166001600160a01b0316815260200190815260200160002054600003610c1257600080fd5b60405180606001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602001858584818110610c5e57610c5e612fa4565b9050602002016020810190610c739190612fd3565b6001600160a01b031681526000878152600960209081526040822092019190878786818110610ca457610ca4612fa4565b9050602002016020810190610cb99190612fd3565b6001600160a01b03166001600160a01b0316815260200190815260200160002054815250828281518110610cef57610cef612fa4565b60200260200101819052506000600960008781526020019081526020016000206000868685818110610d2357610d23612fa4565b9050602002016020810190610d389190612fd3565b6001600160a01b0316815260208101919091526040016000205580610d5c8161301f565b915050610ba7565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638406c0796040518163ffffffff1660e01b8152600401602060405180830381865afa158015610dc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de79190612f6e565b6001600160a01b031663ea03683d34868460405180602001604052806000815250336040518663ffffffff1660e01b8152600401610e2894939291906130bb565b6000604051808303818588803b158015610e4157600080fd5b505af1158015610e55573d6000803e3d6000fd5b505050505050505050565b6040517ffacd743b0000000000000000000000000000000000000000000000000000000081523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063facd743b90602401602060405180830381865afa158015610edd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f019190612b76565b610f735760405162461bcd60e51b815260206004820152602660248201527f4f6e6c792076616c696461746f722063616e2070726f6365737320736574746c60448201527f656d656e7473000000000000000000000000000000000000000000000000000060648201526084016105ab565b600080546001018082558152600260208190526040909120859055610f988480613155565b610fa6906020810190613193565b60ff1614610fe0576040517f5424b3dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610fec8480613155565b610ffa9060608101906131ae565b810190611007919061326b565b60408051600180825281830190925291925060009190816020015b611085604080516101608101909152600060e08201818152610100830182905261012083018290526060610140840181905283019081526080830182905260a0830182905260c08301919091528190815260200160008152602001606081525090565b8152602001906001900390816110225790505090506040518060600160405280866110af90613322565b815260200160005481526020018585808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250939094525050835184925061110257611102612fa4565b602002602001018190525061111f82604001516040015182611a54565b505050505050565b60018054016001819055600090815260026020526040812054908190036111b65760405162461bcd60e51b815260206004820152602560248201527f547279696e6720746f20636f6e6669726d20616e20656d70747920737461746560448201527f20726f6f7400000000000000000000000000000000000000000000000000000060648201526084016105ab565b6000600360008381526020019081526020016000205490507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d43a33ea6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561122c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112509190612f8b565b61125a908261332e565b4310156112cf5760405162461bcd60e51b815260206004820152602f60248201527f50726f706f73656420737461746520726f6f7420686173206e6f74207061737360448201527f656420667261756420706572696f64000000000000000000000000000000000060648201526084016105ab565b600154600090815260046020908152604080832085845290915290205460ff16156113625760405162461bcd60e51b815260206004820152602960248201527f547279696e6720746f20636f6e6669726d2061206672617564756c656e74207360448201527f7461746520726f6f74000000000000000000000000000000000000000000000060648201526084016105ab565b50600154600090815260056020526040902055565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146114155760405162461bcd60e51b815260206004820152603360248201527f4f6e6c792070617274696369706174696e6720696e746572666163652063616e60448201527f20636c61696d2074726164696e6720666565730000000000000000000000000060648201526084016105ab565b60005b818110156105c75760006005600085858581811061143857611438612fa4565b905060200281019061144a9190613341565b600001358152602001908152602001600020549050806000036114fb5760405162461bcd60e51b815260206004820152604560248201527f547279696e6720746f20636c61696d2074726164696e67206665657320666f7260448201527f20616e2065706f636820746861742069732079657420746f20626520636f6e6660648201527f69726d6564000000000000000000000000000000000000000000000000000000608482015260a4016105ab565b60005b84848481811061151057611510612fa4565b90506020028101906115229190613341565b611530906020810190613375565b9050811015611a3f57600061162a86868681811061155057611550612fa4565b90506020028101906115629190613341565b611570906020810190613375565b8481811061158057611580612fa4565b90506020028101906115929190613341565b6115a0906020810190613375565b858989898181106115b3576115b3612fa4565b90506020028101906115c59190613341565b6115d3906020810190613375565b878181106115e3576115e3612fa4565b90506020028101906115f59190613341565b6115ff9080613155565b60405160200161160f9190613426565b60405160208183030381529060405280519060200120612884565b9050806116795760405162461bcd60e51b815260206004820152601e60248201527f496e76616c6964206d65726b6c652070726f6f6620666f72207472616465000060448201526064016105ab565b600186868681811061168d5761168d612fa4565b905060200281019061169f9190613341565b6116ad906020810190613375565b848181106116bd576116bd612fa4565b90506020028101906116cf9190613341565b6116d99080613155565b6116e39080613155565b6116f1906020810190613193565b60ff16146117415760405162461bcd60e51b815260206004820152601b60248201527f537461746520757064617465206973206e6f742061207472616465000000000060448201526064016105ab565b600086868681811061175557611755612fa4565b90506020028101906117679190613341565b611775906020810190613375565b8481811061178557611785612fa4565b90506020028101906117979190613341565b6117a19080613155565b6117ab9080613155565b6117b99060608101906131ae565b8101906117c69190613740565b9050600860008888888181106117de576117de612fa4565b90506020028101906117f09190613341565b6117fe906020810190613375565b8681811061180e5761180e612fa4565b90506020028101906118209190613341565b61182a9080613155565b6118349080613155565b60209081013582528101919091526040016000205460ff16156118bf5760405162461bcd60e51b815260206004820152602d60248201527f4665657320666f722074686973207472616465206861766520616c726561647960448201527f206265656e20636c61696d65640000000000000000000000000000000000000060648201526084016105ab565b6001600860008989898181106118d7576118d7612fa4565b90506020028101906118e99190613341565b6118f7906020810190613375565b8781811061190757611907612fa4565b90506020028101906119199190613341565b6119239080613155565b61192d9080613155565b602090810135825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790556101c081015160600151156119cc576101c081018051606081015160409182015160009081526009602090815283822094518101516001600160a01b03168252939093529082208054919290916119c690849061332e565b90915550505b6101e08101516060015115611a2a576101e081018051606081015160409182015160009081526009602090815283822094518101516001600160a01b0316825293909352908220805491929091611a2490849061332e565b90915550505b50508080611a379061301f565b9150506114fe565b50508080611a4c9061301f565b915050611418565b60408051606080820183526000808352835161012081018552608080820183815260a0830184905260c0830184905260e083018490526101008301849052825260208083018490528651808301885284815280820185905280880185905280860185905283880152865191820187528382528181018490528187018490528185018490529382015291830191909152918101919091526000825167ffffffffffffffff811115611b0657611b06612b93565b604051908082528060200260200182016040528015611b6f57816020015b60408051606081018252600080825260208083018290529282015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909201910181611b245790505b50905060005b8351811015610d6457600060056000868481518110611b9657611b96612fa4565b60209081029190910181015181015182528101919091526040016000908120548086529003611c34576001905060026000868481518110611bd957611bd9612fa4565b60209081029190910181015181015182528101919091526040016000908120548086529003611c34576040517f5aba372c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611ca5868481518110611c4b57611c4b612fa4565b6020026020010151604001518660000151888681518110611c6e57611c6e612fa4565b602002602001015160000151604051602001611c8a919061384a565b6040516020818303038152906040528051906020012061289c565b905080611cde576040517f7657200300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260ff16868481518110611cf557611cf5612fa4565b602090810291909101015151515160ff1614611d3d576040517f5424b3dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50848281518110611d5057611d50612fa4565b6020026020010151600001516000015160600151806020019051810190611d77919061392a565b602085018190525160800151611d8d90876128b2565b15611e005760405162461bcd60e51b815260206004820152603160248201527f536574746c656d656e74207265717565737420636861696e496420646f65736e60448201527f2774206d61746368205f636861696e496400000000000000000000000000000060648201526084016105ab565b836020015160000151602001516001600160a01b0316846020015160400151602001516001600160a01b0316141580611e5357506020840151805151604090910151516001600160a01b03908116911614155b80611e76575060208401516040808201510151905160800151611e7691906128b2565b15611ead576040517fad08c18f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c48ce05b876020015160400151606001516040518263ffffffff1660e01b8152600401611f0a91815260200190565b6040805180830381865afa158015611f26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f4a91906139d4565b604080516060810182526020808b018051840151516001600160a01b039081168452905184015182015116908201529294509092508101611f8b838561332e565b88602001516040015160600151611fa291906139f8565b815250858581518110611fb757611fb7612fa4565b602002602001018190525060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d8dfeb456040518163ffffffff1660e01b8152600401602060405180830381865afa158015612022573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120469190612f6e565b905083156127d7577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637dc0d1d06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156120ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120d09190612f6e565b602088810151604090810151808201519281015160609091015191517f6e4a22ed00000000000000000000000000000000000000000000000000000000815260048101939093526001600160a01b03908116602484015260448301919091529190911690636e4a22ed906064016020604051808303816000875af115801561215c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121809190612f8b565b8760400181815250506000816001600160a01b031663282d3fdf836001600160a01b031663e9cbd8226040518163ffffffff1660e01b8152600401602060405180830381865afa1580156121d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121fc9190612f6e565b6040808c015190517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015612264573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122889190612f8b565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637dc0d1d06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156122ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061230e9190612f6e565b6001600160a01b031663d86d30a48a604001516040518263ffffffff1660e01b815260040161233f91815260200190565b602060405180830381865afa15801561235c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123809190612f8b565b90506305f5e1006123948262e4e1c0613a0b565b61239e9190613a22565b90506000836001600160a01b031663282d3fdf856001600160a01b0316631a465fe16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156123ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124139190612f6e565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b039091166004820152602481018590526044016020604051808303816000875af1158015612478573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061249c9190612f8b565b905060405180604001604052808b6000015181526020018c8a815181106124c5576124c5612fa4565b60200260200101516020015181525060076000858152602001908152602001600020600082015181600001556020820151816001015590505060405180604001604052808b6000015181526020018c8a8151811061252557612525612fa4565b60209081029190910181015181015190915260008381526007825260409081902083518155928201516001909301929092558b8101518201518083015191015191517fa6d7f27d00000000000000000000000000000000000000000000000000000000815260048101919091526001600160a01b039182166024820152604481018890529085169063a6d7f27d90606401600060405180830381600087803b1580156125d057600080fd5b505af11580156125e4573d6000803e3d6000fd5b50506040517f0ee2bb3100000000000000000000000000000000000000000000000000000000815260048101889052600092508291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690630ee2bb31906024016040805180830381865afa15801561266a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061268e91906139d4565b60208e8101516040908101518082015192015190517f03c1e4b2000000000000000000000000000000000000000000000000000000008152600481018a905260248101929092526001600160a01b03908116604483015260648201849052929450909250908716906303c1e4b290608401600060405180830381600087803b15801561271957600080fd5b505af115801561272d573d6000803e3d6000fd5b5050505060208c8101516040908101518082015192015190517f03c1e4b20000000000000000000000000000000000000000000000000000000081526004810186905260248101929092526001600160a01b039081166044830152606482018390528716906303c1e4b290608401600060405180830381600087803b1580156127b557600080fd5b505af11580156127c9573d6000803e3d6000fd5b50505050505050505061286d565b6020878101516040908101518082015192015190517fa6d7f27d00000000000000000000000000000000000000000000000000000000815260048101929092526001600160a01b0390811660248301526044820185905282169063a6d7f27d90606401600060405180830381600087803b15801561285457600080fd5b505af1158015612868573d6000803e3d6000fd5b505050505b50505050808061287c9061301f565b915050611b75565b6000826128928686856128bd565b1495945050505050565b6000826128a98584612909565b14949350505050565b818114155b92915050565b600081815b84811015612900576128ec828787848181106128e0576128e0612fa4565b90506020020135612956565b9150806128f88161301f565b9150506128c2565b50949350505050565b600081815b845181101561294e5761293a8286838151811061292d5761292d612fa4565b6020026020010151612956565b9150806129468161301f565b91505061290e565b509392505050565b6000818310612972576000828152602084905260409020612981565b60008381526020839052604090205b9392505050565b60006020828403121561299a57600080fd5b5035919050565b60008083601f8401126129b357600080fd5b50813567ffffffffffffffff8111156129cb57600080fd5b6020830191508360208260051b85010111156129e657600080fd5b9250929050565b600080600060408486031215612a0257600080fd5b83359250602084013567ffffffffffffffff811115612a2057600080fd5b612a2c868287016129a1565b9497909650939450505050565b60008060408385031215612a4c57600080fd5b50508035926020909101359150565b60008060008060608587031215612a7157600080fd5b84359350602085013567ffffffffffffffff80821115612a9057600080fd5b9086019060808289031215612aa457600080fd5b90935060408601359080821115612aba57600080fd5b50612ac7878288016129a1565b95989497509550505050565b6001600160a01b0381168114612ae857600080fd5b50565b803561061581612ad3565b60008060408385031215612b0957600080fd5b823591506020830135612b1b81612ad3565b809150509250929050565b60008060208385031215612b3957600080fd5b823567ffffffffffffffff811115612b5057600080fd5b612b5c858286016129a1565b90969095509350505050565b8015158114612ae857600080fd5b600060208284031215612b8857600080fd5b815161298181612b68565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715612be557612be5612b93565b60405290565b6040516060810167ffffffffffffffff81118282101715612be557612be5612b93565b60405160a0810167ffffffffffffffff81118282101715612be557612be5612b93565b604051610120810167ffffffffffffffff81118282101715612be557612be5612b93565b604051610200810167ffffffffffffffff81118282101715612be557612be5612b93565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612cc057612cc0612b93565b604052919050565b600067ffffffffffffffff821115612ce257612ce2612b93565b5060051b60200190565b803560ff8116811461061557600080fd5b600060808284031215612d0f57600080fd5b612d17612bc2565b9050813567ffffffffffffffff80821115612d3157600080fd5b9083019060808286031215612d4557600080fd5b612d4d612bc2565b612d5683612cec565b8152602080840135818301526040840135612d7081612ad3565b6040830152606084013583811115612d8757600080fd5b80850194505086601f850112612d9c57600080fd5b833583811115612dae57612dae612b93565b612dde827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601612c79565b93508084528782828701011115612df457600080fd5b8082860183860137600082828601015250826060830152818552612e19818701612cec565b8186015250505050604082013560408201526060820135606082015292915050565b6000612e4e612e4984612cc8565b612c79565b83815260208082019190600586811b860136811115612e6c57600080fd5b865b81811015612f6157803567ffffffffffffffff80821115612e8f5760008081fd5b818a01915060608236031215612ea55760008081fd5b612ead612beb565b823582811115612ebd5760008081fd5b612ec936828601612cfd565b825250868301358782015260408084013583811115612ee85760008081fd5b939093019236601f850112612eff57600092508283fd5b83359250612f0f612e4984612cc8565b83815292871b84018801928881019036851115612f2c5760008081fd5b948901945b84861015612f4a57853582529489019490890190612f31565b918301919091525088525050948301948301612e6e565b5092979650505050505050565b600060208284031215612f8057600080fd5b815161298181612ad3565b600060208284031215612f9d57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215612fe557600080fd5b813561298181612ad3565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361305057613050612ff0565b5060010190565b6000815180845260005b8181101561307d57602081850181015186830182015201613061565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600060808201868352602060808185015281875180845260a086019150828901935060005b8181101561311e57845180516001600160a01b03908116855285820151168585015260409081015190840152938301936060909201916001016130e0565b505084810360408601526131328188613057565b935050505061314c60608301846001600160a01b03169052565b95945050505050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8183360301811261318957600080fd5b9190910192915050565b6000602082840312156131a557600080fd5b61298182612cec565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126131e357600080fd5b83018035915067ffffffffffffffff8211156131fe57600080fd5b6020019150368190038213156129e657600080fd5b60006080828403121561322557600080fd5b61322d612bc2565b9050813561323a81612ad3565b8152602082013561324a81612ad3565b80602083015250604082013560408201526060820135606082015292915050565b60008183036101c081121561327f57600080fd5b613287612bc2565b60a082121561329557600080fd5b61329d612c0e565b915083356132aa81612ad3565b825260208401356132ba81612ad3565b602083015260408401356132cd81612ad3565b80604084015250606084013560608301526080840135608083015281815260a084013560208201526133028560c08601613213565b6040820152613315856101408601613213565b6060820152949350505050565b60006128b73683612cfd565b808201808211156128b7576128b7612ff0565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc183360301811261318957600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126133aa57600080fd5b83018035915067ffffffffffffffff8211156133c557600080fd5b6020019150600581901b36038213156129e657600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60208152600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8184360301811261345e57600080fd5b60806020840152830160ff61347282612cec565b1660a0840152602081013560c0840152604081013561349081612ad3565b6001600160a01b031660e08401526060810135368290037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe10181126134d457600080fd5b0160208101903567ffffffffffffffff8111156134f057600080fd5b8036038213156134ff57600080fd5b6080610100850152613516610120850182846133dd565b91505061352560208501612cec565b60ff811660408501525060408401356060840152606084013560808401528091505092915050565b600060c0828403121561355f57600080fd5b60405160c0810181811067ffffffffffffffff8211171561358257613582612b93565b604052905080823561359381612ad3565b81526135a160208401612cec565b60208201526040830135604082015260608301356135be81612ad3565b60608201526135cf60808401612cec565b608082015260a083013560a08201525092915050565b803561061581612b68565b600081830361018081121561360457600080fd5b61360c612bc2565b91506101208082121561361e57600080fd5b613626612bc2565b9150613632858561354d565b825260c084013561364281612b68565b602083015260e08401356040830152610100840135606083015281835261366a818501612cec565b602084015250506101408201356040820152610160820135606082015292915050565b600061048082840312156136a057600080fd5b6136a8612c31565b90506136b382612aeb565b81526136c283602084016135f0565b60208201526136d5836101a084016135f0565b60408201526136e883610320840161354d565b60608201526103e0820135608082015261040082013560a082015261371061042083016135e5565b60c08201526137226104408301612aeb565b60e08201526137346104608301612aeb565b61010082015292915050565b60006108a0828403121561375357600080fd5b61375b612c55565b8235815261376c846020850161368d565b60208201526104a0830135604082015261378a846104c08501613213565b606082015261054083013560808201526137a8846105608501613213565b60a08201526105e083013560c08201526137c6846106008501613213565b60e08201526106808301356101008201526137e5846106a08501613213565b6101208201526107208301356101408201526107408301356101608201526107608301356101808201526107808301356101a0820152613829846107a08501613213565b6101c082015261383d846108208501613213565b6101e08201529392505050565b60208152600082516080602084015260ff81511660a0840152602081015160c08401526001600160a01b0360408201511660e084015260608101519050608061010084015261389d610120840182613057565b905060208401516138b3604085018260ff169052565b5060408401516060840152606084015160808401528091505092915050565b6000608082840312156138e457600080fd5b6138ec612bc2565b905081516138f981612ad3565b8152602082015161390981612ad3565b80602083015250604082015160408201526060820151606082015292915050565b60008183036101c081121561393e57600080fd5b613946612bc2565b60a082121561395457600080fd5b61395c612c0e565b9150835161396981612ad3565b8252602084015161397981612ad3565b6020830152604084015161398c81612ad3565b80604084015250606084015160608301526080840151608083015281815260a084015160208201526139c18560c086016138d2565b60408201526133158561014086016138d2565b600080604083850312156139e757600080fd5b505080516020909101519092909150565b818103818111156128b7576128b7612ff0565b80820281158282048414176128b7576128b7612ff0565b600082613a58577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056";

type RollupConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RollupConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Rollup__factory extends ContractFactory {
  constructor(...args: RollupConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _participatingInterface: string,
    _manager: string,
    overrides?: Overrides & { from?: string }
  ): Promise<Rollup> {
    return super.deploy(
      _participatingInterface,
      _manager,
      overrides || {}
    ) as Promise<Rollup>;
  }
  override getDeployTransaction(
    _participatingInterface: string,
    _manager: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _participatingInterface,
      _manager,
      overrides || {}
    );
  }
  override attach(address: string): Rollup {
    return super.attach(address) as Rollup;
  }
  override connect(signer: Signer): Rollup__factory {
    return super.connect(signer) as Rollup__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RollupInterface {
    return new utils.Interface(_abi) as RollupInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Rollup {
    return new Contract(address, _abi, signerOrProvider) as Rollup;
  }
}
