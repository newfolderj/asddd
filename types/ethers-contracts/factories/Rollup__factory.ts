/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Rollup, RollupInterface } from "../Rollup";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_participatingInterface",
        type: "address",
      },
      {
        internalType: "address",
        name: "_manager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "expected",
        type: "address",
      },
    ],
    name: "CALLER_NOT_PORTAL",
    type: "error",
  },
  {
    inputs: [],
    name: "CALLER_NOT_VALIDATOR",
    type: "error",
  },
  {
    inputs: [],
    name: "EMPTY_STATE_ROOT",
    type: "error",
  },
  {
    inputs: [],
    name: "EPOCH_NOT_CONFIRMED",
    type: "error",
  },
  {
    inputs: [],
    name: "INPUTS_HASH_MISMATCH_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INPUTS_LENGTH_MISMATCH_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INPUT_PARAMS_MISMATCH_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_PROOF_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_REQUEST_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_SEQUENCE_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_STATE_UPDATE_SETTLEMENT",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "Id",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cleared",
        type: "uint256",
      },
    ],
    name: "ObligationsWritten",
    type: "event",
  },
  {
    inputs: [],
    name: "CONFIRMATION_BLOCKS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "confirmStateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    name: "confirmedStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epoch",
    outputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "fraudulent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "getConfirmedStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "getProposedStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastConfirmedEpoch",
    outputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastSettlementIdProcessed",
    outputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "markFraudulent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nextRequestId",
    outputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint8",
                name: "typeIdentifier",
                type: "uint8",
              },
              {
                internalType: "Id",
                name: "sequenceId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "participatingInterface",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "structData",
                type: "bytes",
              },
            ],
            internalType: "struct StateUpdateLibrary.StateUpdate",
            name: "stateUpdate",
            type: "tuple",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct StateUpdateLibrary.SignedStateUpdate",
        name: "_signedUpdate",
        type: "tuple",
      },
      {
        internalType: "Id",
        name: "_stateRootId",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "processSettlement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "proposalBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_stateRoot",
        type: "bytes32",
      },
    ],
    name: "proposeStateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposedStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "requestSettlement",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_stateRoot",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint8",
                name: "typeIdentifier",
                type: "uint8",
              },
              {
                internalType: "Id",
                name: "sequenceId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "participatingInterface",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "structData",
                type: "bytes",
              },
            ],
            internalType: "struct StateUpdateLibrary.StateUpdate",
            name: "stateUpdate",
            type: "tuple",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct StateUpdateLibrary.SignedStateUpdate",
        name: "_signedUpdate",
        type: "tuple",
      },
      {
        internalType: "Id",
        name: "_stateRootId",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "submitSettlement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type RollupConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RollupConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Rollup__factory extends ContractFactory {
  constructor(...args: RollupConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _participatingInterface: string,
    _manager: string,
    overrides?: Overrides & { from?: string }
  ): Promise<Rollup> {
    return super.deploy(
      _participatingInterface,
      _manager,
      overrides || {}
    ) as Promise<Rollup>;
  }
  override getDeployTransaction(
    _participatingInterface: string,
    _manager: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _participatingInterface,
      _manager,
      overrides || {}
    );
  }
  override attach(address: string): Rollup {
    return super.attach(address) as Rollup;
  }
  override connect(signer: Signer): Rollup__factory {
    return super.connect(signer) as Rollup__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RollupInterface {
    return new utils.Interface(_abi) as RollupInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Rollup {
    return new Contract(address, _abi, signerOrProvider) as Rollup;
  }
}
