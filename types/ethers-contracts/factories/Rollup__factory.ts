/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Rollup, RollupInterface } from "../Rollup";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_participatingInterface",
        type: "address",
      },
      {
        internalType: "address",
        name: "_manager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "expected",
        type: "address",
      },
    ],
    name: "CALLER_NOT_PORTAL",
    type: "error",
  },
  {
    inputs: [],
    name: "CALLER_NOT_VALIDATOR",
    type: "error",
  },
  {
    inputs: [],
    name: "EMPTY_STATE_ROOT",
    type: "error",
  },
  {
    inputs: [],
    name: "EPOCH_NOT_CONFIRMED",
    type: "error",
  },
  {
    inputs: [],
    name: "INPUTS_HASH_MISMATCH_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INPUTS_LENGTH_MISMATCH_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INPUT_PARAMS_MISMATCH_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_PROOF_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_REQUEST_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_SEQUENCE_SETTLEMENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_STATE_UPDATE_SETTLEMENT",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "Id",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cleared",
        type: "uint256",
      },
    ],
    name: "ObligationsWritten",
    type: "event",
  },
  {
    inputs: [],
    name: "CONFIRMATION_BLOCKS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "confirmStateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    name: "confirmedStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epoch",
    outputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "fraudulent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "getConfirmedStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "getProposedStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastConfirmedEpoch",
    outputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastSettlementIdProcessed",
    outputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "markFraudulent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nextRequestId",
    outputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint8",
                name: "typeIdentifier",
                type: "uint8",
              },
              {
                internalType: "Id",
                name: "sequenceId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "participatingInterface",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "structData",
                type: "bytes",
              },
            ],
            internalType: "struct StateUpdateLibrary.StateUpdate",
            name: "stateUpdate",
            type: "tuple",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct StateUpdateLibrary.SignedStateUpdate",
        name: "_signedUpdate",
        type: "tuple",
      },
      {
        internalType: "Id",
        name: "_stateRootId",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stateUpdateId",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "parentUtxo",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "depositUtxo",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "participatingInterface",
            type: "address",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "Id",
            name: "chainId",
            type: "uint256",
          },
        ],
        internalType: "struct StateUpdateLibrary.UTXO[]",
        name: "_inputs",
        type: "tuple[]",
      },
    ],
    name: "processSettlement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "proposalBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_stateRoot",
        type: "bytes32",
      },
    ],
    name: "proposeStateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Id",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposedStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "requestSettlement",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405260016000556000600155600160065560026007553480156200002557600080fd5b50604051620019fa380380620019fa83398101604081905262000048916200007d565b6001600160a01b0391821660a05216608052620000b5565b80516001600160a01b03811681146200007857600080fd5b919050565b600080604083850312156200009157600080fd5b6200009c8362000060565b9150620000ac6020840162000060565b90509250929050565b60805160a0516118f162000109600039600050506000818161028601528181610348015281816104d60152818161058e0152818161086501528181610baa01528181610d800152610eff01526118f16000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c806379e1ccee116100b2578063ab4c514911610081578063b97dd9e211610066578063b97dd9e214610252578063c98bdc031461025a578063f27388611461027a57600080fd5b8063ab4c51491461022c578063b59c23c11461023f57600080fd5b806379e1ccee146101bc578063887412b7146101fa578063900cf0cf1461021a578063a9275f0a1461022357600080fd5b80634cc4f7c0116100ee5780634cc4f7c0146101785780636a84a9851461018b5780636bb38f8d14610194578063706efcd0146101a757600080fd5b80633003f147146101205780634698bb221461014657806348a8c9211461014f5780634aaac3991461016f575b600080fd5b61013361012e366004611148565b610282565b6040519081526020015b60405180910390f35b61013360065481565b61013361015d366004611181565b60056020526000908152604090205481565b61013361c35081565b610133610186366004611181565b61043e565b61013360075481565b6101336101a2366004611181565b61048c565b6101ba6101b5366004611181565b6104a8565b005b6101ea6101ca36600461119a565b600460209081526000928352604080842090915290825290205460ff1681565b604051901515815260200161013d565b610133610208366004611181565b60036020526000908152604090205481565b61013360005481565b61013360015481565b6101ba61023a366004611208565b6106ad565b6101ba61024d366004611181565b610efd565b600054610133565b610133610268366004611181565b60026020526000908152604090205481565b6101ba61100e565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636425666b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031391906112df565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461042b57337f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636425666b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d591906112df565b6040517ffeb970c100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff92831660048201529116602482015260440160405180910390fd5b5060078054600181019091555b92915050565b60008181526005602052604081205490819003610487576040517fa597b61c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b6000818152600260205260408120549081900361048757600080fd5b6040517ffacd743b0000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063facd743b90602401602060405180830381865afa158015610532573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055691906112fc565b61058c576040517fd6917b3700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d8dfeb456040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061b91906112df565b73ffffffffffffffffffffffffffffffffffffffff16635541105e6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561066257600080fd5b505af1158015610676573d6000803e3d6000fd5b5050600080548152600260209081526040808320869055858352600390915281204390555460010191506106a79050565b60005550565b600085815260056020526040812054908190036106f6576040517f5aba372c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061072a8686848b60405160200161070f9190611378565b6040516020818303038152906040528051906020012061108d565b905080610763576040517f7657200300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600261076f89806114ac565b61077d9060208101906114ea565b60ff16146107b7576040517f5424b3dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006107c389806114ac565b6107d1906060810190611505565b8101906107de919061169e565b602081015151909150841461081f576040517ffcd1e3f900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805160a081015160065460010114610863576040517ffc4db1bf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636425666b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f291906112df565b73ffffffffffffffffffffffffffffffffffffffff16637b6d899d82606001518360405160200161097e9190600060c08201905073ffffffffffffffffffffffffffffffffffffffff80845116835280602085015116602084015280604085015116604084015250606083015160608301526080830151608083015260a083015160a083015292915050565b604051602081830303815290604052805190602001206040518363ffffffff1660e01b81526004016109ba929190918252602082015260400190565b602060405180830381865afa1580156109d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fb91906112fc565b1580610a0b575060808101514614155b15610a42576040517ffa47e1e900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b85811015610d415736878783818110610a6057610a60611782565b905061010002019050600081604051602001610a7c91906117b1565b60405160208183030381529060405280519060200120905084602001518381518110610aaa57610aaa611782565b60200260200101518114610aea576040517f5011f60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b602084015173ffffffffffffffffffffffffffffffffffffffff16610b1560e0840160c08501611841565b73ffffffffffffffffffffffffffffffffffffffff16141580610b715750835173ffffffffffffffffffffffffffffffffffffffff16610b586020840184611841565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610ba8576040517fad08c18f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636425666b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3791906112df565b73ffffffffffffffffffffffffffffffffffffffff1663412f3974828b8b87818110610c6557610c65611782565b90506101000201608001358c8c88818110610c8257610c82611782565b610c99926020610100909202019081019150611841565b8d8d89818110610cab57610cab611782565b90506101000201602001356040518563ffffffff1660e01b8152600401610d019493929190938452602084019290925273ffffffffffffffffffffffffffffffffffffffff166040830152606082015260800190565b600060405180830381600087803b158015610d1b57600080fd5b505af1158015610d2f573d6000803e3d6000fd5b505060019094019350610a4592505050565b506006546001016006819055507f2fbe32bf5c43587f241785776e03af9725712c4d9349d5d487e0b080554759cf8160a00151826000015183602001517f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636425666b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610de9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e0d91906112df565b855160208701516040517fb2838a7300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9283166004820152908216602482015291169063b2838a7390604401602060405180830381865afa158015610e88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eac919061185e565b604051610ee9949392919093845273ffffffffffffffffffffffffffffffffffffffff928316602085015291166040830152606082015260800190565b60405180910390a150505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b2bbcfc06040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8c91906112df565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fc357600080fd5b600090815260046020908152604080832060028352818420548452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b6001805401600181905560009081526002602090815260408083205480845260039092529091205461104261c350826118a6565b43101561104e57600080fd5b600154600090815260046020908152604080832085845290915290205460ff161561107857600080fd5b50600154600090815260056020526040902055565b60008261109b8686856110a5565b1495945050505050565b600081815b848110156110e8576110d4828787848181106110c8576110c8611782565b905060200201356110f1565b9150806110e0816118b9565b9150506110aa565b50949350505050565b600081831061110d57600082815260208490526040902061111c565b60008381526020839052604090205b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461114557600080fd5b50565b6000806040838503121561115b57600080fd5b823561116681611123565b9150602083013561117681611123565b809150509250929050565b60006020828403121561119357600080fd5b5035919050565b600080604083850312156111ad57600080fd5b50508035926020909101359150565b60008083601f8401126111ce57600080fd5b50813567ffffffffffffffff8111156111e657600080fd5b6020830191508360208260081b850101111561120157600080fd5b9250929050565b6000806000806000806080878903121561122157600080fd5b863567ffffffffffffffff8082111561123957600080fd5b908801906080828b03121561124d57600080fd5b909650602088013595506040880135908082111561126a57600080fd5b818901915089601f83011261127e57600080fd5b81358181111561128d57600080fd5b8a60208260051b85010111156112a257600080fd5b6020830196508095505060608901359150808211156112c057600080fd5b506112cd89828a016111bc565b979a9699509497509295939492505050565b6000602082840312156112f157600080fd5b815161111c81611123565b60006020828403121561130e57600080fd5b8151801515811461111c57600080fd5b803560ff8116811461048757600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60208152600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff818436030181126113b057600080fd5b60806020840152830160ff6113c48261131e565b1660a0840152602081013560c084015260408101356113e281611123565b73ffffffffffffffffffffffffffffffffffffffff1660e08401526060810135368290037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe101811261143357600080fd5b0160208101903567ffffffffffffffff81111561144f57600080fd5b80360382131561145e57600080fd5b60806101008501526114756101208501828461132f565b9150506114846020850161131e565b60ff811660408501525060408401356060840152606084013560808401528091505092915050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff818336030181126114e057600080fd5b9190910192915050565b6000602082840312156114fc57600080fd5b61111c8261131e565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261153a57600080fd5b83018035915067ffffffffffffffff82111561155557600080fd5b60200191503681900382131561120157600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156115bc576115bc61156a565b60405290565b60405160c0810167ffffffffffffffff811182821017156115bc576115bc61156a565b600082601f8301126115f657600080fd5b8135602067ffffffffffffffff808311156116135761161361156a565b8260051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f830116810181811084821117156116565761165661156a565b60405293845285810183019383810192508785111561167457600080fd5b83870191505b848210156116935781358352918301919083019061167a565b979650505050505050565b6000602082840312156116b057600080fd5b813567ffffffffffffffff808211156116c857600080fd5b9083019081850360e08112156116dd57600080fd5b6116e5611599565b60c08212156116f357600080fd5b6116fb6115c2565b9150833561170881611123565b8252602084013561171881611123565b6020830152604084013561172b81611123565b80604084015250606084013560608301526080840135608083015260a084013560a083015281815260c084013591508282111561176757600080fd5b611773878386016115e5565b60208201529695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b610100810182356117c181611123565b73ffffffffffffffffffffffffffffffffffffffff80821684526020850135602085015260408501356040850152606085013560608501526080850135608085015260a0850135915061181382611123565b90811660a084015260c08401359061182a82611123565b1660c083015260e092830135929091019190915290565b60006020828403121561185357600080fd5b813561111c81611123565b60006020828403121561187057600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561043857610438611877565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036118ea576118ea611877565b506001019056";

type RollupConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RollupConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Rollup__factory extends ContractFactory {
  constructor(...args: RollupConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _participatingInterface: string,
    _manager: string,
    overrides?: Overrides & { from?: string }
  ): Promise<Rollup> {
    return super.deploy(
      _participatingInterface,
      _manager,
      overrides || {}
    ) as Promise<Rollup>;
  }
  override getDeployTransaction(
    _participatingInterface: string,
    _manager: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _participatingInterface,
      _manager,
      overrides || {}
    );
  }
  override attach(address: string): Rollup {
    return super.attach(address) as Rollup;
  }
  override connect(signer: Signer): Rollup__factory {
    return super.connect(signer) as Rollup__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RollupInterface {
    return new utils.Interface(_abi) as RollupInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Rollup {
    return new Contract(address, _abi, signerOrProvider) as Rollup;
  }
}
