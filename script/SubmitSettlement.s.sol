// SPDX-License-Identifier: BSD-3-Clause
// Copyright Â© 2023 TXA PTE. LTD.
pragma solidity ^0.8.19;

import "forge-std/Script.sol";
import "../src/Portal/Portal.sol";
import "../src/Staking/Staking.sol";
import "../src/Oracle/Oracle.sol";
import "../src/Rollup/Rollup.sol";
import "../src/Manager/ProcessingChain/ProcessingChainManager.sol";
import "@openzeppelin/contracts/token/ERC20/presets/ERC20PresetFixedSupply.sol";

contract ReportPrice is Script {
    using stdJson for string;

    function run() external {
        ProcessingChainManager manager = ProcessingChainManager(vm.envAddress("MANAGER"));
        Oracle oracle = Oracle(manager.oracle());
        Rollup rollup = Rollup(manager.rollup());
        Staking staking = Staking(manager.staking());
        ERC20PresetFixedSupply stablecoin = ERC20PresetFixedSupply(staking.stablecoin());
        ERC20PresetFixedSupply protocolToken = ERC20PresetFixedSupply(staking.protocolToken());

        vm.startBroadcast(vm.envUint("PRIVATE_KEY"));
        // for(uint256 i = 0; i < 10; i++) {
        //     portal.depositNativeAsset{value: 0.1 ether}();
        // }
        // portal.requestSettlement(address(0));
        uint256[3] memory tranches = staking.getActiveTranches();
        protocolToken.approve(manager.staking(), 300_000e18);
        stablecoin.approve(manager.staking(), 100_000e6);
        staking.stake(address(stablecoin), 100_000e6, tranches[2]);
        staking.stake(address(protocolToken), 300_000e18, tranches[2]);
        // bytes memory data =
        // hex"df686c85fc13ce11f4b35942b7365648b9429f691ccd689ac0557f878fcff6a2f13bf6d2000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000003400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000001cf88c804ba481192af0d535045d4d074040032bd97f0b7697041ac05efc2e64e6777fda5f227b1ab9757764e3a1ed222fe8efb9a45644adca2b9f34e4d5d2ee85000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000003f7356da2b857bf9e468812700773093a47fb3ed000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000001c0000000000000000000000000d07fe83ae7a716cfdb1e1a3514c2dce54516f5f3000000000000000000000000355e4653db9d29423455041f635c5cfcf7b59746000000000000000000000000d07fe83ae7a716cfdb1e1a3514c2dce54516f5f300000000000000000000000000000000000000000000000000000000000000aa00000000000000000000000000000000000000000000000000000000000000050000000000000000000000000000000000000000000000000000000000000001000000000000000000000000d07fe83ae7a716cfdb1e1a3514c2dce54516f5f3000000000000000000000000355e4653db9d29423455041f635c5cfcf7b597460000000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000002114a0c0000000000000000000000000d07fe83ae7a716cfdb1e1a3514c2dce54516f5f3000000000000000000000000355e4653db9d29423455041f635c5cfcf7b597460000000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000019dadb39efbc7a2f7b15d26945f62353ce327753c16e7c33d5efbcc1c3b2d079e";
        // w/o method id
        // bytes memory data =
        //     hex"4bf0abe8f4f51b75f02c8efbb128aeb103ed92af9489cd4562bfd0a2eaf20d5f000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000003400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000001ccaf44979d00cf026570ba56b3ff5313cd4c07b326806764c6f086df3256650e34f4be983b5661364d67f7705da8fda3d29a1687442ad85f4199646fad161d9bd000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000440000000000000000000000003f7356da2b857bf9e468812700773093a47fb3ed000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000001c000000000000000000000000085752248d8cca2d9321f0278fc785738e1236ce4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000085752248d8cca2d9321f0278fc785738e1236ce4000000000000000000000000000000000000000000000000000000000000008d0000000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000000000004400000000000000000000000085752248d8cca2d9321f0278fc785738e1236ce4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000050000000000000000000000000000000000000000000000000c7d713b49da000000000000000000000000000085752248d8cca2d9321f0278fc785738e1236ce40000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007ac65005b5fc2a095e8bac5b07f9542a55b25d264e192d18eed238143e7f57b299b3de61d324ba022d9ad003d80a2895c9fc075f24796745b54f9c360e0f640ae42ddd44d3180477a578b89616c02101b60acf6e33ebe95b1510c3592e07ef4347cda695667b57750bed473781f28bf9014458049e213f5a5254d629746aa7c8bfacff6a797e17cecc17a04a39795cf386b8f0068e25575c79c5b6e73a674cdeea5eca7d148fe458cd4face41be5612219374b88e3e7ca0ff40a3f0698e6a68204ea2ad496ed9e37cb26f7f65dbd7ff88279f1183cf255280d30afa478be69d46";
        // (bytes32 _stateRoot, StateUpdateLibrary.SignedStateUpdate memory _signedUpdate, bytes32[] memory _proof) =
        //     abi.decode(data, (bytes32, StateUpdateLibrary.SignedStateUpdate, bytes32[]));
        // rollup.submitSettlement{ value: 0.5 ether }(_stateRoot, _signedUpdate, _proof);
        vm.stopBroadcast();
    }
}
